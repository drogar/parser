#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'
if Kernel.respond_to? :require_relative
  require_relative './../parser'
else
  require 'parser'
end

Parser.check_for_encoding_support

module Parser
  class Ruby23 < Parser::Base

module_eval(<<'...end ruby23.y/module_eval...', 'ruby23.y', 2356)

  def version
    23
  end

  def default_encoding
    Encoding::UTF_8
  end
...end ruby23.y/module_eval...
##### State transition tables begin ###

clist = [
'-476,862,270,216,217,628,817,-476,-476,-476,-288,-97,-476,-476,-476',
'612,-476,113,219,614,649,-83,112,-99,-476,991,-476,-476,-476,270,591',
'-69,216,217,517,-98,-476,-476,-98,-476,-476,-476,-476,-476,-104,-103',
'808,570,570,-100,-288,570,-93,-479,570,648,216,217,-99,220,-479,582',
'-102,843,-99,583,-476,-476,-476,-476,-476,-476,-476,-476,-476,-476,-476',
'-476,-476,-476,274,611,-476,-476,-476,613,-476,-476,717,269,-476,-104',
'-102,-476,-476,-101,-476,220,-476,808,-476,576,-476,-476,-105,-476,-476',
'-476,-476,-476,570,-476,-291,-476,-102,816,269,-100,-479,-291,-291,-291',
'-575,-101,-291,-291,-291,-476,-291,-97,-476,-476,-476,-476,-97,-476',
'590,-476,-291,-291,-291,-99,-476,-476,-89,220,-99,717,-291,-291,220',
'-291,-291,-291,-291,-291,-98,220,-91,113,-574,-98,-104,-103,112,113',
'113,-104,-103,113,112,112,113,-90,112,717,-97,112,-291,-291,-291,-291',
'-291,-291,-291,-291,-291,-291,-291,-291,-291,-291,113,-104,-291,-291',
'-291,112,775,-291,-574,-93,-291,-103,-92,-291,-291,270,-291,511,-291',
'833,-291,772,-291,-291,599,-291,-291,-291,-291,-291,-105,-291,270,-291',
'265,-105,113,-105,220,844,-102,112,649,-100,504,-102,514,-291,-100,-101',
'-291,-291,-291,-291,-101,-291,773,-291,-578,113,446,220,-291,-103,112',
'-578,-578,-578,216,217,-578,-578,-578,-91,-578,113,-575,648,-100,265',
'112,-491,503,-578,-578,-578,-578,113,601,600,597,-578,112,-88,-578,-578',
'265,-578,-578,-578,-578,-578,269,216,217,664,220,-93,852,-92,-95,-90',
'550,-102,547,546,545,-105,548,269,-94,216,217,-68,-578,-578,-578,-578',
'-578,-578,-578,-578,-578,-578,-578,-578,-578,-578,-98,-91,-578,-578',
'-578,-578,774,-578,-96,220,-578,649,-578,-578,-578,808,-578,-574,-578',
'-490,-578,-578,-578,-578,220,-578,-578,-578,-578,-578,500,-578,-578',
'-578,758,-93,-574,-92,599,-90,-578,-91,91,92,-91,529,648,-578,531,599',
'-578,-578,-578,-578,-91,-578,835,-578,-578,113,839,808,-578,-101,112',
'-578,-578,-578,91,92,-578,-578,-578,518,-578,-93,-97,-92,-93,-90,-92',
'-90,-90,-578,649,-265,-572,240,-93,679,-92,-99,-90,79,-578,-578,517',
'-578,-578,-578,-578,-578,601,600,550,80,547,546,545,-482,548,492,751',
'601,600,81,-482,113,861,648,93,94,112,749,-578,-578,-578,-578,-578,-578',
'-578,-578,-578,-578,-578,-578,-578,-578,-479,265,-578,-578,-578,-95',
'633,-479,93,94,-578,599,-572,-578,599,-104,-479,599,-578,240,-578,599',
'-578,-578,599,-578,-578,-578,-578,-578,-479,-578,-578,-578,265,-572',
'-482,-479,-479,-479,216,217,-479,-479,-479,212,-479,-578,959,220,-578',
'-578,520,-92,-479,-578,-479,-479,-479,113,220,444,-578,-101,112,-479',
'-479,-479,-491,-479,-479,-479,-479,-479,490,601,600,615,601,600,610',
'601,600,604,488,601,600,602,601,600,597,220,566,565,983,-490,-479,-479',
'-479,-479,-479,-479,-479,-479,-479,-479,-479,-479,-479,-479,213,679',
'-479,-479,-479,-89,-479,-479,479,529,-479,599,531,-479,-479,-98,-479',
'-483,-479,801,-479,214,-479,-479,-483,-479,-479,-479,-479,-479,-291',
'-479,-88,-479,863,398,864,-291,-291,-291,400,399,-97,-291,-291,694,-291',
'-479,240,867,-479,-479,-479,-479,212,-479,869,-479,-571,113,113,263',
'-479,-479,112,112,-291,-291,-96,-291,-291,-291,-291,-291,871,601,600',
'606,-105,-291,237,-476,-483,-485,239,238,-291,212,-476,529,-485,-575',
'528,873,263,-291,-291,-291,-291,-291,-291,-291,-291,-291,-291,-291,-291',
'-291,-291,-291,-476,-488,-291,-291,-291,220,632,-476,-488,213,-291,875',
'-571,-291,212,876,-476,-488,-291,532,-291,941,-291,-291,879,-291,-291',
'-291,-291,-291,587,-291,-579,-291,-291,-571,-476,219,-485,-579,-579',
'-579,213,881,-579,-579,-579,-291,-579,529,-291,-291,531,-94,882,-291',
'679,-579,-579,-579,-579,448,-291,-103,884,-476,-488,447,-579,-579,627',
'-579,-579,-579,-579,-579,-263,-291,888,213,890,-281,533,-481,-291,839',
'808,-486,-281,-575,-481,445,893,-291,-486,694,895,-281,-579,-579,-579',
'-579,-579,-579,-579,-579,-579,-579,-579,-579,-579,-579,897,212,-579',
'-579,-579,-91,899,-579,510,901,-579,901,-487,-579,-579,-100,-579,508',
'-579,-487,-579,220,-579,-579,492,-579,-579,-579,-579,-579,-291,-579',
'-579,-579,-281,907,-481,-484,212,490,-486,909,212,240,-484,941,492,-579',
'911,579,-579,-579,-579,-579,587,-579,-246,-579,577,259,576,220,-579',
'-246,-246,-246,213,390,-246,-246,-246,-292,-246,401,580,237,917,-487',
'-292,239,238,-246,-246,-246,743,744,581,-292,745,107,108,388,-246,-246',
'920,-246,-246,-246,-246,-246,220,479,-484,213,924,212,-266,213,479,759',
'-264,550,989,547,546,545,753,548,752,748,738,987,-246,-246,-246,-246',
'-246,-246,-246,-246,-246,-246,-246,-246,-246,-246,-292,935,-246,-246',
'-246,720,576,-246,713,265,-246,942,703,-246,-246,943,-246,220,-246,319',
'-246,706,-246,-246,711,-246,-246,-246,-246,-246,-282,-246,-246,-246',
'213,952,953,-282,-282,-282,710,709,-282,-282,-282,212,-282,-246,616',
'701,-246,-246,443,-246,699,-246,-282,-282,-282,697,961,444,-246,318',
'963,964,-282,-282,695,-282,-282,-282,-282,-282,969,-489,738,-334,694',
'-292,694,973,-489,975,-334,977,-292,979,979,691,619,-489,-263,-334,259',
'-292,-282,-282,-282,-282,-282,-282,-282,-282,-282,-282,-282,-282,-282',
'-282,213,212,-282,-282,-282,687,685,-282,211,684,-282,990,621,-282,-282',
'220,-282,209,-282,901,-282,901,-282,-282,901,-282,-282,-282,-282,-282',
'-489,-282,-334,-282,-292,996,220,550,212,547,546,545,961,548,625,585',
'215,-282,679,626,-282,-282,-282,-282,587,-282,-580,-282,522,220,668',
'555,-282,-580,-580,-580,213,555,-580,-580,-580,558,-580,-83,703,220',
'265,558,-575,-574,684,-580,-580,-580,-580,938,208,547,546,545,636,548',
'-580,-580,639,-580,-580,-580,-580,-580,207,220,220,213,566,565,961,240',
'1015,559,566,565,1016,1017,550,559,547,546,545,979,548,979,-580,-580',
'-580,-580,-580,-580,-580,-580,-580,-580,-580,-580,-580,-580,979,220',
'-580,-580,-580,206,121,-580,240,240,-580,240,901,-580,-580,703,-580',
'961,-580,240,-580,109,-580,-580,706,-580,-580,-580,-580,-580,979,-580',
'-580,-580,550,,547,546,545,,548,237,,,,239,238,-580,235,236,-580,-580',
'-580,-580,,-580,-411,-580,,,,,-580,-411,-411,-411,,,-411,-411,-411,703',
'-411,240,116,117,118,119,120,,906,-411,-411,-411,116,117,118,119,120',
'254,255,,-411,-411,,-411,-411,-411,-411,-411,550,,547,546,545,237,548',
'243,,239,238,,235,236,,,241,,242,,,,-411,-411,-411,-411,-411,-411,-411',
'-411,-411,-411,-411,-411,-411,-411,,703,-411,-411,-411,,,-411,,265,-411',
',,-411,-411,,-411,,-411,,-411,,-411,-411,,-411,-411,-411,-411,-411,',
'-411,-411,-411,550,,547,546,545,555,548,,550,,547,546,545,-411,548,558',
'-411,-411,-246,-411,,-411,,,,-246,-246,-246,-411,,-246,-246,-246,,-246',
',550,553,547,546,545,555,548,-246,-246,703,563,562,566,565,,558,,559',
'-246,-246,,-246,-246,-246,-246,-246,,,,,550,,547,546,545,555,548,553',
'938,,547,546,545,220,548,558,,,566,565,,,550,559,547,546,545,,548,-246',
',-298,,,,,-246,553,-298,-298,-298,265,-246,-298,-298,-298,,-298,566',
'565,,,240,559,,,,-298,-298,703,,,,,-246,-246,,-298,-298,,-298,-298,-298',
'-298,-298,,,,,-246,,,-246,,237,,,-246,239,238,,235,236,,-246,,,-298',
'-298,-298,-298,-298,-298,-298,-298,-298,-298,-298,-298,-298,-298,,,-298',
'-298,-298,,,-298,,274,-298,,,-298,-298,,-298,,-298,,-298,,-298,-298',
',-298,-298,-298,-298,-298,,-298,550,-298,547,546,545,,548,116,117,118',
'119,120,,,,-298,,,-298,-298,,-298,,-298,292,69,70,71,9,57,-298,,,63',
'64,,,703,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19',
',,,,637,8,45,294,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,240,244,249,250,251,246,248,256,257,252,253,,233,234,,,254,255',
',40,,,33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236,247,245,241,20',
'242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,258,,-240,,,62,,81,93,94',
'292,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,19,,,,,637,8,45,294,10,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,240,244,249,250,251,246,248,256,257,252',
'253,,233,234,,,254,255,,40,,,33,,,58,59,,,60,,35,237,,243,44,239,238',
',235,236,247,245,241,20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,258',
',,,,62,,81,93,94,292,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,101,100,102,103,,,19,,,,,622,8,45,294,10,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,240,244,249,250,251,246,248',
'256,257,252,253,,233,234,,,254,255,,40,,,33,,,58,59,,,60,,35,237,,243',
'44,239,238,,235,236,247,245,241,20,242,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,,258,,,,,62,,81,93,94,292,69,70,71,9,57,,,,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,294,10',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,240,244,249,250',
'251,246,248,256,257,252,253,,233,234,,,254,255,,40,,,33,,,58,59,,,60',
',35,237,,243,44,239,238,,235,236,247,245,241,20,242,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,258,,,,,62,,81,93,94,292,69,70,71,9,57,,,,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,',
',,,8,45,294,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
'240,244,249,250,251,246,248,256,257,252,253,,233,234,,,254,255,,40,',
',33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236,247,245,241,20,242',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,258,,,,,62,,81,93,94,292,69,70',
'71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,294,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,240,244,249,250,251,246,248,256,257,252,253,,233,234,,,254',
'255,,40,,,33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236,247,245,241',
'20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,258,,,,,62,,81,93,94,292',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,19,,,,,,8,45,294,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,240,244,249,250,251,246,248,256,257,252,253,,233',
'234,,,254,255,,40,,,33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236',
'247,245,241,20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,258,,,,,62',
',81,93,94,292,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,',
',,29,28,27,101,100,102,103,,,19,,,,,,8,45,294,10,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,240,244,249,250,251,246,248,256,257',
'252,253,,233,234,,,254,255,,40,,,33,,,58,59,,,60,,35,237,,243,44,239',
'238,,235,236,247,245,241,20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',258,,,,,62,,81,93,94,292,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,294,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,240,244,249,250,251,246',
'248,256,257,252,253,,233,234,,,254,255,,40,,,33,,,58,59,,,60,,35,237',
',243,44,239,238,,235,236,247,245,241,20,242,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,258,,,,,62,,81,93,94,292,69,70,71,9,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,294',
'10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,240,244,249',
'250,251,246,248,256,257,252,253,,233,234,,,254,255,,40,,,33,,,58,59',
',,60,,35,237,,243,44,239,238,,235,236,247,245,241,20,242,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,258,,,,,62,,81,93,94,292,69,70,71,9,57,,',
',63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19',
',,,,,8,45,294,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,240,244,249,250,251,246,248,256,257,252,253,,233,234,,,254,255,,40',
',,296,,,58,59,,,60,,35,237,,243,44,239,238,,235,236,247,245,241,20,242',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,258,,,,,62,,81,93,94,292,69,70',
'71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,294,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,240,244,249,250,251,246,248,256,257,252,253,,233,234,,,254',
'255,,40,,,33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236,247,245,241',
'20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,258,,,,,62,,81,93,94,292',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,19,,,,,,8,45,294,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,240,244,249,250,251,246,248,256,257,252,253,,233',
'234,,,254,255,,40,,,296,,,58,59,,,60,,35,237,,243,44,239,238,,235,236',
'247,245,241,20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,258,,,,,62',
',81,93,94,292,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,',
',,29,28,27,101,100,102,103,,,19,,,,,,8,45,294,10,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,240,244,249,250,251,246,248,256,257',
'252,253,,233,234,,,254,255,,40,,,296,,,58,59,,,60,,35,237,,243,44,239',
'238,,235,236,247,245,241,20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',258,,,,,62,,81,93,94,292,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,294,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,240,244,249,250,251,246',
'248,256,257,252,253,,233,234,,,254,255,,40,,,33,,,58,59,,,60,,35,237',
',243,44,239,238,,235,236,247,245,241,20,242,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,258,,,,,62,,81,93,94,292,69,70,71,9,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,294',
'10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,240,244,249',
'250,251,246,248,256,257,252,253,,233,234,,,254,255,,40,,,33,,,58,59',
',,60,,35,237,,243,44,239,238,,235,236,247,245,241,20,242,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,258,,,,,62,,81,93,94,292,69,70,71,9,57,,',
',63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19',
',,,,,8,45,294,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,240,244,249,250,251,246,248,256,257,252,253,,233,234,,,254,255,,40',
',,33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236,247,245,241,20,242',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,220,258,,,,,62,,81,93,94,292,69',
'70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,19,,,,,,8,45,294,10,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,240,244,249,250,251,246,248,256,257,252,253,,-599,-599',
',,254,255,,40,,,33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236,247',
'245,241,20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93',
'94,292,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28',
'27,101,100,102,103,,,19,,,,,,8,45,294,10,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,240,-599,-599,-599,-599,246,248,,,-599,-599',
',,,,,254,255,,40,,,33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236',
'247,245,241,20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81',
'93,94,292,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,8,45,294,10,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,240,244,249,250,251,246,248,256,257,252',
'253,,-599,-599,,,254,255,,40,,,33,,,58,59,,,60,,35,237,,243,44,239,238',
',235,236,247,245,241,20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,',
',,,,62,,81,93,94,292,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,294,10,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,240,-599,-599,-599,-599,246',
'248,,,-599,-599,,,,,,254,255,,40,,,33,,,58,59,,,60,,35,237,,243,44,239',
'238,,235,236,247,245,241,20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',,,,,,62,,81,93,94,292,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,294,10,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,240,,,,,,,,,,,,,,,,254,255',
',40,,,33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236,,,241,20,242',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,292,69,70,71',
'9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,294,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,240,,,,,,,,,,,,,,,,254,255,,40,,,33,,,58,59,,,60,,35,237',
',243,44,239,238,,235,236,,,241,20,242,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,,,,62,,81,93,94,292,69,70,71,9,57,,,,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,294,10,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,240,,,,,,,,,,,,,',
',,254,255,,40,,,33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236,,,241',
'20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,292',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,19,,,,,,8,45,294,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,240,244,249,250,251,246,248,,,252,253,,,,,,254,255',
',40,,,33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236,247,245,241,20',
'242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,292,69',
'70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,19,,,,,,8,45,294,10,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,240,-599,-599,-599,-599,246,248,,,-599,-599,,,,,,254',
'255,,40,,,33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236,247,245,241',
'20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,292',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,19,,,,,,8,45,294,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,240,244,249,250,251,246,248,256,,252,253,,,,,,254',
'255,,40,,,33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236,247,245,241',
'20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,5,69',
'70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,19,,,,,,8,45,7,10,105,104,106,95,56,97,96,98,,99,107,108,',
'91,92,42,43,41,240,-599,-599,-599,-599,246,248,,,-599,-599,,,,,,254',
'255,,40,,,33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236,247,245,241',
'20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,292',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,19,,,,,,8,45,294,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,240,-599,-599,-599,-599,246,248,,,-599,-599,,,,',
',254,255,,40,,,33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236,247',
'245,241,20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93',
'94,5,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,19,,,,,,8,45,7,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,240,-599,-599,-599,-599,246,248,,,-599,-599,,,,',
',254,255,,40,,,33,,,58,59,,,60,,35,237,,243,44,239,238,,235,236,247',
'245,241,20,242,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93',
'94,5,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,19,,,,,,8,45,7,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,240,,,,,,,,,,,,,,,,254,255,,40,,,33,,,58,59,,,60',
',35,237,,,44,239,238,,235,236,,,,20,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73',
',,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,240,,,,,,,,,,,,,,,,254,255,,225',
',,231,,,58,59,,,60,,,237,,243,44,239,238,,235,236,,,,230,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,240,,,,,,,,,,,,,',
',,254,255,,225,,,231,,,58,59,,,60,,,237,,243,44,239,238,,235,236,,,',
'20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94',
'63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19',
',,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,',
',,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,113,,,,,112,62,,81,93,94,69,70,71,,57,',
',,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103',
',,232,,,,,,,309,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,315',
',,,,,,,,,,,,,,,,,,,350,,,33,,,58,59,,,60,,35,,,,,,,,,,,,,,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,',
',309,,,105,104,106,355,56,97,96,356,,99,107,108,,91,92,,,315,,,,,,,',
',,,,,,,,,362,,,357,,,231,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,309,,',
'105,104,106,355,56,97,96,356,,99,107,108,,91,92,,,315,,,,,,,,,,,,,,',
',,,,,357,,,231,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312',
'72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,',
'231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72',
'73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95',
'56,97,96,98,286,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,',
'231,,,58,59,,,60,,,,281,,44,,,287,,,,,,230,,,,,89,284,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312',
'72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,',
'231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72',
'73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95',
'56,97,96,98,286,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,',
'231,,,58,59,,,60,,,,,,44,,,287,,,,,,230,,,,,89,284,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72',
'73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95',
'56,97,96,98,286,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,',
'231,,,58,59,,,60,,283,,,,44,,,287,,,,,,230,,,,,89,284,82,83,,84,86,85',
'87,,,,,80,88,,,,,,,62,,81,93,94,69,70,71,9,57,,,,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7,10,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,,,390,62,,81,93,94,69,70,71,,57,,,,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225',
',,231,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59',
',,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,',
',,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103',
',,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,69,70,71,9,57',
',,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',19,,,,,,8,45,,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232',
',,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,',
',,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,232,,,,,,,45,,,105',
'104,106,95,56,97,96,98,286,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,',
',,,,,225,,,231,,,58,59,,,60,,283,,281,,44,,,287,,,,,,230,,,,,89,284',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,',
',309,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,315,,,,,,,,,',
',,,,,,,,,,878,,,231,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,232,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,',
'231,,,58,59,,,60,,406,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,',
'58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,286',
'99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60',
',283,,281,,44,,,287,,,,,,230,,,,,89,284,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,',
'307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59',
',,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308',
'314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,661',
',,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,',
',,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,406,,,,44,,,,,,,,,230',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,',
'58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,',
',,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,220,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314',
'101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44',
',,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100',
'102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,',
',,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,',
',,,,45,,,105,104,106,95,56,97,96,98,286,99,107,108,,91,92,42,43,41,',
',,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,661,,281,,44,,,287,,,,,,230',
',,,,89,284,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,',
'232,,,,,,,45,,,105,104,106,95,56,97,96,98,286,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,281,,44,,,287,,,,,,230',
',,,,89,284,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,',
'232,,,,,,,309,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,315',
',,,,,,,,,,,,,,,,,,,949,,,231,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,,,,62,,81,93,94,69,70,71,9,57,,,,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,294,10',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,',
',,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,,,390,62,,81,93,94,69,70,71,9,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7',
'10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,',
',,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311',
'312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225',
',,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72',
'73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231',
',,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,',
',,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58',
'59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307',
'308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60',
',,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314',
'101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44',
',,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100',
'102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,',
',,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102',
'103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,',
'232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311',
'312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225',
',,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72',
'73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231',
',,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,',
',,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58',
'59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307',
'308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60',
',,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314',
'101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44',
',,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100',
'102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,',
',,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102',
'103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,',
'232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311',
'312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,309,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,,,315,,,,,,,,,,,,,,,,,,,,878,',
',231,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,',
',,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58',
'59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,286',
'99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60',
',283,,281,,44,,,287,,,,,,230,,,,,89,284,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,286',
'99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60',
',283,,281,,44,,,287,,,,,,230,,,,,89,284,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,286',
'99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60',
',283,,281,,44,,,287,,,,,,230,,,,,89,284,82,83,,84,86,85,87,,,,,80,88',
'220,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,',
',,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58',
'59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307',
'308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60',
',,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314',
'101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44',
',,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100',
'102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,',
',,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,',
',89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232',
',,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,',
',,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,,,,62,,81,93,94,69,70,71,9,57,,,,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,,10,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312',
'72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,309,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,,,315,,,,,,,,,,,,,,,,,,,,305,,,231',
',,58,59,,,60,,,550,,547,546,545,555,548,,,,,,,,,558,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,317,,553,62,,81,93,94,69,70,71,,57,566,565,,63',
'64,559,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103',
',,232,,,,,,,309,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,315',
',,,,,,,,,,,,,,,,,,,305,,,301,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,309',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,315,,,,,,,,,,,,,,',
',,,,,305,,,301,,,58,59,,,60,,300,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,232,,,,,,,45,,,105,104,106',
'95,56,97,96,98,286,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225',
',,231,,,58,59,,,60,,283,,281,,44,,,287,,,,,,230,,,,,89,284,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,',
'231,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97',
'96,98,286,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,',
'58,59,,,60,,283,,281,,44,,,287,,,,,,230,,,,,89,284,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56',
'97,96,98,286,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231',
',,58,59,,,60,,283,,281,,44,,,287,,,,,,230,,,,,89,284,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312',
'72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,309,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,,,315,,,,,,,,,,,,,,,,,,,,305,,,231',
',,58,59,,,60,,,550,,547,546,545,555,548,,,,,,,,,558,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,506,,553,62,,81,93,94,69,70,71,,57,566,565,,63',
'64,559,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,232',
',,,,,,45,,,105,104,106,95,56,97,96,98,286,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,283,,281,,44,,,287,,,,,,230',
',,,,89,284,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,309',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,315,,,,,,,,,,,,,,',
',,,,,305,,,301,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312',
'72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,',
'231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72',
'73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231',
',,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,',
',29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60',
',,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314',
'101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44',
',,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100',
'102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,286,99,107,108,',
'91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,661,,,,44',
',,287,,,,,,230,,,,,89,284,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101',
'100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,286,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,',
'287,,,,,,230,,,,,89,284,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62',
'57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100',
'102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
'42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,20',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,',
'232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,',
',309,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,315,,,,,,,,,',
',,,,,,,,,,305,,,301,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,225,,,231,,,58,59,,,60,,406,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,225,,,231,,,58,59,,,60,,283,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,309,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,,,315,,,,,,,,,,,,,,,,,,,,305',
',,301,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,',
',29,28,27,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98',
'286,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59',
',,60,,283,,281,,44,,,287,,,,,,230,,,,,89,284,82,83,,84,86,85,87,,,,',
'80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73',
',,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,522',
',58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,',
',29,28,27,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98',
'286,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59',
',,60,,283,,281,,44,,,287,,,,,,230,,,,,89,284,82,83,,84,86,85,87,,,,',
'80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,',
',,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59',
',,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,',
',,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103',
',,232,,,,,,,45,,,105,104,106,95,56,97,96,98,286,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,283,,281,,44,,,287',
',,,,,230,,,,,89,284,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102',
'103,,,232,,,,,,,309,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
',,315,,,,,,,,,,,,,,,,,,,,305,,,301,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,225,,,231,,,58,59,,,60,,756,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'311,312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,232,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,',
'231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72',
'73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95',
'56,97,96,98,286,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,',
'231,,,58,59,,,60,,661,,281,,44,,,287,,,,,,230,,,,,89,284,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311',
'312,72,73,,,,,,307,308,314,101,100,102,103,,,232,,,,,,,45,,,105,104',
'106,95,56,97,96,98,286,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,',
',225,,,231,,,58,59,,,60,,,,281,,44,,,287,,,,,,230,,,,,89,284,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225',
',,231,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59',
',,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44',
',,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,232,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,225,,,231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,232,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,',
'231,,,58,59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58',
'59,,,60,,,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,311,312,72,73,,,,,,307',
'308,314,101,100,102,103,,,232,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,225,,,231,,,58,59,,,60',
',,,,,44,,,,,,,,,230,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62',
',81,93,94,173,184,174,197,170,190,180,179,200,201,195,178,177,172,198',
'202,203,182,171,185,189,191,183,176,,,,192,199,194,193,186,196,181,169',
'188,187,,,,,,168,175,166,167,163,164,165,124,126,123,,125,,,,,,,,157',
'158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,',
',,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,,,162',
'89,,,,,,,,,,,,,,88,173,184,174,197,170,190,180,179,200,201,195,178,177',
'172,198,202,203,182,171,185,189,191,183,176,,,,192,199,194,193,186,196',
'181,169,188,187,,,,,,168,175,166,167,163,164,165,124,126,,,125,,,,,',
',,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147',
',,,,,,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134',
',,162,89,,,,,,,,,,,,,,88,173,184,174,197,170,190,180,179,200,201,195',
'178,177,172,198,202,203,182,171,185,189,191,183,176,,,,192,199,194,193',
'186,196,181,169,188,187,,,,,,168,175,166,167,163,164,165,124,126,,,125',
',,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146',
'147,,,,,,,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155',
'134,,,162,89,,,,,,,,,,,,,,88,173,184,174,197,170,190,180,179,200,201',
'195,178,177,172,198,202,203,182,171,185,189,191,183,176,,,,192,199,194',
'193,186,196,181,169,188,187,,,,,,168,175,166,167,163,164,165,124,126',
',,125,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160',
'146,147,,,,,,,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133',
'155,134,,,162,89,,,,,,,,,,,,,,88,173,184,174,197,170,190,180,179,200',
'201,195,178,177,172,198,202,203,182,171,185,189,191,183,176,,,,192,199',
'194,193,186,196,181,169,188,187,,,,,,168,175,166,167,163,164,165,124',
'126,,,125,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159',
'160,146,147,,,,,,,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141',
'133,155,134,,,162,173,184,174,197,170,190,180,179,200,201,195,178,177',
'172,198,202,203,182,171,185,189,191,183,176,,,,192,199,194,373,372,374',
'371,169,188,187,,,,,,168,175,166,167,368,369,370,366,126,97,96,367,',
'99,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146',
'147,,,,,,378,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133',
'155,134,640,419,162,,641,,,,,,,,157,158,,154,136,137,138,145,142,144',
',,139,140,,,,159,160,146,147,,,,,,265,,,,,,,,151,150,,135,156,153,152',
'161,148,149,143,141,133,155,134,675,426,162,,676,,,,,,,,157,158,,154',
'136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,265,,,,,,',
',151,150,,135,156,153,152,161,148,149,143,141,133,155,134,672,419,162',
',673,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160',
'146,147,,,,,,265,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141',
'133,155,134,422,426,162,,421,,,,,,,,157,158,,154,136,137,138,145,142',
'144,,,139,140,,,,159,160,146,147,,,,,,265,,,,,,,,151,150,,135,156,153',
'152,161,148,149,143,141,133,155,134,725,426,162,,726,,,,,,,,157,158',
',154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,265,',
',,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,415,419',
'162,,416,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159',
'160,146,147,,,,,,265,,,,,,,,151,150,,135,156,153,152,161,148,149,143',
'141,133,155,134,1008,419,162,,1009,,,,,,,,157,158,,154,136,137,138,145',
'142,144,,,139,140,,,,159,160,146,147,,,,,,265,,,,,,,,151,150,,135,156',
'153,152,161,148,149,143,141,133,155,134,1010,426,162,,1011,,,,,,,,157',
'158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,265',
',,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,985',
'426,162,,984,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,',
',,159,160,146,147,,,,,,265,,,,,,,,151,150,,135,156,153,152,161,148,149',
'143,141,133,155,134,640,419,162,,641,,,,,,,,157,158,,154,136,137,138',
'145,142,144,,,139,140,,,,159,160,146,147,,,,,,265,,,,,,,,151,150,,135',
'156,153,152,161,148,149,143,141,133,155,134,642,426,162,,643,,,,,,,',
'157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,',
',,,265,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134',
'728,426,162,,729,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140',
',,,159,160,146,147,,,,,,265,,,,,,,,151,150,,135,156,153,152,161,148',
'149,143,141,133,155,134,477,419,162,,478,,,,,,,,157,158,,154,136,137',
'138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,265,,,,,,,,151,150',
',135,156,153,152,161,148,149,143,141,133,155,134,477,419,162,,478,,',
',,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147',
',,,,,,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134',
'723,419,162,,724,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140',
',,,159,160,146,147,,,,,,265,,,,,,,,151,150,,135,156,153,152,161,148',
'149,143,141,133,155,134,642,426,162,,643,,,,,,,,157,158,,154,136,137',
'138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,265,,,,,,,,151,150',
',135,156,153,152,161,148,149,143,141,133,155,134,,550,162,547,546,545',
'555,548,,550,,547,546,545,555,548,558,,,,,,,,558,,550,,547,546,545,555',
'548,,,,,,553,536,,558,,,,,553,563,562,566,565,,,,559,563,562,566,565',
',,,559,553,,550,,547,546,545,555,548,,,566,565,,,,559,558,,550,,547',
'546,545,555,548,550,,547,546,545,555,548,,558,,,,,553,,558,,,,,,,563',
'562,566,565,,,,559,553,,,,,,,553,,563,562,566,565,,,,559,,566,565,,',
'550,559,547,546,545,555,548,550,,547,546,545,555,548,550,558,547,546',
'545,555,548,,558,,,,,,550,558,547,546,545,555,548,,,553,,,,,,558,553',
',563,562,566,565,,553,,559,,566,565,,,,559,,566,565,,553,,559,,,,,,',
'563,562,566,565,,,550,559,547,546,545,555,548,550,,547,546,545,555,548',
',558,,,,,,550,558,547,546,545,555,548,,,,,,,,,558,553,,,,,,,553,,563',
'562,566,565,,,,559,,566,565,,553,,559,,,,,,,563,562,566,565,,,550,559',
'547,546,545,555,548,550,,547,546,545,555,548,,558,,,,,,550,558,547,546',
'545,555,548,,,,,,,,,558,553,,,,,,,553,,563,562,566,565,,,,559,,566,565',
',553,,559,,,,,,,563,562,566,565,,,,559' ]
        racc_action_table = arr = ::Array.new(25107, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'95,776,61,682,682,416,689,95,95,95,58,946,95,95,95,385,95,344,19,386',
'475,667,344,1022,95,954,95,95,95,652,361,667,17,17,445,348,95,95,947',
'95,95,95,95,95,990,1011,714,341,340,723,58,910,416,367,887,475,439,439',
'776,19,367,357,416,719,846,357,95,95,95,95,95,95,95,95,95,95,95,95,95',
'95,308,385,95,95,95,386,95,95,847,61,95,445,724,95,95,725,95,682,95',
'915,95,915,95,95,950,95,95,95,95,95,721,95,643,95,1009,689,652,1008',
'367,643,643,643,1011,1010,643,643,643,95,643,946,95,95,95,95,946,95',
'361,95,643,643,643,1022,95,95,348,722,1022,572,643,643,439,643,643,643',
'643,643,947,309,723,361,725,947,990,1011,361,341,340,990,1011,910,341',
'340,887,846,910,573,347,887,643,643,643,643,643,643,643,643,643,643',
'643,643,643,643,847,580,643,643,643,847,643,643,1010,724,643,726,725',
'643,643,310,643,305,643,705,643,640,643,643,494,643,643,643,643,643',
'950,643,26,643,314,950,721,351,690,721,1009,721,484,1008,299,1009,316',
'643,1008,1010,643,643,643,643,1010,643,641,643,642,572,226,731,643,643',
'572,642,642,642,596,596,642,642,642,672,642,591,726,484,640,310,591',
'224,298,642,642,642,642,573,494,494,494,728,573,347,642,642,26,642,642',
'642,642,642,310,592,592,494,297,673,736,675,580,803,706,641,706,706',
'706,226,706,26,726,339,339,295,642,642,642,642,642,642,642,642,642,642',
'642,642,642,642,224,672,642,642,642,728,642,642,351,686,642,653,728',
'642,642,683,642,728,642,223,642,728,642,642,596,642,642,642,642,642',
'294,642,642,642,623,673,675,675,609,803,728,672,41,41,672,334,653,642',
'334,607,642,642,642,642,672,642,706,642,422,592,998,998,642,642,592',
'422,422,422,315,315,728,422,422,320,422,673,223,675,673,803,675,623',
'803,422,483,755,356,681,673,678,675,623,803,77,422,422,319,422,422,422',
'422,422,609,609,906,77,906,906,906,373,906,282,609,607,607,77,373,3',
'760,483,41,41,3,607,422,422,422,422,422,422,422,422,422,422,422,422',
'422,422,356,677,422,422,422,319,422,356,315,315,422,387,356,422,384',
'319,356,382,422,323,422,381,422,422,380,422,422,422,422,422,98,422,422',
'422,674,356,373,98,98,98,525,525,98,98,98,321,98,422,906,328,422,422',
'321,422,98,422,98,98,98,850,671,321,422,422,850,356,98,98,39,98,98,98',
'98,98,279,387,387,387,384,384,384,382,382,382,278,381,381,381,380,380',
'380,936,694,694,936,38,98,98,98,98,98,98,98,98,98,98,98,98,98,98,321',
'669,98,98,98,39,98,98,264,688,98,383,688,98,98,39,98,374,98,666,98,15',
'98,98,374,98,98,98,98,98,421,98,38,98,777,123,778,421,421,421,123,123',
'38,421,421,779,421,98,451,781,98,98,98,98,376,98,782,98,355,855,290',
'376,98,98,855,290,421,421,15,421,421,421,421,421,783,383,383,383,15',
'729,451,366,374,369,451,451,729,24,366,330,369,729,330,785,24,729,421',
'421,421,421,421,421,421,421,421,421,421,421,421,421,355,302,421,421',
'421,786,421,355,302,376,421,787,355,421,877,788,355,302,421,332,421',
'877,421,421,792,421,421,421,421,421,877,421,426,421,729,355,366,232',
'369,426,426,426,24,796,426,426,426,421,426,331,421,421,331,421,797,421',
'802,426,426,426,426,228,421,421,806,355,302,227,426,426,415,426,426',
'426,426,426,809,676,810,877,813,306,333,372,676,712,712,368,306,676',
'372,225,818,676,368,819,823,306,426,426,426,426,426,426,426,426,426',
'426,426,426,426,426,824,304,426,426,426,415,826,426,304,827,426,829',
'370,426,426,415,426,304,426,370,426,832,426,426,660,426,426,426,426',
'426,676,426,426,426,306,834,372,371,940,658,368,837,349,452,371,940',
'335,426,840,349,426,426,426,426,940,426,417,426,349,651,345,644,426',
'417,417,417,304,346,417,417,417,583,417,204,350,452,849,370,583,452',
'452,417,417,417,600,600,352,583,600,600,600,109,417,417,853,417,417',
'417,417,417,854,634,371,940,857,948,858,349,629,624,620,703,948,703',
'703,703,614,703,612,604,594,948,417,417,417,417,417,417,417,417,417',
'417,417,417,417,417,583,874,417,417,417,575,574,417,569,417,417,878',
'703,417,417,880,417,45,417,40,417,703,417,417,567,417,417,417,417,417',
'56,417,417,417,948,891,892,56,56,56,564,560,56,56,56,222,56,417,396',
'552,417,417,222,417,543,417,56,56,56,542,908,222,417,37,912,913,56,56',
'541,56,56,56,56,56,919,303,923,46,539,511,926,929,303,930,46,931,511',
'932,934,538,402,303,405,46,22,511,56,56,56,56,56,56,56,56,56,56,56,56',
'56,56,222,14,56,56,56,526,524,56,14,523,56,949,407,56,56,707,56,14,56',
'955,56,956,56,56,957,56,56,56,56,56,303,56,46,56,511,958,411,959,359',
'959,959,959,960,959,413,359,16,56,515,414,56,56,56,56,359,56,427,56',
'512,507,505,864,56,427,427,427,14,691,427,427,427,864,427,502,959,501',
'423,691,984,985,986,427,427,427,427,983,13,983,983,983,431,983,427,427',
'441,427,427,427,427,427,12,485,481,359,864,864,997,456,999,864,691,691',
'1000,1001,553,691,553,553,553,1002,553,1003,427,427,427,427,427,427',
'427,427,427,427,427,427,427,427,1004,1007,427,427,427,10,7,427,455,470',
'427,454,1012,427,427,553,427,1013,427,453,427,1,427,427,553,427,427',
'427,427,427,1024,427,427,427,833,,833,833,833,,833,470,,,,470,470,427',
'470,470,427,427,427,427,,427,27,427,,,,,427,27,27,27,,,27,27,27,833',
'27,461,293,293,293,293,293,,833,27,27,27,499,499,499,499,499,461,461',
',27,27,,27,27,27,27,27,907,,907,907,907,461,907,461,,461,461,,461,461',
',,461,,461,,,,27,27,27,27,27,27,27,27,27,27,27,27,27,27,,907,27,27,27',
',,27,,27,27,,,27,27,,27,,27,,27,,27,27,,27,27,27,27,27,,27,27,27,648',
',648,648,648,648,648,,835,,835,835,835,27,835,648,27,27,476,27,,27,',
',,476,476,476,27,,476,476,476,,476,,991,648,991,991,991,991,991,476',
'476,835,648,648,648,648,,991,,648,476,476,,476,476,476,476,476,,,,,977',
',977,977,977,977,977,991,875,,875,875,875,648,875,977,,,991,991,,,961',
'991,961,961,961,,961,476,,28,,,,,476,977,28,28,28,476,476,28,28,28,',
'28,977,977,,,471,977,,,,28,28,961,,,,,476,476,,28,28,,28,28,28,28,28',
',,,,476,,,476,,471,,,476,471,471,,471,471,,476,,,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,,28,28,,28,,28,,28,,28',
'28,,28,28,28,28,28,,28,996,28,996,996,996,,996,6,6,6,6,6,,,,28,,,28',
'28,,28,,28,962,962,962,962,962,962,28,,,962,962,,,996,962,,962,962,962',
'962,962,962,962,,,,,,962,962,962,962,962,962,962,,,962,,,,,434,962,962',
'962,962,962,962,962,962,962,962,962,962,,962,962,962,,962,962,962,962',
'962,434,434,434,434,434,434,434,434,434,434,434,,434,434,,,434,434,',
'962,,,962,,,962,962,,,962,,962,434,,434,962,434,434,,434,434,434,434',
'434,962,434,,,,962,962,962,962,,962,962,962,962,,,,,962,962,,434,,434',
',,962,,962,962,962,968,968,968,968,968,968,,,,968,968,,,,968,,968,968',
'968,968,968,968,968,,,,,,968,968,968,968,968,968,968,,,968,,,,,645,968',
'968,968,968,968,968,968,968,968,968,968,968,,968,968,968,,968,968,968',
'968,968,645,645,645,645,645,645,645,645,645,645,645,,645,645,,,645,645',
',968,,,968,,,968,968,,,968,,968,645,,645,968,645,645,,645,645,645,645',
'645,968,645,,,,968,968,968,968,,968,968,968,968,,,,,968,968,,645,,,',
',968,,968,968,968,970,970,970,970,970,970,,,,970,970,,,,970,,970,970',
'970,970,970,970,970,,,,,,970,970,970,970,970,970,970,,,970,,,,,410,970',
'970,970,970,970,970,970,970,970,970,970,970,,970,970,970,,970,970,970',
'970,970,410,410,410,410,410,410,410,410,410,410,410,,410,410,,,410,410',
',970,,,970,,,970,970,,,970,,970,410,,410,970,410,410,,410,410,410,410',
'410,970,410,,,,970,970,970,970,,970,970,970,970,,,,,970,970,,410,,,',
',970,,970,970,970,650,650,650,650,650,650,,,,650,650,,,,650,,650,650',
'650,650,650,650,650,,,,,,650,650,650,650,650,650,650,,,650,,,,,,650',
'650,650,650,650,650,650,650,650,650,650,650,,650,650,650,,650,650,650',
'650,650,680,680,680,680,680,680,680,680,680,680,680,,680,680,,,680,680',
',650,,,650,,,650,650,,,650,,650,680,,680,650,680,680,,680,680,680,680',
'680,650,680,,,,650,650,650,650,,650,650,650,650,,,,,650,650,,680,,,',
',650,,650,650,650,655,655,655,655,655,655,,,,655,655,,,,655,,655,655',
'655,655,655,655,655,,,,,,655,655,655,655,655,655,655,,,655,,,,,,655',
'655,655,655,655,655,655,655,655,655,655,655,,655,655,655,,655,655,655',
'655,655,757,757,757,757,757,757,757,757,757,757,757,,757,757,,,757,757',
',655,,,655,,,655,655,,,655,,655,757,,757,655,757,757,,757,757,757,757',
'757,655,757,,,,655,655,655,655,,655,655,655,655,,,,,655,655,,757,,,',
',655,,655,655,655,945,945,945,945,945,945,,,,945,945,,,,945,,945,945',
'945,945,945,945,945,,,,,,945,945,945,945,945,945,945,,,945,,,,,,945',
'945,945,945,945,945,945,945,945,945,945,945,,945,945,945,,945,945,945',
'945,945,762,762,762,762,762,762,762,762,762,762,762,,762,762,,,762,762',
',945,,,945,,,945,945,,,945,,945,762,,762,945,762,762,,762,762,762,762',
'762,945,762,,,,945,945,945,945,,945,945,945,945,,,,,945,945,,762,,,',
',945,,945,945,945,656,656,656,656,656,656,,,,656,656,,,,656,,656,656',
'656,656,656,656,656,,,,,,656,656,656,656,656,656,656,,,656,,,,,,656',
'656,656,656,656,656,656,656,656,656,656,656,,656,656,656,,656,656,656',
'656,656,764,764,764,764,764,764,764,764,764,764,764,,764,764,,,764,764',
',656,,,656,,,656,656,,,656,,656,764,,764,656,764,764,,764,764,764,764',
'764,656,764,,,,656,656,656,656,,656,656,656,656,,,,,656,656,,764,,,',
',656,,656,656,656,326,326,326,326,326,326,,,,326,326,,,,326,,326,326',
'326,326,326,326,326,,,,,,326,326,326,326,326,326,326,,,326,,,,,,326',
'326,326,326,326,326,326,326,326,326,326,326,,326,326,326,,326,326,326',
'326,326,767,767,767,767,767,767,767,767,767,767,767,,767,767,,,767,767',
',326,,,326,,,326,326,,,326,,326,767,,767,326,767,767,,767,767,767,767',
'767,326,767,,,,326,326,326,326,,326,326,326,326,,,,,326,326,,767,,,',
',326,,326,326,326,593,593,593,593,593,593,,,,593,593,,,,593,,593,593',
'593,593,593,593,593,,,,,,593,593,593,593,593,593,593,,,593,,,,,,593',
'593,593,593,593,593,593,593,593,593,593,593,,593,593,593,,593,593,593',
'593,593,769,769,769,769,769,769,769,769,769,769,769,,769,769,,,769,769',
',593,,,593,,,593,593,,,593,,593,769,,769,593,769,769,,769,769,769,769',
'769,593,769,,,,593,593,593,593,,593,593,593,593,,,,,593,593,,769,,,',
',593,,593,593,593,571,571,571,571,571,571,,,,571,571,,,,571,,571,571',
'571,571,571,571,571,,,,,,571,571,571,571,571,571,571,,,571,,,,,,571',
'571,571,571,571,571,571,571,571,571,571,571,,571,571,571,,571,571,571',
'571,571,771,771,771,771,771,771,771,771,771,771,771,,771,771,,,771,771',
',571,,,571,,,571,571,,,571,,571,771,,771,571,771,771,,771,771,771,771',
'771,571,771,,,,571,571,571,571,,571,571,571,571,,,,,571,571,,771,,,',
',571,,571,571,571,301,301,301,301,301,301,,,,301,301,,,,301,,301,301',
'301,301,301,301,301,,,,,,301,301,301,301,301,301,301,,,301,,,,,,301',
'301,301,301,301,301,301,301,301,301,301,301,,301,301,301,,301,301,301',
'301,301,276,276,276,276,276,276,276,276,276,276,276,,276,276,,,276,276',
',301,,,301,,,301,301,,,301,,301,276,,276,301,276,276,,276,276,276,276',
'276,301,276,,,,301,301,301,301,,301,301,301,301,,,,,301,301,,276,,,',
',301,,301,301,301,732,732,732,732,732,732,,,,732,732,,,,732,,732,732',
'732,732,732,732,732,,,,,,732,732,732,732,732,732,732,,,732,,,,,,732',
'732,732,732,732,732,732,732,732,732,732,732,,732,732,732,,732,732,732',
'732,732,21,21,21,21,21,21,21,21,21,21,21,,21,21,,,21,21,,732,,,732,',
',732,732,,,732,,732,21,,21,732,21,21,,21,21,21,21,21,732,21,,,,732,732',
'732,732,,732,732,732,732,,,,,732,732,,21,,,,,732,,732,732,732,296,296',
'296,296,296,296,,,,296,296,,,,296,,296,296,296,296,296,296,296,,,,,',
'296,296,296,296,296,296,296,,,296,,,,,,296,296,296,296,296,296,296,296',
'296,296,296,296,,296,296,296,,296,296,296,296,296,429,429,429,429,429',
'429,429,429,429,429,429,,429,429,,,429,429,,296,,,296,,,296,296,,,296',
',296,429,,429,296,429,429,,429,429,429,429,429,296,429,,,,296,296,296',
'296,,296,296,296,296,,,,,296,296,,429,,,,,296,,296,296,296,33,33,33',
'33,33,33,,,,33,33,,,,33,,33,33,33,33,33,33,33,,,,,,33,33,33,33,33,33',
'33,,,33,,,,,,33,33,33,33,33,33,33,33,33,33,33,33,,33,33,33,,33,33,33',
'33,33,860,860,860,860,860,860,860,860,860,860,860,,860,860,,,860,860',
',33,,,33,,,33,33,,,33,,33,860,,860,33,860,860,,860,860,860,860,860,33',
'860,,,,33,33,33,33,,33,33,33,33,,,,,33,33,,860,,,,,33,,33,33,33,737',
'737,737,737,737,737,,,,737,737,,,,737,,737,737,737,737,737,737,737,',
',,,,737,737,737,737,737,737,737,,,737,,,,,,737,737,737,737,737,737,737',
'737,737,737,737,737,,737,737,737,,737,737,737,737,737,521,521,521,521',
'521,521,521,521,521,521,521,,521,521,,,521,521,,737,,,737,,,737,737',
',,737,,737,521,,521,737,521,521,,521,521,521,521,521,737,521,,,,737',
'737,737,737,,737,737,737,737,,,,,737,737,,521,,,,,737,,737,737,737,747',
'747,747,747,747,747,,,,747,747,,,,747,,747,747,747,747,747,747,747,',
',,,,747,747,747,747,747,747,747,,,747,,,,,,747,747,747,747,747,747,747',
'747,747,747,747,747,,747,747,747,,747,747,747,747,747,971,971,971,971',
'971,971,971,971,971,971,971,,971,971,,,971,971,,747,,,747,,,747,747',
',,747,,747,971,,971,747,971,971,,971,971,971,971,971,747,971,,,,747',
'747,747,747,,747,747,747,747,,,,,747,747,,971,,,,,747,,747,747,747,795',
'795,795,795,795,795,,,,795,795,,,,795,,795,795,795,795,795,795,795,',
',,,,795,795,795,795,795,795,795,,,795,,,,,,795,795,795,795,795,795,795',
'795,795,795,795,795,,795,795,795,,795,795,795,795,795,646,646,646,646',
'646,646,646,646,646,646,646,,646,646,,,646,646,,795,,,795,,,795,795',
',,795,,795,646,,646,795,646,646,,646,646,646,646,646,795,646,,,,795',
'795,795,795,,795,795,795,795,,,,,795,795,646,646,,,,,795,,795,795,795',
'231,231,231,231,231,231,,,,231,231,,,,231,,231,231,231,231,231,231,231',
',,,,,231,231,231,231,231,231,231,,,231,,,,,,231,231,231,231,231,231',
'231,231,231,231,231,231,,231,231,231,,231,231,231,231,231,450,450,450',
'450,450,450,450,450,450,450,450,,450,450,,,450,450,,231,,,231,,,231',
'231,,,231,,231,450,,450,231,450,450,,450,450,450,450,450,231,450,,,',
'231,231,231,231,,231,231,231,231,,,,,231,231,,,,,,,231,,231,231,231',
'808,808,808,808,808,808,,,,808,808,,,,808,,808,808,808,808,808,808,808',
',,,,,808,808,808,808,808,808,808,,,808,,,,,,808,808,808,808,808,808',
'808,808,808,808,808,808,,808,808,808,,808,808,808,808,808,467,467,467',
'467,467,467,467,,,467,467,,,,,,467,467,,808,,,808,,,808,808,,,808,,808',
'467,,467,808,467,467,,467,467,467,467,467,808,467,,,,808,808,808,808',
',808,808,808,808,,,,,808,808,,,,,,,808,,808,808,808,816,816,816,816',
'816,816,,,,816,816,,,,816,,816,816,816,816,816,816,816,,,,,,816,816',
'816,816,816,816,816,,,816,,,,,,816,816,816,816,816,816,816,816,816,816',
'816,816,,816,816,816,,816,816,816,816,816,449,449,449,449,449,449,449',
'449,449,449,449,,449,449,,,449,449,,816,,,816,,,816,816,,,816,,816,449',
',449,816,449,449,,449,449,449,449,449,816,449,,,,816,816,816,816,,816',
'816,816,816,,,,,816,816,,,,,,,816,,816,816,816,817,817,817,817,817,817',
',,,817,817,,,,817,,817,817,817,817,817,817,817,,,,,,817,817,817,817',
'817,817,817,,,817,,,,,,817,817,817,817,817,817,817,817,817,817,817,817',
',817,817,817,,817,817,817,817,817,460,460,460,460,460,460,460,,,460',
'460,,,,,,460,460,,817,,,817,,,817,817,,,817,,817,460,,460,817,460,460',
',460,460,460,460,460,817,460,,,,817,817,817,817,,817,817,817,817,,,',
',817,817,,,,,,,817,,817,817,817,841,841,841,841,841,841,,,,841,841,',
',,841,,841,841,841,841,841,841,841,,,,,,841,841,841,841,841,841,841',
',,841,,,,,,841,841,841,841,841,841,841,841,841,841,841,841,,841,841',
'841,,841,841,841,841,841,462,,,,,,,,,,,,,,,,462,462,,841,,,841,,,841',
'841,,,841,,841,462,,462,841,462,462,,462,462,,,462,841,462,,,,841,841',
'841,841,,841,841,841,841,,,,,841,841,,,,,,,841,,841,841,841,842,842',
'842,842,842,842,,,,842,842,,,,842,,842,842,842,842,842,842,842,,,,,',
'842,842,842,842,842,842,842,,,842,,,,,,842,842,842,842,842,842,842,842',
'842,842,842,842,,842,842,842,,842,842,842,842,842,463,,,,,,,,,,,,,,',
',463,463,,842,,,842,,,842,842,,,842,,842,463,,463,842,463,463,,463,463',
',,463,842,463,,,,842,842,842,842,,842,842,842,842,,,,,842,842,,,,,,',
'842,,842,842,842,845,845,845,845,845,845,,,,845,845,,,,845,,845,845',
'845,845,845,845,845,,,,,,845,845,845,845,845,845,845,,,845,,,,,,845',
'845,845,845,845,845,845,845,845,845,845,845,,845,845,845,,845,845,845',
'845,845,464,,,,,,,,,,,,,,,,464,464,,845,,,845,,,845,845,,,845,,845,464',
',464,845,464,464,,464,464,,,464,845,464,,,,845,845,845,845,,845,845',
'845,845,,,,,845,845,,,,,,,845,,845,845,845,884,884,884,884,884,884,',
',,884,884,,,,884,,884,884,884,884,884,884,884,,,,,,884,884,884,884,884',
'884,884,,,884,,,,,,884,884,884,884,884,884,884,884,884,884,884,884,',
'884,884,884,,884,884,884,884,884,472,472,472,472,472,472,472,,,472,472',
',,,,,472,472,,884,,,884,,,884,884,,,884,,884,472,,472,884,472,472,,472',
'472,472,472,472,884,472,,,,884,884,884,884,,884,884,884,884,,,,,884',
'884,,,,,,,884,,884,884,884,206,206,206,206,206,206,,,,206,206,,,,206',
',206,206,206,206,206,206,206,,,,,,206,206,206,206,206,206,206,,,206',
',,,,,206,206,206,206,206,206,206,206,206,206,206,206,,206,206,206,,206',
'206,206,206,206,466,466,466,466,466,466,466,,,466,466,,,,,,466,466,',
'206,,,206,,,206,206,,,206,,206,466,,466,206,466,466,,466,466,466,466',
'466,206,466,,,,206,206,206,206,,206,206,206,206,,,,,206,206,,,,,,,206',
',206,206,206,568,568,568,568,568,568,,,,568,568,,,,568,,568,568,568',
'568,568,568,568,,,,,,568,568,568,568,568,568,568,,,568,,,,,,568,568',
'568,568,568,568,568,568,568,568,568,568,,568,568,568,,568,568,568,568',
'568,473,473,473,473,473,473,473,473,,473,473,,,,,,473,473,,568,,,568',
',,568,568,,,568,,568,473,,473,568,473,473,,473,473,473,473,473,568,473',
',,,568,568,568,568,,568,568,568,568,,,,,568,568,,,,,,,568,,568,568,568',
'121,121,121,121,121,121,,,,121,121,,,,121,,121,121,121,121,121,121,121',
',,,,,121,121,121,121,121,121,121,,,121,,,,,,121,121,121,121,121,121',
'121,121,121,121,121,121,,121,121,121,,121,121,121,121,121,468,468,468',
'468,468,468,468,,,468,468,,,,,,468,468,,121,,,121,,,121,121,,,121,,121',
'468,,468,121,468,468,,468,468,468,468,468,121,468,,,,121,121,121,121',
',121,121,121,121,,,,,121,121,,,,,,,121,,121,121,121,851,851,851,851',
'851,851,,,,851,851,,,,851,,851,851,851,851,851,851,851,,,,,,851,851',
'851,851,851,851,851,,,851,,,,,,851,851,851,851,851,851,851,851,851,851',
'851,851,,851,851,851,,851,851,851,851,851,469,469,469,469,469,469,469',
',,469,469,,,,,,469,469,,851,,,851,,,851,851,,,851,,851,469,,469,851',
'469,469,,469,469,469,469,469,851,469,,,,851,851,851,851,,851,851,851',
'851,,,,,851,851,,,,,,,851,,851,851,851,500,500,500,500,500,500,,,,500',
'500,,,,500,,500,500,500,500,500,500,500,,,,,,500,500,500,500,500,500',
'500,,,500,,,,,,500,500,500,500,500,500,500,500,500,500,500,500,,500',
'500,500,,500,500,500,500,500,465,465,465,465,465,465,465,,,465,465,',
',,,,465,465,,500,,,500,,,500,500,,,500,,500,465,,465,500,465,465,,465',
'465,465,465,465,500,465,,,,500,500,500,500,,500,500,500,500,,,,,500',
'500,,,,,,,500,,500,500,500,0,0,0,0,0,0,,,,0,0,,,,0,,0,0,0,0,0,0,0,,',
',,,0,0,0,0,0,0,0,,,0,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,,0,0,0,,0,0,0,0,0',
'459,,,,,,,,,,,,,,,,459,459,,0,,,0,,,0,0,,,0,,0,459,,,0,459,459,,459',
'459,,,,0,,,,,0,0,0,0,,0,0,0,0,,,,,0,0,,,,701,701,701,0,701,0,0,0,701',
'701,,,,701,,701,701,701,701,701,701,701,,,,,,701,701,701,701,701,701',
'701,,,701,,,,,,,701,,,701,701,701,701,701,701,701,701,,701,701,701,',
'701,701,701,701,701,458,,,,,,,,,,,,,,,,458,458,,701,,,701,,,701,701',
',,701,,,458,,458,701,458,458,,458,458,,,,701,,,,,701,701,701,701,,701',
'701,701,701,,,,,701,701,,,,64,64,64,701,64,701,701,701,64,64,,,,64,',
'64,64,64,64,64,64,64,,,,,,64,64,64,64,64,64,64,,,64,,,,,,,64,,,64,64',
'64,64,64,64,64,64,,64,64,64,,64,64,64,64,64,457,,,,,,,,,,,,,,,,457,457',
',64,,,64,,,64,64,,,64,,,457,,457,64,457,457,,457,457,,,,64,,,,,64,64',
'64,64,,64,64,64,64,,,,,64,64,,,,67,67,67,64,67,64,64,64,67,67,,,,67',
',67,67,67,67,67,67,67,,,,,,67,67,67,67,67,67,67,,,67,,,,,,,67,,,67,67',
'67,67,67,67,67,67,,67,67,67,,67,67,67,67,67,,,,,,,,,,,,,,,,,,,,67,,',
'67,,,67,67,,,67,,,,,,67,,,,,,,,,67,,,,,67,67,67,67,,67,67,67,67,,,,',
'67,67,67,,,,,67,67,,67,67,67,68,68,68,,68,,,,68,68,,,,68,,68,68,68,68',
'68,68,68,,,,,,68,68,68,68,68,68,68,,,68,,,,,,,68,,,68,68,68,68,68,68',
'68,68,,68,68,68,,68,68,,,68,,,,,,,,,,,,,,,,,,,,68,,,68,,,68,68,,,68',
',68,,,,,,,,,,,,,,,,,,68,68,68,68,,68,68,68,68,,,,,68,68,,,,69,69,69',
'68,69,68,68,68,69,69,,,,69,,69,69,69,69,69,69,69,,,,,,69,69,69,69,69',
'69,69,,,69,,,,,,,69,,,69,69,69,69,69,69,69,69,,69,69,69,,69,69,,,69',
',,,,,,,,,,,,,,,,69,,,69,,,69,,,69,69,,,69,,,,,,,,,,,,,,,,,,,,69,69,69',
'69,,69,69,69,69,,,,,69,69,,,,70,70,70,69,70,69,69,69,70,70,,,,70,,70',
'70,70,70,70,70,70,,,,,,70,70,70,70,70,70,70,,,70,,,,,,,70,,,70,70,70',
'70,70,70,70,70,,70,70,70,,70,70,,,70,,,,,,,,,,,,,,,,,,,,70,,,70,,,70',
'70,,,70,,,,,,,,,,,,,,,,,,,,70,70,70,70,,70,70,70,70,,,,,70,70,,,,448',
'448,448,70,448,70,70,70,448,448,,,,448,,448,448,448,448,448,448,448',
',,,,,448,448,448,448,448,448,448,,,448,,,,,,,448,,,448,448,448,448,448',
'448,448,448,,448,448,448,,448,448,448,448,448,,,,,,,,,,,,,,,,,,,,448',
',,448,,,448,448,,,448,,,,,,448,,,,,,,,,448,,,,,448,448,448,448,,448',
'448,448,448,,,,,448,448,,,,861,861,861,448,861,448,448,448,861,861,',
',,861,,861,861,861,861,861,861,861,,,,,,861,861,861,861,861,861,861',
',,861,,,,,,,861,,,861,861,861,861,861,861,861,861,861,861,861,861,,861',
'861,861,861,861,,,,,,,,,,,,,,,,,,,,861,,,861,,,861,861,,,861,,,,861',
',861,,,861,,,,,,861,,,,,861,861,861,861,,861,861,861,861,,,,,861,861',
',,,447,447,447,861,447,861,861,861,447,447,,,,447,,447,447,447,447,447',
'447,447,,,,,,447,447,447,447,447,447,447,,,447,,,,,,,447,,,447,447,447',
'447,447,447,447,447,,447,447,447,,447,447,447,447,447,,,,,,,,,,,,,,',
',,,,,447,,,447,,,447,447,,,447,,,,,,447,,,,,,,,,447,,,,,447,447,447',
'447,,447,447,447,447,,,,,447,447,,,,60,60,60,447,60,447,447,447,60,60',
',,,60,,60,60,60,60,60,60,60,,,,,,60,60,60,60,60,60,60,,,60,,,,,,,60',
',,60,60,60,60,60,60,60,60,60,60,60,60,,60,60,60,60,60,,,,,,,,,,,,,,',
',,,,,60,,,60,,,60,60,,,60,,,,,,60,,,60,,,,,,60,,,,,60,60,60,60,,60,60',
'60,60,,,,,60,60,,,,59,59,59,60,59,60,60,60,59,59,,,,59,,59,59,59,59',
'59,59,59,,,,,,59,59,59,59,59,59,59,,,59,,,,,,,59,,,59,59,59,59,59,59',
'59,59,59,59,59,59,,59,59,59,59,59,,,,,,,,,,,,,,,,,,,,59,,,59,,,59,59',
',,59,,59,,,,59,,,59,,,,,,59,,,,,59,59,59,59,,59,59,59,59,,,,,59,59,',
',,,,,59,,59,59,59,111,111,111,111,111,,,,111,111,,,,111,,111,111,111',
'111,111,111,111,,,,,,111,111,111,111,111,111,111,,,111,,,,,,111,111',
'111,111,111,111,111,111,111,111,111,111,,111,111,111,,111,111,111,111',
'111,,,,,,,,,,,,,,,,,,,,111,,,111,,,111,111,,,111,,111,,,,111,,,,,,,',
',111,,,,,111,111,111,111,,111,111,111,111,,,,,111,111,,,,,,111,111,',
'111,111,111,116,116,116,,116,,,,116,116,,,,116,,116,116,116,116,116',
'116,116,,,,,,116,116,116,116,116,116,116,,,116,,,,,,,116,,,116,116,116',
'116,116,116,116,116,,116,116,116,,116,116,116,116,116,,,,,,,,,,,,,,',
',,,,,116,,,116,,,116,116,,,116,,,,,,116,,,,,,,,,116,,,,,116,116,116',
'116,,116,116,116,116,,,,,116,116,,,,117,117,117,116,117,116,116,116',
'117,117,,,,117,,117,117,117,117,117,117,117,,,,,,117,117,117,117,117',
'117,117,,,117,,,,,,,117,,,117,117,117,117,117,117,117,117,,117,117,117',
',117,117,117,117,117,,,,,,,,,,,,,,,,,,,,117,,,117,,,117,117,,,117,,',
',,,117,,,,,,,,,117,,,,,117,117,117,117,,117,117,117,117,,,,,117,117',
',,,118,118,118,117,118,117,117,117,118,118,,,,118,,118,118,118,118,118',
'118,118,,,,,,118,118,118,118,118,118,118,,,118,,,,,,,118,,,118,118,118',
'118,118,118,118,118,,118,118,118,,118,118,118,118,118,,,,,,,,,,,,,,',
',,,,,118,,,118,,,118,118,,,118,,,,,,118,,,,,,,,,118,,,,,118,118,118',
'118,,118,118,118,118,,,,,118,118,,,,119,119,119,118,119,118,118,118',
'119,119,,,,119,,119,119,119,119,119,119,119,,,,,,119,119,119,119,119',
'119,119,,,119,,,,,,,119,,,119,119,119,119,119,119,119,119,,119,119,119',
',119,119,119,119,119,,,,,,,,,,,,,,,,,,,,119,,,119,,,119,119,,,119,,',
',,,119,,,,,,,,,119,,,,,119,119,119,119,,119,119,119,119,,,,,119,119',
',,,,,,119,,119,119,119,120,120,120,120,120,,,,120,120,,,,120,,120,120',
'120,120,120,120,120,,,,,,120,120,120,120,120,120,120,,,120,,,,,,120',
'120,,120,120,120,120,120,120,120,120,120,,120,120,120,,120,120,120,120',
'120,,,,,,,,,,,,,,,,,,,,120,,,120,,,120,120,,,120,,120,,,,120,,,,,,,',
',120,,,,,120,120,120,120,,120,120,120,120,,,,,120,120,,,,862,862,862',
'120,862,120,120,120,862,862,,,,862,,862,862,862,862,862,862,862,,,,',
',862,862,862,862,862,862,862,,,862,,,,,,,862,,,862,862,862,862,862,862',
'862,862,,862,862,862,,862,862,862,862,862,,,,,,,,,,,,,,,,,,,,862,,,862',
',,862,862,,,862,,,,,,862,,,,,,,,,862,,,,,862,862,862,862,,862,862,862',
'862,,,,,862,862,,,,446,446,446,862,446,862,862,862,446,446,,,,446,,446',
'446,446,446,446,446,446,,,,,,446,446,446,446,446,446,446,,,446,,,,,',
',446,,,446,446,446,446,446,446,446,446,,446,446,446,,446,446,446,446',
'446,,,,,,,,,,,,,,,,,,,,446,,,446,,,446,446,,,446,,,,,,446,,,,,,,,,446',
',,,,446,446,446,446,,446,446,446,446,,,,,446,446,,,,444,444,444,446',
'444,446,446,446,444,444,,,,444,,444,444,444,444,444,444,444,,,,,,444',
'444,444,444,444,444,444,,,444,,,,,,,444,,,444,444,444,444,444,444,444',
'444,444,444,444,444,,444,444,444,444,444,,,,,,,,,,,,,,,,,,,,444,,,444',
',,444,444,,,444,,444,,444,,444,,,444,,,,,,444,,,,,444,444,444,444,,444',
'444,444,444,,,,,444,444,,,,876,876,876,444,876,444,444,444,876,876,',
',,876,,876,876,876,876,876,876,876,,,,,,876,876,876,876,876,876,876',
',,876,,,,,,,876,,,876,876,876,876,876,876,876,876,,876,876,876,,876',
'876,,,876,,,,,,,,,,,,,,,,,,,,876,,,876,,,876,876,,,876,,,,,,,,,,,,,',
',,,,,,876,876,876,876,,876,876,876,876,,,,,876,876,,,,207,207,207,876',
'207,876,876,876,207,207,,,,207,,207,207,207,207,207,207,207,,,,,,207',
'207,207,207,207,207,207,,,207,,,,,,,207,,,207,207,207,207,207,207,207',
'207,,207,207,207,,207,207,207,207,207,,,,,,,,,,,,,,,,,,,,207,,,207,',
',207,207,,,207,,207,,,,207,,,,,,,,,207,,,,,207,207,207,207,,207,207',
'207,207,,,,,207,207,,,,208,208,208,207,208,207,207,207,208,208,,,,208',
',208,208,208,208,208,208,208,,,,,,208,208,208,208,208,208,208,,,208',
',,,,,,208,,,208,208,208,208,208,208,208,208,,208,208,208,,208,208,208',
'208,208,,,,,,,,,,,,,,,,,,,,208,,,208,,,208,208,,,208,,,,,,208,,,,,,',
',,208,,,,,208,208,208,208,,208,208,208,208,,,,,208,208,,,,209,209,209',
'208,209,208,208,208,209,209,,,,209,,209,209,209,209,209,209,209,,,,',
',209,209,209,209,209,209,209,,,209,,,,,,,209,,,209,209,209,209,209,209',
'209,209,209,209,209,209,,209,209,209,209,209,,,,,,,,,,,,,,,,,,,,209',
',,209,,,209,209,,,209,,209,,209,,209,,,209,,,,,,209,,,,,209,209,209',
'209,,209,209,209,209,,,,,209,209,,,,44,44,44,209,44,209,209,209,44,44',
',,,44,,44,44,44,44,44,44,44,,,,,,44,44,44,44,44,44,44,,,44,,,,,,,44',
',,44,44,44,44,44,44,44,44,,44,44,44,,44,44,44,44,44,,,,,,,,,,,,,,,,',
',,,44,,,44,,,44,44,,,44,,,,,,44,,,,,,,,,44,,,,,44,44,44,44,,44,44,44',
'44,,,,,44,44,,,,844,844,844,44,844,44,44,44,844,844,,,,844,,844,844',
'844,844,844,844,844,,,,,,844,844,844,844,844,844,844,,,844,,,,,,,844',
',,844,844,844,844,844,844,844,844,,844,844,844,,844,844,844,844,844',
',,,,,,,,,,,,,,,,,,,844,,,844,,,844,844,,,844,,844,,,,844,,,,,,,,,844',
',,,,844,844,844,844,,844,844,844,844,,,,,844,844,,,,214,214,214,844',
'214,844,844,844,214,214,,,,214,,214,214,214,214,214,214,214,,,,,,214',
'214,214,214,214,214,214,,,214,,,,,,,214,,,214,214,214,214,214,214,214',
'214,,214,214,214,,214,214,214,214,214,,,,,,,,,,,,,,,,,,,,214,,,214,',
',214,214,,,214,,,,,,214,,,,,,,,,214,,,,,214,214,214,214,,214,214,214',
'214,,,,,214,214,,,,215,215,215,214,215,214,214,214,215,215,,,,215,,215',
'215,215,215,215,215,215,,,,,,215,215,215,215,215,215,215,,,215,,,,,',
',215,,,215,215,215,215,215,215,215,215,,215,215,215,,215,215,215,215',
'215,,,,,,,,,,,,,,,,,,,,215,,,215,,,215,215,,,215,,215,,,,215,,,,,,,',
',215,,,,,215,215,215,215,,215,215,215,215,,,,,215,215,,,,216,216,216',
'215,216,215,215,215,216,216,,,,216,,216,216,216,216,216,216,216,,,,',
',216,216,216,216,216,216,216,,,216,,,,,,,216,,,216,216,216,216,216,216',
'216,216,,216,216,216,,216,216,216,216,216,,,,,,,,,,,,,,,,,,,,216,,,216',
',,216,216,,,216,,,,,,216,,,,,,,,,216,,,,,216,216,216,216,,216,216,216',
'216,,,,,216,216,,,,217,217,217,216,217,216,216,216,217,217,,,,217,,217',
'217,217,217,217,217,217,,,,,,217,217,217,217,217,217,217,,,217,,,,,',
',217,,,217,217,217,217,217,217,217,217,,217,217,217,,217,217,217,217',
'217,,,,,,,,,,,,,,,,,,,,217,,,217,,,217,217,,,217,,,,,,217,,,,,,,,,217',
',,,,217,217,217,217,,217,217,217,217,,,,,217,217,,,,218,218,218,217',
'218,217,217,217,218,218,,,,218,,218,218,218,218,218,218,218,,,,,,218',
'218,218,218,218,218,218,,,218,,,,,,,218,,,218,218,218,218,218,218,218',
'218,,218,218,218,,218,218,218,218,218,,,,,,,,,,,,,,,,,,,,218,,,218,',
',218,218,,,218,,,,,,218,,,,,,,,,218,,,,,218,218,218,218,,218,218,218',
'218,,,,,218,218,,,,219,219,219,218,219,218,218,218,219,219,,,,219,,219',
'219,219,219,219,219,219,,,,,,219,219,219,219,219,219,219,,,219,,,,,',
',219,,,219,219,219,219,219,219,219,219,,219,219,219,,219,219,219,219',
'219,,,,,,,,,,,,,,,,,,,,219,,,219,,,219,219,,,219,,,,,,219,,,,,,,,,219',
',,,,219,219,219,219,,219,219,219,219,,,,,219,219,219,,,43,43,43,219',
'43,219,219,219,43,43,,,,43,,43,43,43,43,43,43,43,,,,,,43,43,43,43,43',
'43,43,,,43,,,,,,,43,,,43,43,43,43,43,43,43,43,,43,43,43,,43,43,43,43',
'43,,,,,,,,,,,,,,,,,,,,43,,,43,,,43,43,,,43,,,,,,43,,,,,,,,,43,,,,,43',
'43,43,43,,43,43,43,43,,,,,43,43,,,,42,42,42,43,42,43,43,43,42,42,,,',
'42,,42,42,42,42,42,42,42,,,,,,42,42,42,42,42,42,42,,,42,,,,,,,42,,,42',
'42,42,42,42,42,42,42,,42,42,42,,42,42,42,42,42,,,,,,,,,,,,,,,,,,,,42',
',,42,,,42,42,,,42,,,,,,42,,,,,,,,,42,,,,,42,42,42,42,,42,42,42,42,,',
',,42,42,,,,839,839,839,42,839,42,42,42,839,839,,,,839,,839,839,839,839',
'839,839,839,,,,,,839,839,839,839,839,839,839,,,839,,,,,,,839,,,839,839',
'839,839,839,839,839,839,,839,839,839,,839,839,839,839,839,,,,,,,,,,',
',,,,,,,,,839,,,839,,,839,839,,,839,,,,,,839,,,,,,,,,839,,,,,839,839',
'839,839,,839,839,839,839,,,,,839,839,,,,488,488,488,839,488,839,839',
'839,488,488,,,,488,,488,488,488,488,488,488,488,,,,,,488,488,488,488',
'488,488,488,,,488,,,,,,,488,,,488,488,488,488,488,488,488,488,488,488',
'488,488,,488,488,488,488,488,,,,,,,,,,,,,,,,,,,,488,,,488,,,488,488',
',,488,,488,,488,,488,,,488,,,,,,488,,,,,488,488,488,488,,488,488,488',
'488,,,,,488,488,,,,490,490,490,488,490,488,488,488,490,490,,,,490,,490',
'490,490,490,490,490,490,,,,,,490,490,490,490,490,490,490,,,490,,,,,',
',490,,,490,490,490,490,490,490,490,490,490,490,490,490,,490,490,490',
'490,490,,,,,,,,,,,,,,,,,,,,490,,,490,,,490,490,,,490,,,,490,,490,,,490',
',,,,,490,,,,,490,490,490,490,,490,490,490,490,,,,,490,490,,,,888,888',
'888,490,888,490,490,490,888,888,,,,888,,888,888,888,888,888,888,888',
',,,,,888,888,888,888,888,888,888,,,888,,,,,,,888,,,888,888,888,888,888',
'888,888,888,,888,888,888,,888,888,,,888,,,,,,,,,,,,,,,,,,,,888,,,888',
',,888,888,,,888,,,,,,,,,,,,,,,,,,,,888,888,888,888,,888,888,888,888',
',,,,888,888,,,,492,492,492,888,492,888,888,888,492,492,,,,492,,492,492',
'492,492,492,492,492,,,,,,492,492,492,492,492,492,492,,,492,,,,,,,492',
',,492,492,492,492,492,492,492,492,,492,492,492,,492,492,492,492,492',
',,,,,,,,,,,,,,,,,,,492,,,492,,,492,492,,,492,,,,,,492,,,,,,,,,492,,',
',,492,492,492,492,,492,492,492,492,,,,,492,492,,,,230,230,230,492,230',
'492,492,492,230,230,,,,230,,230,230,230,230,230,230,230,,,,,,230,230',
'230,230,230,230,230,,,230,,,,,,,230,,,230,230,230,230,230,230,230,230',
',230,230,230,,230,230,230,230,230,,,,,,,,,,,,,,,,,,,,230,,,230,,,230',
'230,,,230,,,,,,230,,,,,,,,,230,,,,,230,230,230,230,,230,230,230,230',
',,,,230,230,,,,,,,230,,230,230,230,498,498,498,498,498,,,,498,498,,',
',498,,498,498,498,498,498,498,498,,,,,,498,498,498,498,498,498,498,',
',498,,,,,,498,498,498,498,498,498,498,498,498,498,498,498,,498,498,498',
',498,498,498,498,498,,,,,,,,,,,,,,,,,,,,498,,,498,,,498,498,,,498,,498',
',,,498,,,,,,,,,498,,,,,498,498,498,498,,498,498,498,498,,,,,498,498',
',,,,,498,498,,498,498,498,5,5,5,5,5,,,,5,5,,,,5,,5,5,5,5,5,5,5,,,,,',
'5,5,5,5,5,5,5,,,5,,,,,,5,5,5,5,5,5,5,5,5,5,5,5,,5,5,5,,5,5,5,5,5,,,',
',,,,,,,,,,,,,,,,5,,,5,,,5,5,,,5,,5,,,,5,,,,,,,,,5,,,,,5,5,5,5,,5,5,5',
'5,,,,,5,5,,,,233,233,233,5,233,5,5,5,233,233,,,,233,,233,233,233,233',
'233,233,233,,,,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233,233',
'233,233,233,233,233,233,,233,233,233,,233,233,233,233,233,,,,,,,,,,',
',,,,,,,,,233,,,233,,,233,233,,,233,,,,,,233,,,,,,,,,233,,,,,233,233',
'233,233,,233,233,233,233,,,,,233,233,,,,234,234,234,233,234,233,233',
'233,234,234,,,,234,,234,234,234,234,234,234,234,,,,,,234,234,234,234',
'234,234,234,,,234,,,,,,,234,,,234,234,234,234,234,234,234,234,,234,234',
'234,,234,234,234,234,234,,,,,,,,,,,,,,,,,,,,234,,,234,,,234,234,,,234',
',,,,,234,,,,,,,,,234,,,,,234,234,234,234,,234,234,234,234,,,,,234,234',
',,,235,235,235,234,235,234,234,234,235,235,,,,235,,235,235,235,235,235',
'235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235,235,235',
'235,235,235,235,235,,235,235,235,,235,235,235,235,235,,,,,,,,,,,,,,',
',,,,,235,,,235,,,235,235,,,235,,,,,,235,,,,,,,,,235,,,,,235,235,235',
'235,,235,235,235,235,,,,,235,235,,,,236,236,236,235,236,235,235,235',
'236,236,,,,236,,236,236,236,236,236,236,236,,,,,,236,236,236,236,236',
'236,236,,,236,,,,,,,236,,,236,236,236,236,236,236,236,236,,236,236,236',
',236,236,236,236,236,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,236,,,236,,',
',,,236,,,,,,,,,236,,,,,236,236,236,236,,236,236,236,236,,,,,236,236',
',,,237,237,237,236,237,236,236,236,237,237,,,,237,,237,237,237,237,237',
'237,237,,,,,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237,237,237',
'237,237,237,237,237,,237,237,237,,237,237,237,237,237,,,,,,,,,,,,,,',
',,,,,237,,,237,,,237,237,,,237,,,,,,237,,,,,,,,,237,,,,,237,237,237',
'237,,237,237,237,237,,,,,237,237,,,,637,637,637,237,637,237,237,237',
'637,637,,,,637,,637,637,637,637,637,637,637,,,,,,637,637,637,637,637',
'637,637,,,637,,,,,,,637,,,637,637,637,637,637,637,637,637,,637,637,637',
',637,637,637,637,637,,,,,,,,,,,,,,,,,,,,637,,,637,,,637,637,,,637,,',
',,,637,,,,,,,,,637,,,,,637,637,637,637,,637,637,637,637,,,,,637,637',
',,,239,239,239,637,239,637,637,637,239,239,,,,239,,239,239,239,239,239',
'239,239,,,,,,239,239,239,239,239,239,239,,,239,,,,,,,239,,,239,239,239',
'239,239,239,239,239,,239,239,239,,239,239,239,239,239,,,,,,,,,,,,,,',
',,,,,239,,,239,,,239,239,,,239,,,,,,239,,,,,,,,,239,,,,,239,239,239',
'239,,239,239,239,239,,,,,239,239,,,,240,240,240,239,240,239,239,239',
'240,240,,,,240,,240,240,240,240,240,240,240,,,,,,240,240,240,240,240',
'240,240,,,240,,,,,,,240,,,240,240,240,240,240,240,240,240,,240,240,240',
',240,240,240,240,240,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,240,,,240,,',
',,,240,,,,,,,,,240,,,,,240,240,240,240,,240,240,240,240,,,,,240,240',
',,,241,241,241,240,241,240,240,240,241,241,,,,241,,241,241,241,241,241',
'241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,,,241,,,241,241,241',
'241,241,241,241,241,,241,241,241,,241,241,241,241,241,,,,,,,,,,,,,,',
',,,,,241,,,241,,,241,241,,,241,,,,,,241,,,,,,,,,241,,,,,241,241,241',
'241,,241,241,241,241,,,,,241,241,,,,242,242,242,241,242,241,241,241',
'242,242,,,,242,,242,242,242,242,242,242,242,,,,,,242,242,242,242,242',
'242,242,,,242,,,,,,,242,,,242,242,242,242,242,242,242,242,,242,242,242',
',242,242,242,242,242,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,242,,,242,,',
',,,242,,,,,,,,,242,,,,,242,242,242,242,,242,242,242,242,,,,,242,242',
',,,243,243,243,242,243,242,242,242,243,243,,,,243,,243,243,243,243,243',
'243,243,,,,,,243,243,243,243,243,243,243,,,243,,,,,,,243,,,243,243,243',
'243,243,243,243,243,,243,243,243,,243,243,243,243,243,,,,,,,,,,,,,,',
',,,,,243,,,243,,,243,243,,,243,,,,,,243,,,,,,,,,243,,,,,243,243,243',
'243,,243,243,243,243,,,,,243,243,,,,244,244,244,243,244,243,243,243',
'244,244,,,,244,,244,244,244,244,244,244,244,,,,,,244,244,244,244,244',
'244,244,,,244,,,,,,,244,,,244,244,244,244,244,244,244,244,,244,244,244',
',244,244,244,244,244,,,,,,,,,,,,,,,,,,,,244,,,244,,,244,244,,,244,,',
',,,244,,,,,,,,,244,,,,,244,244,244,244,,244,244,244,244,,,,,244,244',
',,,245,245,245,244,245,244,244,244,245,245,,,,245,,245,245,245,245,245',
'245,245,,,,,,245,245,245,245,245,245,245,,,245,,,,,,,245,,,245,245,245',
'245,245,245,245,245,,245,245,245,,245,245,245,245,245,,,,,,,,,,,,,,',
',,,,,245,,,245,,,245,245,,,245,,,,,,245,,,,,,,,,245,,,,,245,245,245',
'245,,245,245,245,245,,,,,245,245,,,,246,246,246,245,246,245,245,245',
'246,246,,,,246,,246,246,246,246,246,246,246,,,,,,246,246,246,246,246',
'246,246,,,246,,,,,,,246,,,246,246,246,246,246,246,246,246,,246,246,246',
',246,246,246,246,246,,,,,,,,,,,,,,,,,,,,246,,,246,,,246,246,,,246,,',
',,,246,,,,,,,,,246,,,,,246,246,246,246,,246,246,246,246,,,,,246,246',
',,,247,247,247,246,247,246,246,246,247,247,,,,247,,247,247,247,247,247',
'247,247,,,,,,247,247,247,247,247,247,247,,,247,,,,,,,247,,,247,247,247',
'247,247,247,247,247,,247,247,247,,247,247,247,247,247,,,,,,,,,,,,,,',
',,,,,247,,,247,,,247,247,,,247,,,,,,247,,,,,,,,,247,,,,,247,247,247',
'247,,247,247,247,247,,,,,247,247,,,,248,248,248,247,248,247,247,247',
'248,248,,,,248,,248,248,248,248,248,248,248,,,,,,248,248,248,248,248',
'248,248,,,248,,,,,,,248,,,248,248,248,248,248,248,248,248,,248,248,248',
',248,248,248,248,248,,,,,,,,,,,,,,,,,,,,248,,,248,,,248,248,,,248,,',
',,,248,,,,,,,,,248,,,,,248,248,248,248,,248,248,248,248,,,,,248,248',
',,,249,249,249,248,249,248,248,248,249,249,,,,249,,249,249,249,249,249',
'249,249,,,,,,249,249,249,249,249,249,249,,,249,,,,,,,249,,,249,249,249',
'249,249,249,249,249,,249,249,249,,249,249,249,249,249,,,,,,,,,,,,,,',
',,,,,249,,,249,,,249,249,,,249,,,,,,249,,,,,,,,,249,,,,,249,249,249',
'249,,249,249,249,249,,,,,249,249,,,,250,250,250,249,250,249,249,249',
'250,250,,,,250,,250,250,250,250,250,250,250,,,,,,250,250,250,250,250',
'250,250,,,250,,,,,,,250,,,250,250,250,250,250,250,250,250,,250,250,250',
',250,250,250,250,250,,,,,,,,,,,,,,,,,,,,250,,,250,,,250,250,,,250,,',
',,,250,,,,,,,,,250,,,,,250,250,250,250,,250,250,250,250,,,,,250,250',
',,,251,251,251,250,251,250,250,250,251,251,,,,251,,251,251,251,251,251',
'251,251,,,,,,251,251,251,251,251,251,251,,,251,,,,,,,251,,,251,251,251',
'251,251,251,251,251,,251,251,251,,251,251,251,251,251,,,,,,,,,,,,,,',
',,,,,251,,,251,,,251,251,,,251,,,,,,251,,,,,,,,,251,,,,,251,251,251',
'251,,251,251,251,251,,,,,251,251,,,,252,252,252,251,252,251,251,251',
'252,252,,,,252,,252,252,252,252,252,252,252,,,,,,252,252,252,252,252',
'252,252,,,252,,,,,,,252,,,252,252,252,252,252,252,252,252,,252,252,252',
',252,252,252,252,252,,,,,,,,,,,,,,,,,,,,252,,,252,,,252,252,,,252,,',
',,,252,,,,,,,,,252,,,,,252,252,252,252,,252,252,252,252,,,,,252,252',
',,,253,253,253,252,253,252,252,252,253,253,,,,253,,253,253,253,253,253',
'253,253,,,,,,253,253,253,253,253,253,253,,,253,,,,,,,253,,,253,253,253',
'253,253,253,253,253,,253,253,253,,253,253,253,253,253,,,,,,,,,,,,,,',
',,,,,253,,,253,,,253,253,,,253,,,,,,253,,,,,,,,,253,,,,,253,253,253',
'253,,253,253,253,253,,,,,253,253,,,,254,254,254,253,254,253,253,253',
'254,254,,,,254,,254,254,254,254,254,254,254,,,,,,254,254,254,254,254',
'254,254,,,254,,,,,,,254,,,254,254,254,254,254,254,254,254,,254,254,254',
',254,254,254,254,254,,,,,,,,,,,,,,,,,,,,254,,,254,,,254,254,,,254,,',
',,,254,,,,,,,,,254,,,,,254,254,254,254,,254,254,254,254,,,,,254,254',
',,,255,255,255,254,255,254,254,254,255,255,,,,255,,255,255,255,255,255',
'255,255,,,,,,255,255,255,255,255,255,255,,,255,,,,,,,255,,,255,255,255',
'255,255,255,255,255,,255,255,255,,255,255,255,255,255,,,,,,,,,,,,,,',
',,,,,255,,,255,,,255,255,,,255,,,,,,255,,,,,,,,,255,,,,,255,255,255',
'255,,255,255,255,255,,,,,255,255,,,,256,256,256,255,256,255,255,255',
'256,256,,,,256,,256,256,256,256,256,256,256,,,,,,256,256,256,256,256',
'256,256,,,256,,,,,,,256,,,256,256,256,256,256,256,256,256,,256,256,256',
',256,256,256,256,256,,,,,,,,,,,,,,,,,,,,256,,,256,,,256,256,,,256,,',
',,,256,,,,,,,,,256,,,,,256,256,256,256,,256,256,256,256,,,,,256,256',
',,,257,257,257,256,257,256,256,256,257,257,,,,257,,257,257,257,257,257',
'257,257,,,,,,257,257,257,257,257,257,257,,,257,,,,,,,257,,,257,257,257',
'257,257,257,257,257,,257,257,257,,257,257,257,257,257,,,,,,,,,,,,,,',
',,,,,257,,,257,,,257,257,,,257,,,,,,257,,,,,,,,,257,,,,,257,257,257',
'257,,257,257,257,257,,,,,257,257,,,,789,789,789,257,789,257,257,257',
'789,789,,,,789,,789,789,789,789,789,789,789,,,,,,789,789,789,789,789',
'789,789,,,789,,,,,,,789,,,789,789,789,789,789,789,789,789,,789,789,789',
',789,789,,,789,,,,,,,,,,,,,,,,,,,,789,,,789,,,789,789,,,789,,,,,,,,',
',,,,,,,,,,,789,789,789,789,,789,789,789,789,,,,,789,789,,,,775,775,775',
'789,775,789,789,789,775,775,,,,775,,775,775,775,775,775,775,775,,,,',
',775,775,775,775,775,775,775,,,775,,,,,,,775,,,775,775,775,775,775,775',
'775,775,,775,775,775,,775,775,775,775,775,,,,,,,,,,,,,,,,,,,,775,,,775',
',,775,775,,,775,,,,,,775,,,,,,,,,775,,,,,775,775,775,775,,775,775,775',
'775,,,,,775,775,,,,265,265,265,775,265,775,775,775,265,265,,,,265,,265',
'265,265,265,265,265,265,,,,,,265,265,265,265,265,265,265,,,265,,,,,',
',265,,,265,265,265,265,265,265,265,265,265,265,265,265,,265,265,265',
'265,265,,,,,,,,,,,,,,,,,,,,265,,,265,,,265,265,,,265,,265,,265,,265',
',,265,,,,,,265,,,,,265,265,265,265,,265,265,265,265,,,,,265,265,,,,266',
'266,266,265,266,265,265,265,266,266,,,,266,,266,266,266,266,266,266',
'266,,,,,,266,266,266,266,266,266,266,,,266,,,,,,,266,,,266,266,266,266',
'266,266,266,266,266,266,266,266,,266,266,266,266,266,,,,,,,,,,,,,,,',
',,,,266,,,266,,,266,266,,,266,,266,,266,,266,,,266,,,,,,266,,,,,266',
'266,266,266,,266,266,266,266,,,,,266,266,,,,274,274,274,266,274,266',
'266,266,274,274,,,,274,,274,274,274,274,274,274,274,,,,,,274,274,274',
'274,274,274,274,,,274,,,,,,,274,,,274,274,274,274,274,274,274,274,274',
'274,274,274,,274,274,274,274,274,,,,,,,,,,,,,,,,,,,,274,,,274,,,274',
'274,,,274,,274,,274,,274,,,274,,,,,,274,,,,,274,274,274,274,,274,274',
'274,274,,,,,274,274,274,,,774,774,774,274,774,274,274,274,774,774,,',
',774,,774,774,774,774,774,774,774,,,,,,774,774,774,774,774,774,774,',
',774,,,,,,,774,,,774,774,774,774,774,774,774,774,,774,774,774,,774,774',
'774,774,774,,,,,,,,,,,,,,,,,,,,774,,,774,,,774,774,,,774,,,,,,774,,',
',,,,,,774,,,,,774,774,774,774,,774,774,774,774,,,,,774,774,,,,773,773',
'773,774,773,774,774,774,773,773,,,,773,,773,773,773,773,773,773,773',
',,,,,773,773,773,773,773,773,773,,,773,,,,,,,773,,,773,773,773,773,773',
'773,773,773,,773,773,773,,773,773,773,773,773,,,,,,,,,,,,,,,,,,,,773',
',,773,,,773,773,,,773,,,,,,773,,,,,,,,,773,,,,,773,773,773,773,,773',
'773,773,773,,,,,773,773,,,,772,772,772,773,772,773,773,773,772,772,',
',,772,,772,772,772,772,772,772,772,,,,,,772,772,772,772,772,772,772',
',,772,,,,,,,772,,,772,772,772,772,772,772,772,772,,772,772,772,,772',
'772,772,772,772,,,,,,,,,,,,,,,,,,,,772,,,772,,,772,772,,,772,,,,,,772',
',,,,,,,,772,,,,,772,772,772,772,,772,772,772,772,,,,,772,772,,,,281',
'281,281,772,281,772,772,772,281,281,,,,281,,281,281,281,281,281,281',
'281,,,,,,281,281,281,281,281,281,281,,,281,,,,,,,281,,,281,281,281,281',
'281,281,281,281,,281,281,281,,281,281,281,281,281,,,,,,,,,,,,,,,,,,',
',281,,,281,,,281,281,,,281,,,,,,281,,,,,,,,,281,,,,,281,281,281,281',
',281,281,281,281,,,,,281,281,,,,758,758,758,281,758,281,281,281,758',
'758,,,,758,,758,758,758,758,758,758,758,,,,,,758,758,758,758,758,758',
'758,,,758,,,,,,,758,,,758,758,758,758,758,758,758,758,,758,758,758,',
'758,758,758,758,758,,,,,,,,,,,,,,,,,,,,758,,,758,,,758,758,,,758,,,',
',,758,,,,,,,,,758,,,,,758,758,758,758,,758,758,758,758,,,,,758,758,',
',,283,283,283,758,283,758,758,758,283,283,,,,283,,283,283,283,283,283',
'283,283,,,,,,283,283,283,283,283,283,283,,,283,,,,,,,283,,,283,283,283',
'283,283,283,283,283,,283,283,283,,283,283,283,283,283,,,,,,,,,,,,,,',
',,,,,283,,,283,,,283,283,,,283,,,,,,283,,,,,,,,,283,,,,,283,283,283',
'283,,283,283,283,283,,,,,283,283,,,,286,286,286,283,286,283,283,283',
'286,286,,,,286,,286,286,286,286,286,286,286,,,,,,286,286,286,286,286',
'286,286,,,286,,,,,,,286,,,286,286,286,286,286,286,286,286,,286,286,286',
',286,286,286,286,286,,,,,,,,,,,,,,,,,,,,286,,,286,,,286,286,,,286,,',
',,,286,,,,,,,,,286,,,,,286,286,286,286,,286,286,286,286,,,,,286,286',
',,,287,287,287,286,287,286,286,286,287,287,,,,287,,287,287,287,287,287',
'287,287,,,,,,287,287,287,287,287,287,287,,,287,,,,,,,287,,,287,287,287',
'287,287,287,287,287,,287,287,287,,287,287,287,287,287,,,,,,,,,,,,,,',
',,,,,287,,,287,,,287,287,,,287,,,,,,287,,,,,,,,,287,,,,,287,287,287',
'287,,287,287,287,287,,,,,287,287,,,,756,756,756,287,756,287,287,287',
'756,756,,,,756,,756,756,756,756,756,756,756,,,,,,756,756,756,756,756',
'756,756,,,756,,,,,,,756,,,756,756,756,756,756,756,756,756,,756,756,756',
',756,756,756,756,756,,,,,,,,,,,,,,,,,,,,756,,,756,,,756,756,,,756,,',
',,,756,,,,,,,,,756,,,,,756,756,756,756,,756,756,756,756,,,,,756,756',
',,,,,,756,,756,756,756,292,292,292,292,292,,,,292,292,,,,292,,292,292',
'292,292,292,292,292,,,,,,292,292,292,292,292,292,292,,,292,,,,,,292',
'292,,292,292,292,292,292,292,292,292,292,,292,292,292,,292,292,292,292',
'292,,,,,,,,,,,,,,,,,,,,292,,,292,,,292,292,,,292,,292,,,,292,,,,,,,',
',292,,,,,292,292,292,292,,292,292,292,292,,,,,292,292,,,,35,35,35,292',
'35,292,292,292,35,35,,,,35,,35,35,35,35,35,35,35,,,,,,35,35,35,35,35',
'35,35,,,35,,,,,,,35,,,35,35,35,35,35,35,35,35,,35,35,35,,35,35,,,35',
',,,,,,,,,,,,,,,,,,,35,,,35,,,35,35,,,35,,,979,,979,979,979,979,979,',
',,,,,,,979,,35,35,35,35,,35,35,35,35,,,,,35,35,,,,35,,979,35,,35,35',
'35,506,506,506,,506,979,979,,506,506,979,,,506,,506,506,506,506,506',
'506,506,,,,,,506,506,506,506,506,506,506,,,506,,,,,,,506,,,506,506,506',
'506,506,506,506,506,,506,506,506,,506,506,,,506,,,,,,,,,,,,,,,,,,,,506',
',,506,,,506,506,,,506,,,,,,,,,,,,,,,,,,,,506,506,506,506,,506,506,506',
'506,,,,,506,506,,,,34,34,34,506,34,506,506,506,34,34,,,,34,,34,34,34',
'34,34,34,34,,,,,,34,34,34,34,34,34,34,,,34,,,,,,,34,,,34,34,34,34,34',
'34,34,34,,34,34,34,,34,34,,,34,,,,,,,,,,,,,,,,,,,,34,,,34,,,34,34,,',
'34,,34,,,,,,,,,,,,,,,,,,34,34,34,34,,34,34,34,34,,,,,34,34,,,,31,31',
'31,34,31,34,34,34,31,31,,,,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31',
'31,31,31,,,31,,,,,,,31,,,31,31,31,31,31,31,31,31,31,31,31,31,,31,31',
'31,31,31,,,,,,,,,,,,,,,,,,,,31,,,31,,,31,31,,,31,,31,,31,,31,,,31,,',
',,,31,,,,,31,31,31,31,,31,31,31,31,,,,,31,31,,,,733,733,733,31,733,31',
'31,31,733,733,,,,733,,733,733,733,733,733,733,733,,,,,,733,733,733,733',
'733,733,733,,,733,,,,,,,733,,,733,733,733,733,733,733,733,733,,733,733',
'733,,733,733,733,733,733,,,,,,,,,,,,,,,,,,,,733,,,733,,,733,733,,,733',
',,,,,733,,,,,,,,,733,,,,,733,733,733,733,,733,733,733,733,,,,,733,733',
',,,30,30,30,733,30,733,733,733,30,30,,,,30,,30,30,30,30,30,30,30,,,',
',,30,30,30,30,30,30,30,,,30,,,,,,,30,,,30,30,30,30,30,30,30,30,30,30',
'30,30,,30,30,30,30,30,,,,,,,,,,,,,,,,,,,,30,,,30,,,30,30,,,30,,30,,30',
',30,,,30,,,,,,30,,,,,30,30,30,30,,30,30,30,30,,,,,30,30,,,,508,508,508',
'30,508,30,30,30,508,508,,,,508,,508,508,508,508,508,508,508,,,,,,508',
'508,508,508,508,508,508,,,508,,,,,,,508,,,508,508,508,508,508,508,508',
'508,508,508,508,508,,508,508,508,508,508,,,,,,,,,,,,,,,,,,,,508,,,508',
',,508,508,,,508,,508,,508,,508,,,508,,,,,,508,,,,,508,508,508,508,,508',
'508,508,508,,,,,508,508,,,,300,300,300,508,300,508,508,508,300,300,',
',,300,,300,300,300,300,300,300,300,,,,,,300,300,300,300,300,300,300',
',,300,,,,,,,300,,,300,300,300,300,300,300,300,300,,300,300,300,,300',
'300,,,300,,,,,,,,,,,,,,,,,,,,300,,,300,,,300,300,,,300,,,975,,975,975',
'975,975,975,,,,,,,,,975,,300,300,300,300,,300,300,300,300,,,,,300,300',
',,,300,,975,300,,300,300,300,29,29,29,,29,975,975,,29,29,975,,,29,,29',
'29,29,29,29,29,29,,,,,,29,29,29,29,29,29,29,,,29,,,,,,,29,,,29,29,29',
'29,29,29,29,29,29,29,29,29,,29,29,29,29,29,,,,,,,,,,,,,,,,,,,,29,,,29',
',,29,29,,,29,,29,,29,,29,,,29,,,,,,29,,,,,29,29,29,29,,29,29,29,29,',
',,,29,29,,,,727,727,727,29,727,29,29,29,727,727,,,,727,,727,727,727',
'727,727,727,727,,,,,,727,727,727,727,727,727,727,,,727,,,,,,,727,,,727',
'727,727,727,727,727,727,727,,727,727,727,,727,727,727,727,727,,,,,,',
',,,,,,,,,,,,,727,,,727,,,727,727,,,727,,,,,,727,,,,,,,,,727,,,,,727',
'727,727,727,,727,727,727,727,,,,,727,727,,,,514,514,514,727,514,727',
'727,727,514,514,,,,514,,514,514,514,514,514,514,514,,,,,,514,514,514',
'514,514,514,514,,,514,,,,,,,514,,,514,514,514,514,514,514,514,514,,514',
'514,514,,514,514,,,514,,,,,,,,,,,,,,,,,,,,514,,,514,,,514,514,,,514',
',,,,,,,,,,,,,,,,,,,514,514,514,514,,514,514,514,514,,,,,514,514,,,,517',
'517,517,514,517,514,514,514,517,517,,,,517,,517,517,517,517,517,517',
'517,,,,,,517,517,517,517,517,517,517,,,517,,,,,,,517,,,517,517,517,517',
'517,517,517,517,,517,517,517,,517,517,517,517,517,,,,,,,,,,,,,,,,,,',
',517,,,517,,,517,517,,,517,,,,,,517,,,,,,,,,517,,,,,517,517,517,517',
',517,517,517,517,,,,,517,517,,,,518,518,518,517,518,517,517,517,518',
'518,,,,518,,518,518,518,518,518,518,518,,,,,,518,518,518,518,518,518',
'518,,,518,,,,,,,518,,,518,518,518,518,518,518,518,518,,518,518,518,',
'518,518,518,518,518,,,,,,,,,,,,,,,,,,,,518,,,518,,,518,518,,,518,,,',
',,518,,,,,,,,,518,,,,,518,518,518,518,,518,518,518,518,,,,,518,518,',
',,522,522,522,518,522,518,518,518,522,522,,,,522,,522,522,522,522,522',
'522,522,,,,,,522,522,522,522,522,522,522,,,522,,,,,,,522,,,522,522,522',
'522,522,522,522,522,,522,522,522,,522,522,522,522,522,,,,,,,,,,,,,,',
',,,,,522,,,522,,,522,522,,,522,,,,,,522,,,,,,,,,522,,,,,522,522,522',
'522,,522,522,522,522,,,,,522,522,,,,406,406,406,522,406,522,522,522',
'406,406,,,,406,,406,406,406,406,406,406,406,,,,,,406,406,406,406,406',
'406,406,,,406,,,,,,,406,,,406,406,406,406,406,406,406,406,,406,406,406',
',406,406,406,406,406,,,,,,,,,,,,,,,,,,,,406,,,406,,,406,406,,,406,,',
',,,406,,,,,,,,,406,,,,,406,406,406,406,,406,406,406,406,,,,,406,406',
',,,528,528,528,406,528,406,406,406,528,528,,,,528,,528,528,528,528,528',
'528,528,,,,,,528,528,528,528,528,528,528,,,528,,,,,,,528,,,528,528,528',
'528,528,528,528,528,528,528,528,528,,528,528,528,528,528,,,,,,,,,,,',
',,,,,,,,528,,,528,,,528,528,,,528,,528,,,,528,,,528,,,,,,528,,,,,528',
'528,528,528,,528,528,528,528,,,,,528,528,,,,531,531,531,528,531,528',
'528,528,531,531,,,,531,,531,531,531,531,531,531,531,,,,,,531,531,531',
'531,531,531,531,,,531,,,,,,,531,,,531,531,531,531,531,531,531,531,531',
'531,531,531,,531,531,531,531,531,,,,,,,,,,,,,,,,,,,,531,,,531,,,531',
'531,,,531,,,,,,531,,,531,,,,,,531,,,,,531,531,531,531,,531,531,531,531',
',,,,531,531,,,,63,63,63,531,63,531,531,531,63,63,,,,63,,63,63,63,63',
'63,63,63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,63,63,63,63',
'63,63,,63,63,63,,63,63,63,63,63,,,,,,,,,,,,,,,,,,,,63,,,63,,,63,63,',
',63,,,,,,63,,,,,,,,,63,,,,,63,63,63,63,,63,63,63,63,,,,,63,63,,,,474',
'474,474,63,474,63,63,63,474,474,,,,474,,474,474,474,474,474,474,474',
',,,,,474,474,474,474,474,474,474,,,474,,,,,,,474,,,474,474,474,474,474',
'474,474,474,,474,474,474,,474,474,474,474,474,,,,,,,,,,,,,,,,,,,,474',
',,474,,,474,474,,,474,,,,,,474,,,,,,,,,474,,,,,474,474,474,474,,474',
'474,474,474,,,,,474,474,,,,556,556,556,474,556,474,474,474,556,556,',
',,556,,556,556,556,556,556,556,556,,,,,,556,556,556,556,556,556,556',
',,556,,,,,,,556,,,556,556,556,556,556,556,556,556,,556,556,556,,556',
'556,556,556,556,,,,,,,,,,,,,,,,,,,,556,,,556,,,556,556,,,556,,,,,,556',
',,,,,,,,556,,,,,556,556,556,556,,556,556,556,556,,,,,556,556,,,,317',
'317,317,556,317,556,556,556,317,317,,,,317,,317,317,317,317,317,317',
'317,,,,,,317,317,317,317,317,317,317,,,317,,,,,,,317,,,317,317,317,317',
'317,317,317,317,,317,317,317,,317,317,,,317,,,,,,,,,,,,,,,,,,,,317,',
',317,,,317,317,,,317,,,,,,,,,,,,,,,,,,,,317,317,317,317,,317,317,317',
'317,,,,,317,317,,,,684,684,684,317,684,317,317,317,684,684,,,,684,,684',
'684,684,684,684,684,684,,,,,,684,684,684,684,684,684,684,,,684,,,,,',
',684,,,684,684,684,684,684,684,684,684,,684,684,684,,684,684,684,684',
'684,,,,,,,,,,,,,,,,,,,,684,,,684,,,684,684,,,684,,684,,,,684,,,,,,,',
',684,,,,,684,684,684,684,,684,684,684,684,,,,,684,684,,,,576,576,576',
'684,576,684,684,684,576,576,,,,576,,576,576,576,576,576,576,576,,,,',
',576,576,576,576,576,576,576,,,576,,,,,,,576,,,576,576,576,576,576,576',
'576,576,,576,576,576,,576,576,576,576,576,,,,,,,,,,,,,,,,,,,,576,,,576',
',,576,576,,,576,,576,,,,576,,,,,,,,,576,,,,,576,576,576,576,,576,576',
'576,576,,,,,576,576,,,,679,679,679,576,679,576,576,576,679,679,,,,679',
',679,679,679,679,679,679,679,,,,,,679,679,679,679,679,679,679,,,679',
',,,,,,679,,,679,679,679,679,679,679,679,679,,679,679,679,,679,679,,',
'679,,,,,,,,,,,,,,,,,,,,679,,,679,,,679,679,,,679,,,,,,,,,,,,,,,,,,,',
'679,679,679,679,,679,679,679,679,,,,,679,679,,,,577,577,577,679,577',
'679,679,679,577,577,,,,577,,577,577,577,577,577,577,577,,,,,,577,577',
'577,577,577,577,577,,,577,,,,,,,577,,,577,577,577,577,577,577,577,577',
'577,577,577,577,,577,577,577,577,577,,,,,,,,,,,,,,,,,,,,577,,,577,,',
'577,577,,,577,,577,,577,,577,,,577,,,,,,577,,,,,577,577,577,577,,577',
'577,577,577,,,,,577,577,,,,325,325,325,577,325,577,577,577,325,325,',
',,325,,325,325,325,325,325,325,325,,,,,,325,325,325,325,325,325,325',
',,325,,,,,,,325,,,325,325,325,325,325,325,325,325,,325,325,325,,325',
'325,325,325,325,,,,,,,,,,,,,,,,,,,,325,,,325,325,,325,325,,,325,,,,',
',325,,,,,,,,,325,,,,,325,325,325,325,,325,325,325,325,,,,,325,325,,',
',587,587,587,325,587,325,325,325,587,587,,,,587,,587,587,587,587,587',
'587,587,,,,,,587,587,587,587,587,587,587,,,587,,,,,,,587,,,587,587,587',
'587,587,587,587,587,587,587,587,587,,587,587,587,587,587,,,,,,,,,,,',
',,,,,,,,587,,,587,,,587,587,,,587,,587,,587,,587,,,587,,,,,,587,,,,',
'587,587,587,587,,587,587,587,587,,,,,587,587,,,,327,327,327,587,327',
'587,587,587,327,327,,,,327,,327,327,327,327,327,327,327,,,,,,327,327',
'327,327,327,327,327,,,327,,,,,,,327,,,327,327,327,327,327,327,327,327',
',327,327,327,,327,327,327,327,327,,,,,,,,,,,,,,,,,,,,327,,,327,,,327',
'327,,,327,,,,,,327,,,,,,,,,327,,,,,327,327,327,327,,327,327,327,327',
',,,,327,327,,,,378,378,378,327,378,327,327,327,378,378,,,,378,,378,378',
'378,378,378,378,378,,,,,,378,378,378,378,378,378,378,,,378,,,,,,,378',
',,378,378,378,378,378,378,378,378,,378,378,378,,378,378,378,378,378',
',,,,,,,,,,,,,,,,,,,378,,,378,,,378,378,,,378,,,,,,378,,,,,,,,,378,,',
',,378,378,378,378,,378,378,378,378,,,,,378,378,,,,987,987,987,378,987',
'378,378,378,987,987,,,,987,,987,987,987,987,987,987,987,,,,,,987,987',
'987,987,987,987,987,,,987,,,,,,,987,,,987,987,987,987,987,987,987,987',
'987,987,987,987,,987,987,987,987,987,,,,,,,,,,,,,,,,,,,,987,,,987,,',
'987,987,,,987,,987,,987,,987,,,987,,,,,,987,,,,,987,987,987,987,,987',
'987,987,987,,,,,987,987,,,,668,668,668,987,668,987,987,987,668,668,',
',,668,,668,668,668,668,668,668,668,,,,,,668,668,668,668,668,668,668',
',,668,,,,,,,668,,,668,668,668,668,668,668,668,668,,668,668,668,,668',
'668,,,668,,,,,,,,,,,,,,,,,,,,668,,,668,,,668,668,,,668,,,,,,,,,,,,,',
',,,,,,668,668,668,668,,668,668,668,668,,,,,668,668,,,,664,664,664,668',
'664,668,668,668,664,664,,,,664,,664,664,664,664,664,664,664,,,,,,664',
'664,664,664,664,664,664,,,664,,,,,,,664,,,664,664,664,664,664,664,664',
'664,,664,664,664,,664,664,664,664,664,,,,,,,,,,,,,,,,,,,,664,,,664,',
',664,664,,,664,,,,,,664,,,,,,,,,664,,,,,664,664,664,664,,664,664,664',
'664,,,,,664,664,,,,661,661,661,664,661,664,664,664,661,661,,,,661,,661',
'661,661,661,661,661,661,,,,,,661,661,661,661,661,661,661,,,661,,,,,',
',661,,,661,661,661,661,661,661,661,661,,661,661,661,,661,661,661,661',
'661,,,,,,,,,,,,,,,,,,,,661,,,661,,,661,661,,,661,,,,,,661,,,,,,,,,661',
',,,,661,661,661,661,,661,661,661,661,,,,,661,661,,,,925,925,925,661',
'925,661,661,661,925,925,,,,925,,925,925,925,925,925,925,925,,,,,,925',
'925,925,925,925,925,925,,,925,,,,,,,925,,,925,925,925,925,925,925,925',
'925,,925,925,925,,925,925,925,925,925,,,,,,,,,,,,,,,,,,,,925,,,925,',
',925,925,,,925,,,,,,925,,,,,,,,,925,,,,,925,925,925,925,,925,925,925',
'925,,,,,925,925,,,,621,621,621,925,621,925,925,925,621,621,,,,621,,621',
'621,621,621,621,621,621,,,,,,621,621,621,621,621,621,621,,,621,,,,,',
',621,,,621,621,621,621,621,621,621,621,,621,621,621,,621,621,621,621',
'621,,,,,,,,,,,,,,,,,,,,621,,,621,,,621,621,,,621,,621,,,,621,,,,,,,',
',621,,,,,621,621,621,621,,621,621,621,621,,,,,621,621,,,,622,622,622',
'621,622,621,621,621,622,622,,,,622,,622,622,622,622,622,622,622,,,,',
',622,622,622,622,622,622,622,,,622,,,,,,,622,,,622,622,622,622,622,622',
'622,622,,622,622,622,,622,622,622,622,622,,,,,,,,,,,,,,,,,,,,622,,,622',
',,622,622,,,622,,,,,,622,,,,,,,,,622,,,,,622,622,622,622,,622,622,622',
'622,,,,,622,622,,,,20,20,20,622,20,622,622,622,20,20,,,,20,,20,20,20',
'20,20,20,20,,,,,,20,20,20,20,20,20,20,,,20,,,,,,,20,,,20,20,20,20,20',
'20,20,20,,20,20,20,,20,20,20,20,20,,,,,,,,,,,,,,,,,,,,20,,,20,,,20,20',
',,20,,,,,,20,,,,,,,,,20,,,,,20,20,20,20,,20,20,20,20,,,,,20,20,,,,625',
'625,625,20,625,20,20,20,625,625,,,,625,,625,625,625,625,625,625,625',
',,,,,625,625,625,625,625,625,625,,,625,,,,,,,625,,,625,625,625,625,625',
'625,625,625,625,625,625,625,,625,625,625,625,625,,,,,,,,,,,,,,,,,,,',
'625,,,625,,,625,625,,,625,,625,,625,,625,,,625,,,,,,625,,,,,625,625',
'625,625,,625,625,625,625,,,,,625,625,,,,626,626,626,625,626,625,625',
'625,626,626,,,,626,,626,626,626,626,626,626,626,,,,,,626,626,626,626',
'626,626,626,,,626,,,,,,,626,,,626,626,626,626,626,626,626,626,626,626',
'626,626,,626,626,626,626,626,,,,,,,,,,,,,,,,,,,,626,,,626,,,626,626',
',,626,,,,626,,626,,,626,,,,,,626,,,,,626,626,626,626,,626,626,626,626',
',,,,626,626,,,,342,342,342,626,342,626,626,626,342,342,,,,342,,342,342',
'342,342,342,342,342,,,,,,342,342,342,342,342,342,342,,,342,,,,,,,342',
',,342,342,342,342,342,342,342,342,,342,342,342,,342,342,342,342,342',
',,,,,,,,,,,,,,,,,,,342,,,342,,,342,342,,,342,,,,,,342,,,,,,,,,342,,',
',,342,342,342,342,,342,342,342,342,,,,,342,342,,,,343,343,343,342,343',
'342,342,342,343,343,,,,343,,343,343,343,343,343,343,343,,,,,,343,343',
'343,343,343,343,343,,,343,,,,,,,343,,,343,343,343,343,343,343,343,343',
',343,343,343,,343,343,343,343,343,,,,,,,,,,,,,,,,,,,,343,,,343,,,343',
'343,,,343,,,,,,343,,,,,,,,,343,,,,,343,343,343,343,,343,343,343,343',
',,,,343,343,,,,627,627,627,343,627,343,343,343,627,627,,,,627,,627,627',
'627,627,627,627,627,,,,,,627,627,627,627,627,627,627,,,627,,,,,,,627',
',,627,627,627,627,627,627,627,627,,627,627,627,,627,627,627,627,627',
',,,,,,,,,,,,,,,,,,,627,,,627,,,627,627,,,627,,,,,,627,,,,,,,,,627,,',
',,627,627,627,627,,627,627,627,627,,,,,627,627,,,,628,628,628,627,628',
'627,627,627,628,628,,,,628,,628,628,628,628,628,628,628,,,,,,628,628',
'628,628,628,628,628,,,628,,,,,,,628,,,628,628,628,628,628,628,628,628',
',628,628,628,,628,628,628,628,628,,,,,,,,,,,,,,,,,,,,628,,,628,,,628',
'628,,,628,,,,,,628,,,,,,,,,628,,,,,628,628,628,628,,628,628,628,628',
',,,,628,628,,,,362,362,362,628,362,628,628,628,362,362,,,,362,,362,362',
'362,362,362,362,362,,,,,,362,362,362,362,362,362,362,,,362,,,,,,,362',
',,362,362,362,362,362,362,362,362,,362,362,362,,362,362,362,362,362',
',,,,,,,,,,,,,,,,,,,362,,,362,,,362,362,,,362,,,,,,362,,,,,,,,,362,,',
',,362,362,362,362,,362,362,362,362,,,,,362,362,,,,632,632,632,362,632',
'362,362,362,632,632,,,,632,,632,632,632,632,632,632,632,,,,,,632,632',
'632,632,632,632,632,,,632,,,,,,,632,,,632,632,632,632,632,632,632,632',
',632,632,632,,632,632,632,632,632,,,,,,,,,,,,,,,,,,,,632,,,632,,,632',
'632,,,632,,,,,,632,,,,,,,,,632,,,,,632,632,632,632,,632,632,632,632',
',,,,632,632,,,,633,633,633,632,633,632,632,632,633,633,,,,633,,633,633',
'633,633,633,633,633,,,,,,633,633,633,633,633,633,633,,,633,,,,,,,633',
',,633,633,633,633,633,633,633,633,,633,633,633,,633,633,633,633,633',
',,,,,,,,,,,,,,,,,,,633,,,633,,,633,633,,,633,,,,,,633,,,,,,,,,633,,',
',,633,633,633,633,,633,633,633,633,,,,,633,633,,,,636,636,636,633,636',
'633,633,633,636,636,,,,636,,636,636,636,636,636,636,636,,,,,,636,636',
'636,636,636,636,636,,,636,,,,,,,636,,,636,636,636,636,636,636,636,636',
',636,636,636,,636,636,636,636,636,,,,,,,,,,,,,,,,,,,,636,,,636,,,636',
'636,,,636,,,,,,636,,,,,,,,,636,,,,,636,636,636,636,,636,636,636,636',
',,,,636,636,,,,238,238,238,636,238,636,636,636,238,238,,,,238,,238,238',
'238,238,238,238,238,,,,,,238,238,238,238,238,238,238,,,238,,,,,,,238',
',,238,238,238,238,238,238,238,238,,238,238,238,,238,238,238,238,238',
',,,,,,,,,,,,,,,,,,,238,,,238,,,238,238,,,238,,,,,,238,,,,,,,,,238,,',
',,238,238,238,238,,238,238,238,238,,,,,238,238,,,,,,,238,,238,238,238',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8',
'8,,,,,,8,8,8,8,8,8,8,8,8,8,,8,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8',
'8,8,,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,,,,,8,9',
'9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,,,,9,9,9,9,9,9,9,9,9,9',
',,,,,9,9,9,9,9,9,9,9,9,,,9,,,,,,,,9,9,,9,9,9,9,9,9,9,,,9,9,,,,9,9,9',
'9,,,,,,,,,,,,,,9,9,,9,9,9,9,9,9,9,9,9,9,9,9,,,9,9,,,,,,,,,,,,,,9,618',
'618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618,618',
'618,618,618,618,618,618,,,,618,618,618,618,618,618,618,618,618,618,',
',,,,618,618,618,618,618,618,618,618,618,,,618,,,,,,,,618,618,,618,618',
'618,618,618,618,618,,,618,618,,,,618,618,618,618,,,,,,,,,,,,,,618,618',
',618,618,618,618,618,618,618,618,618,618,618,618,,,618,618,,,,,,,,,',
',,,,618,397,397,397,397,397,397,397,397,397,397,397,397,397,397,397',
'397,397,397,397,397,397,397,397,397,,,,397,397,397,397,397,397,397,397',
'397,397,,,,,,397,397,397,397,397,397,397,397,397,,,397,,,,,,,,397,397',
',397,397,397,397,397,397,397,,,397,397,,,,397,397,397,397,,,,,,,,,,',
',,,397,397,,397,397,397,397,397,397,397,397,397,397,397,397,,,397,397',
',,,,,,,,,,,,,397,740,740,740,740,740,740,740,740,740,740,740,740,740',
'740,740,740,740,740,740,740,740,740,740,740,,,,740,740,740,740,740,740',
'740,740,740,740,,,,,,740,740,740,740,740,740,740,740,740,,,740,,,,,',
',,740,740,,740,740,740,740,740,740,740,,,740,740,,,,740,740,740,740',
',,,,,,,,,,,,,740,740,,740,740,740,740,740,740,740,740,740,740,740,740',
',,740,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71',
'71,71,71,,,,71,71,71,71,71,71,71,71,71,71,,,,,,71,71,71,71,71,71,71',
'71,71,71,71,71,,71,,,,,,71,71,,71,71,71,71,71,71,71,,,71,71,,,,71,71',
'71,71,,,,,,71,,,,,,,,71,71,,71,71,71,71,71,71,71,71,71,71,71,71,519',
'519,71,,519,,,,,,,,519,519,,519,519,519,519,519,519,519,,,519,519,,',
',519,519,519,519,,,,,,519,,,,,,,,519,519,,519,519,519,519,519,519,519',
'519,519,519,519,519,510,510,519,,510,,,,,,,,510,510,,510,510,510,510',
'510,510,510,,,510,510,,,,510,510,510,510,,,,,,510,,,,,,,,510,510,,510',
'510,510,510,510,510,510,510,510,510,510,510,509,509,510,,509,,,,,,,',
'509,509,,509,509,509,509,509,509,509,,,509,509,,,,509,509,509,509,,',
',,,509,,,,,,,,509,509,,509,509,509,509,509,509,509,509,509,509,509,509',
'211,211,509,,211,,,,,,,,211,211,,211,211,211,211,211,211,211,,,211,211',
',,,211,211,211,211,,,,,,211,,,,,,,,211,211,,211,211,211,211,211,211',
'211,211,211,211,211,211,579,579,211,,579,,,,,,,,579,579,,579,579,579',
'579,579,579,579,,,579,579,,,,579,579,579,579,,,,,,579,,,,,,,,579,579',
',579,579,579,579,579,579,579,579,579,579,579,579,210,210,579,,210,,',
',,,,,210,210,,210,210,210,210,210,210,210,,,210,210,,,,210,210,210,210',
',,,,,210,,,,,,,,210,210,,210,210,210,210,210,210,210,210,210,210,210',
'210,988,988,210,,988,,,,,,,,988,988,,988,988,988,988,988,988,988,,,988',
'988,,,,988,988,988,988,,,,,,988,,,,,,,,988,988,,988,988,988,988,988',
'988,988,988,988,988,988,988,989,989,988,,989,,,,,,,,989,989,,989,989',
'989,989,989,989,989,,,989,989,,,,989,989,989,989,,,,,,989,,,,,,,,989',
'989,,989,989,989,989,989,989,989,989,989,989,989,989,941,941,989,,941',
',,,,,,,941,941,,941,941,941,941,941,941,941,,,941,941,,,,941,941,941',
'941,,,,,,941,,,,,,,,941,941,,941,941,941,941,941,941,941,941,941,941',
'941,941,442,442,941,,442,,,,,,,,442,442,,442,442,442,442,442,442,442',
',,442,442,,,,442,442,442,442,,,,,,442,,,,,,,,442,442,,442,442,442,442',
'442,442,442,442,442,442,442,442,443,443,442,,443,,,,,,,,443,443,,443',
'443,443,443,443,443,443,,,443,443,,,,443,443,443,443,,,,,,443,,,,,,',
',443,443,,443,443,443,443,443,443,443,443,443,443,443,443,585,585,443',
',585,,,,,,,,585,585,,585,585,585,585,585,585,585,,,585,585,,,,585,585',
'585,585,,,,,,585,,,,,,,,585,585,,585,585,585,585,585,585,585,585,585',
'585,585,585,586,586,585,,586,,,,,,,,586,586,,586,586,586,586,586,586',
'586,,,586,586,,,,586,586,586,586,,,,,,586,,,,,,,,586,586,,586,586,586',
'586,586,586,586,586,586,586,586,586,261,261,586,,261,,,,,,,,261,261',
',261,261,261,261,261,261,261,,,261,261,,,,261,261,261,261,,,,,,,,,,',
',,,261,261,,261,261,261,261,261,261,261,261,261,261,261,261,578,578',
'261,,578,,,,,,,,578,578,,578,578,578,578,578,578,578,,,578,578,,,,578',
'578,578,578,,,,,,578,,,,,,,,578,578,,578,578,578,578,578,578,578,578',
'578,578,578,578,520,520,578,,520,,,,,,,,520,520,,520,520,520,520,520',
'520,520,,,520,520,,,,520,520,520,520,,,,,,520,,,,,,,,520,520,,520,520',
'520,520,520,520,520,520,520,520,520,520,,338,520,338,338,338,338,338',
',973,,973,973,973,973,973,338,,,,,,,,973,,901,,901,901,901,901,901,',
',,,,338,338,,901,,,,,973,338,338,338,338,,,,338,973,973,973,973,,,,973',
'901,,536,,536,536,536,536,536,,,901,901,,,,901,536,,895,,895,895,895',
'895,895,897,,897,897,897,897,897,,895,,,,,536,,897,,,,,,,536,536,536',
'536,,,,536,895,,,,,,,897,,895,895,895,895,,,,895,,897,897,,,739,897',
'739,739,739,739,739,871,,871,871,871,871,871,899,739,899,899,899,899',
'899,,871,,,,,,697,899,697,697,697,697,697,,,739,,,,,,697,871,,739,739',
'739,739,,899,,739,,871,871,,,,871,,899,899,,697,,899,,,,,,,697,697,697',
'697,,,869,697,869,869,869,869,869,1017,,1017,1017,1017,1017,1017,,869',
',,,,,695,1017,695,695,695,695,695,,,,,,,,,695,869,,,,,,,1017,,869,869',
'869,869,,,,869,,1017,1017,,695,,1017,,,,,,,695,695,695,695,,,867,695',
'867,867,867,867,867,699,,699,699,699,699,699,,867,,,,,,738,699,738,738',
'738,738,738,,,,,,,,,738,867,,,,,,,699,,867,867,867,867,,,,867,,699,699',
',738,,699,,,,,,,738,738,738,738,,,,738' ]
        racc_action_check = arr = ::Array.new(25107, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  5784,  1203,   nil,   317,   nil, 11334,  1529,  1076, 23025, 23153,
  1075,   nil,  1003,  1046,   970,   513,   949,    -4,   nil,   -71,
 21445,  3124,  1003,   nil,   588,   nil,   199,  1238,  1449, 17777,
 17376, 17114,   nil,  3404, 16983, 16713,   nil,   866,   477,   450,
   900,   311, 10270, 10139,  9091,   823,   936,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   966,   nil,   -80,  7233,
  7102,   -23,   nil, 18956,  6046,   nil,   nil,  6177,  6316,  6447,
  6578, 23650,   nil,   nil,   nil,   nil,   nil,   307,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     0,   nil,   nil,   498,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   891,
   nil,  7372,   nil,   nil,   nil,   nil,  7511,  7642,  7773,  7904,
  8043,  5364,   nil,   560,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   740,   nil,  5084,  8698,  8829,  8960,
 24016, 23894,   nil,   nil,  9353,  9484,  9615,  9746,  9877, 10008,
   nil,   nil,   904,   263,   187,   724,   166,   612,   663,   nil,
 11056,  3964,   636, 11465, 11596, 11727, 11858, 11989, 22886, 12251,
 12382, 12513, 12644, 12775, 12906, 13037, 13168, 13299, 13430, 13561,
 13692, 13823, 13954, 14085, 14216, 14347, 14478, 14609,   nil,   nil,
   nil, 24504,   nil,   nil,   490, 15002, 15133,   nil,   nil,   nil,
   nil,   nil,   nil,   nil, 15264,   nil,  2984,   nil,   419,   409,
   nil, 15788,   354, 16050,   nil,   nil, 16181, 16312,   nil,   nil,
   508,   nil, 16582,  1217,   248,   172,  3264,   168,   184,   103,
 17638,  2984,   612,   934,   724,   154,   692,   nil,    -9,    27,
   182,   nil,   nil,   nil,   137,   337,   105, 19349,   nil,   340,
   337,   436,   nil,   421,   nil, 20004,  2564, 20266,   387,   nil,
   537,   607,   613,   657,   245,   759,   nil,   nil, 24688,   277,
    36,    35, 21838, 21969,  -113,   844,   732,   152,    11,   765,
   819,   205,   862,   nil,   nil,   611,   391,    10,   nil,  1007,
   nil,    29, 22362,   nil,   nil,   nil,   582,   -24,   698,   584,
   735,   760,   694,   362,   518,   nil,   555,   nil, 20397,   nil,
   432,   429,   425,   529,   422,   -45,   -41,   419,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   871, 23409,   nil,   nil,
   nil,   nil,   913,   nil,   nil,   895, 18563,   925,   nil,   nil,
  1864,   952,   nil,   957,   962,   672,   -81,   856,   nil,   nil,
   nil,   608,   388,  1033,   nil,   nil,   720,  1102,   nil,  3264,
   nil,   993,   nil,   nil,  1584,   nil,   nil,   nil,   nil,    20,
   nil,  1050, 24260, 24321,  8436,   -52,  8305,  6971,  6709,  4244,
  3964,   560,   777,  1135,  1127,  1124,  1087,  6046,  5915,  5784,
  4384,  1189,  4524,  4664,  4804,  5644,  5084,  4104,  5364,  5504,
  1125,  1404,  4944,  5224, 19087,   -54,  1370,   nil,   nil,   nil,
   nil,  1018,   nil,   340,   160,  1017,   nil,   nil, 10532,   nil,
 10663,   nil, 10925,   nil,   156,   nil,   nil,   nil, 11195,  1227,
  5644,   991,   986,   nil,   nil,   973, 16852,   975, 17507, 23833,
 23772,   938,  1015,   nil, 18039,   961,   nil, 18170, 18301, 23711,
 24626,  3544, 18432,  1048,  1043,   472,   961,   nil, 18694,   nil,
   nil, 18825,   nil,   nil,   nil,   nil, 24752,   nil,   892,   881,
   nil,   871,   862,   857,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   842,  1109,   nil,   nil, 19218,   nil,   nil,   nil,
   926,   nil,   nil,   nil,   925,   nil,   nil,   909,  5224,   932,
   nil,  2844,   121,   149,   926,   932, 19611, 19873, 24565, 23955,
   169,   nil,   nil,   794,   nil, 24382, 24443, 20135,   nil,   nil,
   nil,   137,   259,  2704,   831,   nil,   224,   nil,   nil,   nil,
   831,   nil,   nil,   nil,   800,   nil,   nil,   319,   nil,   308,
   nil,   nil,   784,   nil,   782,   nil,   nil,   nil, 23281,   nil,
   777, 21183, 21314,   278,   815, 21576, 21707, 22100, 22231,   812,
   nil,   nil, 22493, 22624,   805,   nil, 22755, 12120,   nil,   nil,
   127,   162,   250,   112,   731,  1724,  3824,   nil,  1301,   nil,
  2004,   832,     4,   267,   nil,  2144,  2424,   nil,   706,   nil,
   737, 20921,   nil,   nil, 20790,   nil,   484,  -112, 20659,   446,
   nil,   398,   241,   275,   413,   277,   688,   380,   286, 19742,
  2004,   351,   -33,   331, 19480,   nil,   209,   nil,   457,   -22,
   100,  1057,   nil,   nil,   461, 24929,   nil, 24856,   nil, 24988,
   nil,  5915,   nil,   860,   nil,    78,   253,   931,   nil,   nil,
   nil,   nil,   760,   nil,    32,   nil,   nil,   nil,   nil,    54,
   nil,    98,    15,    25,    68,    71,   179, 17908,   258,   580,
   nil,   123,  3124, 17245,   nil,   nil,   291,  3544, 25002, 24828,
 23537,   nil,   nil,   nil,   nil,   nil,   nil,  3684,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   282, 16443,  2144, 15919,   nil,
   315,   nil,  2284,   nil,  2424,   nil,   nil,  2564,   nil,  2704,
   nil,  2844, 15657, 15526, 15395, 14871,   -85,   480,   481,   490,
   nil,   494,   501,   519,   nil,   562,   563,   564,   560, 14740,
   nil,   nil,   703,   nil,   nil,  3824,   618,   733,   nil,   nil,
   nil,   nil,   611,   279,   nil,   nil,   744,   nil,  4104,   631,
   679,   nil,   nil,   678,   nil,   nil,  4244,  4384,   690,   650,
   nil,   nil,   nil,   651,   667,   nil,   673,   676,   nil,   678,
   nil,   nil,   691,  1165,   702,  1309,   nil,   832,   nil, 10401,
   839,  4524,  4664,   nil,  9222,  4804,    40,    62,   nil,   867,
   397,  5504,   nil,   885,   770,   507,   nil,   777,   773,   nil,
  3404,  6840,  8174,   nil,  1051,   nil,   nil, 24981,   nil, 24908,
   nil, 24835,   nil,   nil,   828,  1375,  8567,   625,   892,   nil,
   838,   nil,   nil,   nil,  4944,   nil,   nil,    42, 10794,   nil,
   nil,   858,   963,   nil,   nil, 24769,   nil, 24776,   nil, 24842,
   nil, 24713,   nil,   nil,   nil,   nil,   383,  1231,   863,   nil,
    39,   nil,   991,   992,   nil,    85,   nil,   nil,   nil,  1001,
   nil,   nil,   nil,   923,   nil, 21052,   883,   nil,   nil,   884,
   886,   888,   890,   nil,   891,   nil,   429,   nil,   nil,   nil,
   761, 24199,   nil,   nil,   nil,  2284,    -1,    26,   828,  1002,
    92,   nil,   nil,   nil,  -108,   932,   934,   937,   948,  1032,
   955,  1389,  1584,   nil,   nil,   nil,   nil,   nil,  1724,   nil,
  1864,  3684,   nil, 24696,   nil, 17685,   nil,  1367,   nil, 16760,
   nil,   nil,   nil,  1080,  1035,  1036,  1119, 20528, 24077, 24138,
    32,  1337,   nil,   nil,   nil,   nil,  1510,  1019,   377,  1145,
  1149,  1026,  1032,  1034,  1049,   nil,   nil,  1053,   105,   102,
   111,    33,  1061,  1066,   nil,   nil,   nil, 24915,   nil,   nil,
   nil,   nil,    11,   nil,  1079,   nil ]

racc_action_default = [
    -3,  -599,    -1,  -585,    -4,  -599,    -7,  -599,  -599,  -599,
  -599,   -29,  -599,  -599,  -599,  -281,  -599,   -40,   -43,  -587,
  -599,   -48,   -50,   -51,   -52,   -56,  -258,  -258,  -258,  -295,
  -330,  -331,   -68,   -11,   -72,   -80,   -82,  -599,  -488,  -489,
  -599,  -599,  -599,  -599,  -599,  -587,  -239,  -272,  -273,  -274,
  -275,  -276,  -277,  -278,  -279,  -280,  -573,  -283,  -285,  -598,
  -563,  -303,  -391,  -599,  -599,  -308,  -311,  -585,  -599,  -599,
  -599,  -599,  -332,  -333,  -429,  -430,  -431,  -432,  -433,  -454,
  -436,  -437,  -456,  -458,  -441,  -446,  -450,  -452,  -468,  -456,
  -470,  -472,  -473,  -474,  -475,  -571,  -477,  -478,  -572,  -480,
  -481,  -482,  -483,  -484,  -485,  -486,  -487,  -492,  -493,  -599,
    -2,  -586,  -594,  -595,  -596,    -6,  -599,  -599,  -599,  -599,
  -599,    -3,   -17,  -599,  -111,  -112,  -113,  -114,  -115,  -116,
  -117,  -118,  -119,  -123,  -124,  -125,  -126,  -127,  -128,  -129,
  -130,  -131,  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,
  -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,
  -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,
  -160,  -161,  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,
  -170,  -171,  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,
  -180,  -181,  -182,  -183,  -184,  -185,  -186,  -187,  -188,  -189,
  -190,  -191,  -192,  -193,   -22,  -120,   -11,  -599,  -599,  -248,
  -599,  -599,  -583,  -584,  -599,  -599,  -599,  -599,  -599,  -587,
  -588,   -47,  -599,  -488,  -489,  -599,  -281,  -599,  -599,  -229,
  -599,   -11,  -599,  -599,  -599,  -599,  -599,  -599,  -599,  -599,
  -599,  -599,  -599,  -599,  -599,  -599,  -599,  -599,  -599,  -599,
  -599,  -599,  -599,  -599,  -599,  -599,  -599,  -599,  -236,  -398,
  -400,  -599,  -581,  -582,   -57,  -248,  -599,  -302,  -404,  -413,
  -415,   -63,  -410,   -64,  -587,   -65,  -240,  -253,  -262,  -262,
  -257,  -599,  -263,  -599,  -454,  -565,  -599,  -599,   -66,   -67,
  -585,   -12,  -599,   -15,  -599,   -70,   -11,  -587,  -599,   -73,
   -76,   -11,   -88,   -89,  -599,  -599,   -96,  -295,  -298,  -587,
  -599,  -330,  -331,  -334,  -411,  -599,   -78,  -599,   -84,  -292,
  -471,  -599,  -214,  -215,  -230,  -599,   -11,  -599,  -587,  -241,
  -591,  -591,  -599,  -599,  -591,  -599,  -304,  -305,  -521,   -49,
  -599,  -599,  -599,  -599,  -585,  -599,  -586,  -488,  -489,  -599,
  -599,  -281,  -599,  -344,  -345,  -106,  -107,  -599,  -109,  -599,
  -281,  -599,  -599,  -488,  -489,  -323,  -111,  -112,  -153,  -154,
  -155,  -171,  -176,  -183,  -186,  -325,  -599,  -561,  -599,  -434,
  -599,  -599,  -599,  -599,  -599,  -599,  -599,  -599,  1026,    -5,
  -597,   -23,   -24,   -25,   -26,   -27,  -599,  -599,   -19,   -20,
   -21,  -121,  -599,   -30,   -39,  -268,  -599,  -599,  -267,   -31,
  -196,  -587,  -249,  -262,  -262,  -574,  -575,  -258,  -408,  -576,
  -577,  -575,  -574,  -258,  -407,  -409,  -576,  -577,   -37,  -204,
   -38,  -599,   -41,   -42,  -194,  -263,   -44,   -45,   -46,  -587,
  -301,  -599,  -599,  -599,  -248,  -292,  -599,  -599,  -599,  -205,
  -206,  -207,  -208,  -209,  -210,  -211,  -212,  -216,  -217,  -218,
  -219,  -220,  -221,  -222,  -223,  -224,  -225,  -226,  -227,  -228,
  -231,  -232,  -233,  -234,  -599,  -380,  -258,  -574,  -575,   -54,
   -58,  -587,  -259,  -380,  -380,  -587,  -297,  -254,  -599,  -255,
  -599,  -260,  -599,  -264,  -599,  -568,  -570,   -10,  -586,   -14,
    -3,  -587,   -69,  -290,   -85,   -74,  -599,  -587,  -248,  -599,
  -599,   -95,  -599,  -471,  -599,   -81,   -86,  -599,  -599,  -599,
  -599,  -235,  -599,  -421,  -599,  -286,  -599,  -242,  -593,  -592,
  -244,  -593,  -293,  -294,  -564,  -392,  -521,  -395,  -560,  -560,
  -504,  -506,  -506,  -506,  -520,  -522,  -523,  -524,  -525,  -526,
  -527,  -528,  -529,  -599,  -531,  -533,  -535,  -540,  -542,  -543,
  -545,  -550,  -552,  -553,  -555,  -556,  -557,  -599,   -11,  -335,
  -336,   -11,  -599,  -599,  -599,  -599,  -599,  -248,  -599,  -599,
  -292,  -316,  -106,  -107,  -108,  -599,  -599,  -248,  -319,  -494,
  -495,  -599,  -599,   -11,  -499,  -327,  -587,  -435,  -455,  -460,
  -599,  -462,  -438,  -457,  -599,  -459,  -440,  -599,  -443,  -599,
  -445,  -448,  -599,  -449,  -599,  -469,    -8,   -18,  -599,   -28,
  -271,  -599,  -599,  -412,  -599,  -250,  -252,  -599,  -599,   -59,
  -247,  -405,  -599,  -599,   -61,  -406,  -599,  -599,  -300,  -589,
  -574,  -575,  -574,  -575,  -587,  -194,  -587,  -381,  -587,  -383,
   -11,   -53,  -401,  -380,  -245,   -11,   -11,  -296,  -262,  -261,
  -265,  -599,  -566,  -567,  -599,   -13,  -599,   -71,  -599,   -77,
   -83,  -587,  -574,  -575,  -246,  -578,   -94,  -599,   -79,  -599,
  -203,  -213,  -587,  -598,  -598,  -284,  -587,  -289,  -591,  -599,
  -587,  -599,  -502,  -503,  -599,  -599,  -513,  -599,  -516,  -599,
  -518,  -599,  -346,  -599,  -348,  -350,  -357,  -587,  -534,  -544,
  -554,  -558,  -598,  -337,  -598,  -309,  -338,  -339,  -312,  -599,
  -315,  -599,  -587,  -574,  -575,  -578,  -291,  -599,  -106,  -107,
  -110,  -587,   -11,  -599,  -497,  -321,  -599,   -11,  -521,  -521,
  -599,  -562,  -461,  -464,  -465,  -466,  -467,   -11,  -439,  -442,
  -444,  -447,  -451,  -453,  -122,  -269,  -599,  -197,  -599,  -590,
  -262,   -33,  -199,   -34,  -200,   -60,   -35,  -202,   -36,  -201,
   -62,  -195,  -599,  -599,  -599,  -599,  -412,  -599,  -560,  -560,
  -362,  -364,  -364,  -364,  -379,  -599,  -587,  -385,  -529,  -537,
  -538,  -548,  -599,  -403,  -402,   -11,  -599,  -599,  -256,  -266,
  -569,   -16,   -75,  -412,   -87,  -299,  -598,  -342,   -11,  -422,
  -598,  -423,  -424,  -599,  -243,  -393,   -11,   -11,  -599,  -560,
  -541,  -559,  -505,  -506,  -506,  -532,  -506,  -506,  -551,  -506,
  -529,  -546,  -587,  -599,  -355,  -599,  -530,  -599,  -340,  -599,
  -599,   -11,   -11,  -314,  -599,   -11,  -412,  -599,  -412,  -599,
  -599,   -11,  -324,  -599,  -587,  -599,  -328,  -599,  -270,   -32,
  -198,  -251,  -599,  -237,  -599,  -360,  -361,  -370,  -372,  -599,
  -375,  -599,  -377,  -382,  -599,  -599,  -599,  -536,  -599,  -399,
  -599,  -414,  -416,    -9,   -11,  -428,  -343,  -599,  -599,  -426,
  -287,  -599,  -599,  -394,  -501,  -599,  -509,  -599,  -511,  -599,
  -514,  -599,  -517,  -519,  -347,  -349,  -353,  -599,  -358,  -306,
  -599,  -307,  -599,  -599,  -265,  -598,  -317,  -320,  -496,  -599,
  -326,  -498,  -500,  -499,  -463,  -599,  -560,  -539,  -363,  -364,
  -364,  -364,  -364,  -549,  -364,  -384,  -587,  -387,  -389,  -390,
  -547,  -599,  -292,   -55,  -427,   -11,  -488,  -489,  -599,  -599,
  -281,  -425,  -396,  -397,  -506,  -506,  -506,  -506,  -351,  -599,
  -356,  -599,   -11,  -310,  -313,  -417,  -418,  -419,   -11,  -322,
   -11,  -238,  -359,  -599,  -367,  -599,  -369,  -599,  -373,  -599,
  -376,  -378,  -386,  -599,  -291,  -578,  -421,  -248,  -599,  -599,
  -292,  -599,  -507,  -510,  -512,  -515,  -599,  -354,  -598,  -599,
  -599,  -364,  -364,  -364,  -364,  -388,  -420,  -587,  -574,  -575,
  -578,  -291,  -506,  -352,  -341,  -318,  -329,  -599,  -365,  -368,
  -371,  -374,  -412,  -508,  -364,  -366 ]

clist = [
'218,375,336,26,411,127,127,329,26,260,683,299,623,268,272,210,2,433',
'575,277,277,277,408,26,524,262,325,417,423,489,430,480,26,26,26,261',
'26,320,122,205,737,279,279,279,544,340,341,130,130,344,568,571,132,132',
'537,278,278,278,380,6,481,313,313,837,6,515,26,26,127,552,26,331,334',
'111,110,339,339,782,476,339,584,264,271,273,297,330,806,715,718,659',
'295,659,937,707,785,313,313,313,391,392,393,394,692,693,662,316,939',
'527,530,828,114,534,783,908,26,825,905,840,440,26,26,26,26,26,26,382',
'381,732,339,339,339,339,115,387,607,609,818,396,345,361,365,275,288',
'289,933,662,851,603,605,608,608,593,594,603,740,923,727,650,842,824',
'343,826,841,784,489,655,656,342,328,653,6,686,786,486,114,327,326,397',
'376,395,6,936,588,352,535,960,815,338,689,404,354,475,483,484,965,810',
'502,418,887,277,1005,379,618,652,968,383,474,337,427,26,26,26,26,384',
'939,385,386,26,26,26,26,26,26,442,742,221,659,659,436,437,438,439,874',
'407,26,747,733,997,389,644,662,407,544,832,905,776,39,719,933,204,665',
'39,690,823,669,277,277,883,925,417,423,333,678,494,277,820,927,552,26',
'26,377,332,803,1,1013,,,26,279,39,303,303,,,,,279,825,,,512,736,278',
',516,26,929,268,,26,278,272,,671,26,509,,828,730,526,,513,,,348,364',
'364,364,966,,,825,519,846,572,573,674,313,,26,26,930,848,931,,795,674',
',638,525,,,865,866,313,26,26,501,,1014,578,499,507,295,339,339,,39,295',
'954,498,497,916,,,26,39,39,,970,505,,722,750,592,750,,262,482,788,654',
'26,731,894,657,,485,595,,,596,,624,,127,674,765,114,,825,667,770,,674',
'630,,670,,798,,635,,403,409,,574,802,,,428,432,,,,,,552,617,552,418',
'849,845,,,277,853,130,1001,433,,427,132,,,544,544,,26,,,,114,39,,854',
'855,,,,,,,659,630,,814,,,589,552,552,,629,1006,,662,,39,634,,,,,516',
',,,,,,972,516,,,,741,418,,277,811,658,26,,26,,,418,427,,,798,26,,,,',
'666,427,696,698,700,,,,,26,,,,,,651,,313,682,,,,39,,688,313,39,,,,303',
'39,,919,,,,,,,,,,6,,,,303,,418,,277,,,,26,39,418,26,,427,277,,,26,805',
'427,,,,,,967,,26,,,794,,,26,945,788,,788,,721,,,,836,,1022,,,,,,,127',
',,,,962,,,,,624,552,777,,787,26,26,812,,,26,26,760,793,26,,,702,,13',
'516,,,754,13,,,624,26,,14,804,130,26,26,14,630,132,,635,,,813,1000,',
'856,787,,,,222,,13,,716,716,,,,222,222,222,,14,304,304,,,,,313,,,734',
'735,,,,624,788,,313,789,,847,407,,624,,,850,,,222,222,,,222,349,359',
'359,,,,,26,904,,,,26,26,127,,339,26,,,,39,339,39,,,,26,,303,921,885',
'13,,,889,,303,26,,,13,13,14,787,,,,222,222,222,222,14,14,,,16,,,1007',
',16,,,,,,,,702,,,834,,335,26,,896,898,,900,902,674,903,,,,,26,16,,39',
',313,39,,26,26,910,,,,,,,,,,,761,763,,,,766,768,39,,432,26,,26,26,,353',
'26,779,13,339,,,26,,,,,,,14,222,222,222,,,,,222,222,222,222,222,222',
'13,,,,,,,,,,,14,26,,,16,,819,,,,39,,,16,16,39,39,313,,,,,,,,,,,303,313',
',982,,,222,222,702,789,702,303,789,298,789,222,789,992,993,994,995,',
'13,,427,,13,,,,405,13,,14,26,988,,14,435,,716,304,14,918,,,,,922,859',
',26,,,,,13,26,304,26,,418,,277,39,,,14,222,39,,16,427,,624,1023,26,',
',39,431,958,702,222,222,,,,,,,,,,,,16,,,,,780,,222,491,,493,,,495,496',
',,,,,,,789,222,789,364,789,,789,,,39,,,,,,,702,,702,,,,39,,,,821,,,821',
'39,39,,926,,,779,,779,16,779,,,16,789,,15,,16,,,15,,702,,39,39,,,39',
',,,,,39,,222,402,,,,,16,868,870,872,,,15,306,306,,,,,,,,,364,,,298,',
',,,39,,,,947,,,,,,,,13,620,13,,351,360,360,,,,,14,,14,,,,,,304,,222',
',,,,,304,,,,,779,,779,222,779,,779,,,,,,,,,15,298,39,,,,298,,,15,15',
',,,,,,,,39,,,,13,,39,13,39,,779,,,,,14,,660,14,335,,663,,821,222,,780',
',780,13,780,,,,222,,,,,,14,,,,,,974,976,978,980,,981,,,,,,660,,,335',
',,,,,,,,16,,16,,,222,222,15,,,222,222,,,222,,708,13,,,,,13,13,,,,781',
'14,,,,15,14,14,,435,,,,,,,,,,304,,,1018,1019,1020,1021,,,,,304,,,,,',
'780,,780,,780,,780,16,,1025,16,,,827,,829,,,755,,,,660,335,,,,,,,15',
',16,,15,,13,,306,15,,13,222,,780,,,14,222,,,13,14,,,306,,,799,,,800',
'14,,15,,,,,,,,38,222,,431,,38,,,,809,,,,,,,,16,,,,,16,16,,,831,13,,',
',,877,38,302,302,,,14,,13,,,,,,,,13,13,712,14,,714,,,,,,14,14,,,,,,',
',347,363,363,363,,13,13,,,13,,,,858,222,13,14,14,,,14,,,,,,14,,,,,16',
',,,,16,,,,,,,38,,932,16,934,13,,,940,38,38,,,,,,14,,,,948,792,,,,,796',
'797,955,,956,,957,,,,,,,,,,,,,,,,,,,16,,15,,15,,,914,,,306,,,16,,13',
',,306,,,16,16,,335,,14,,,,,,13,,,,,,13,,13,,,14,38,,16,16,,14,16,14',
',,,1002,16,1003,,1004,,,,,,,,857,222,38,,,15,1012,,15,,,,,,,,,,,,,,16',
',,,951,,,,15,,1024,,,,,746,,,,,,,,,,,880,,,,,,,,,,,,,886,,38,,,,38,',
'891,892,302,38,,,,,,,,,,,16,,,,15,302,,,,15,15,912,913,,38,915,,16,',
',,,306,16,,16,,,,,,,,306,,,,,,,,,,,,,,,,,,,,,944,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,15,,,,,15,,,,,,,,,,15,,,,,,,,,,,,,,986,,,,,,,,,,,,,,,,,998',
',,,,,999,,,,,360,,,,,,15,,,,,,,,,,,,,15,,,,,,,,15,15,,,,,,,,,,,,,,,38',
',38,,,,,,302,15,15,,,15,,,302,,,15,,,,,,,,,,,,,,,,,,,,,,,,,360,,,,,',
',,15,,,,950,,,,,,,,,,,,,,38,,,38,,,,,,,,,,,,,,,,,,,,,,38,,,,,,,,,,,',
',,,,,,15,,,,,,,,,,,,,,,,,15,,,,,,15,,15,,,,,,,,,,,,,,38,,,,,38,38,,',
',,,,,,,,,302,,,,,,,,229,,,302,,,,,,276,276,276,,,,,,,,,,,322,323,324',
',,,,,,,,,,,,,,276,276,,,,,,,,,,,,,,,,38,,,,,38,,,,,,,,,,38,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,363,,,,,,38,,,,,,,,,,,,,38,,,,,,,,38',
'38,,,,,,,,,,,,,,,,,,,,,,,,38,38,,,38,,,,,,38,,,,,,,,,,,,276,410,276',
',,,,429,434,,,,,363,,,,,,,,38,,229,,946,449,450,451,452,453,454,455',
'456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472',
'473,,,,,,,,276,276,,,,,,,,276,,,,,,,276,,276,,,276,276,,38,,,,,,,,,',
',,,,,,,38,,,,,,38,,38,,,,,,,,,,,521,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,276,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,276,,429,645,410,,,,,,,,,,,,,,,,,,,,,,,,,,646,',
',,,,,,,,,,,,276,,276,,276,,,,,,,,,,,,,,,,276,,,,,,,,,680,681,,,,,,,',
',,276,,,276,,,,,,,,,,,,,,,,,,,,,,,,,276,,,,,,,,,,,,,,,,,,,,276,276,',
',,,,,,,,276,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,276,757,,,276,276,762,764',
',,,767,769,,,645,771,,,,,,,,,,,,,,,,,,,,,,,,276,,,276,,,,,,,,,,,,,,',
',,,,,276,,,,,,,,,,,,,,,,,276,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,276,,860,,,,,,,,,,,,,,762,764,769,767,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,276,,,,,,,,,,,',
',,,,,276,860,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,971,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,276' ]
        racc_goto_table = arr = ::Array.new(3056, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'32,57,89,42,23,58,58,70,42,141,10,50,24,74,74,25,2,18,95,34,34,34,28',
'42,8,25,32,38,38,76,28,40,42,42,42,37,42,64,15,15,99,73,73,73,164,17',
'17,61,61,17,92,92,62,62,140,71,71,71,152,7,23,65,65,93,7,52,42,42,58',
'169,42,73,73,6,4,30,30,129,38,30,55,39,39,39,47,71,11,94,94,77,46,77',
'134,119,132,65,65,65,17,17,17,17,124,124,179,51,135,72,72,175,98,72',
'130,120,42,170,117,11,48,42,42,42,42,42,42,154,153,111,30,30,30,30,5',
'153,156,156,132,2,4,56,56,45,45,45,176,179,112,157,157,157,157,113,114',
'157,115,116,109,41,108,130,107,130,106,121,76,41,41,105,104,43,7,103',
'127,48,98,102,101,31,100,7,7,133,97,96,136,120,137,138,139,29,19,142',
'144,145,146,147,48,74,148,34,134,151,63,75,110,155,67,91,58,42,42,42',
'42,158,135,159,160,42,42,42,42,42,42,25,161,20,77,77,30,30,30,30,132',
'71,42,162,163,120,5,23,179,71,164,119,117,24,54,95,176,16,14,54,140',
'168,52,34,34,12,68,38,38,88,52,152,34,172,173,169,42,42,87,69,24,1,120',
',,42,73,54,54,54,,,,,73,170,,,32,8,71,,50,42,129,74,,42,71,74,,23,42',
'25,,175,55,32,,64,,,54,54,54,54,11,,,170,25,24,17,17,38,65,,42,42,130',
'24,130,,41,38,,48,30,,,124,124,65,42,42,47,,93,25,7,47,46,30,30,,54',
'46,130,6,4,94,,,42,54,54,,99,51,,23,157,30,157,,25,45,169,48,42,23,124',
'48,,45,37,,,30,,32,,58,38,40,98,,170,48,40,,38,74,,48,,76,,74,,20,20',
',4,52,,,20,20,,,,,,169,15,169,74,8,92,,,34,8,61,130,18,,58,62,,,164',
'164,,42,,,,98,54,,140,140,,,,,,,77,74,,72,,,98,169,169,,39,10,,179,',
'54,39,,,,,50,,,,,,,124,50,,,,48,74,,34,28,73,42,,42,,,74,58,,,76,42',
',,,,2,58,167,167,167,,,,,42,,,,,,39,,65,30,,,,54,,73,65,54,,,,54,54',
',8,,,,,,,,,,7,,,,54,,74,,34,,,,42,54,74,42,,58,34,,,42,48,58,,,,,,95',
',42,,,89,,,42,92,169,,169,,71,,,,48,,24,,,,,,,58,,,,,92,,,,,32,169,32',
',32,42,42,70,,,42,42,73,141,42,,,118,,21,50,,,15,21,,,32,42,,22,50,61',
'42,42,22,74,62,,74,,,32,8,,57,32,,,,22,,21,,98,98,,,,22,22,22,,22,22',
'22,,,,,65,,,98,98,,,,32,169,,65,171,,17,71,,32,,,17,,,22,22,,,22,22',
'22,22,,,,,42,48,,,,42,42,58,,30,42,,,,54,30,54,,,,42,,54,48,70,21,,',
'70,,54,42,,,21,21,22,32,,,,22,22,22,22,22,22,,,27,,,23,,27,,,,,,,,118',
',,118,,66,42,,167,167,,167,167,38,167,,,,,42,27,,54,,65,54,,42,42,17',
',,,,,,,,,,20,20,,,,20,20,54,,20,42,,42,42,,27,42,123,21,30,,,42,,,,',
',,22,22,22,22,,,,,22,22,22,22,22,22,21,,,,,,,,,,,22,42,,,27,,123,,,',
'54,,,27,27,54,54,65,,,,,,,,,,,54,65,,32,,,22,22,118,171,118,54,171,9',
'171,22,171,167,167,167,167,,21,,58,,21,,,,66,21,,22,42,25,,22,66,,98',
'22,22,98,,,,,98,20,,42,,,,,21,42,22,42,,74,,34,54,,,22,22,54,,27,58',
',32,167,42,,,54,27,118,118,22,22,,,,,,,,,,,,27,,,,,125,,22,66,,66,,',
'66,66,,,,,,,,171,22,171,54,171,,171,,,54,,,,,,,118,,118,,,,54,,,,125',
',,125,54,54,,123,,,123,,123,27,123,,,27,171,,26,,27,,,26,,118,,54,54',
',,54,,,,,,54,,22,9,,,,,27,126,126,126,,,26,26,26,,,,,,,,,54,,,9,,,,',
'54,,,,54,,,,,,,,21,66,21,,26,26,26,,,,,22,,22,,,,,,22,,22,,,,,,22,,',
',,123,,123,22,123,,123,,,,,,,,,26,9,54,,,,9,,,26,26,,,,,,,,,54,,,,21',
',54,21,54,,123,,,,,22,,66,22,66,,66,,125,22,,125,,125,21,125,,,,22,',
',,,,22,,,,,,126,126,126,126,,126,,,,,,66,,,66,,,,,,,,,27,,27,,,22,22',
'26,,,22,22,,,22,,66,21,,,,,21,21,,,,128,22,,,,26,22,22,,66,,,,,,,,,',
'22,,,126,126,126,126,,,,,22,,,,,,125,,125,,125,,125,27,,126,27,,,128',
',128,,,66,,,,66,66,,,,,,,26,,27,,26,,21,,26,26,,21,22,,125,,,22,22,',
',21,22,,,26,,,66,,,66,22,,26,,,,,,,,53,22,,27,,53,,,,66,,,,,,,,27,,',
',,27,27,,,66,21,,,,,22,53,53,53,,,22,,21,,,,,,,,21,21,9,22,,9,,,,,,22',
'22,,,,,,,,53,53,53,53,,21,21,,,21,,,,66,22,21,22,22,,,22,,,,,,22,,,',
',27,,,,,27,,,,,,,53,,128,27,128,21,,,22,53,53,,,,,,22,,,,22,9,,,,,9',
'9,128,,128,,128,,,,,,,,,,,,,,,,,,,27,,26,,26,,,66,,,26,,,27,,21,,,26',
',,27,27,,66,,22,,,,,,21,,,,,,21,,21,,,22,53,,27,27,,22,27,22,,,,128',
'27,128,,128,,,,,,,,9,22,53,,,26,128,,26,,,,,,,,,,,,,,27,,,,27,,,,26',
',128,,,,,26,,,,,,,,,,,9,,,,,,,,,,,,,9,,53,,,,53,,9,9,53,53,,,,,,,,,',
',27,,,,26,53,,,,26,26,9,9,,53,9,,27,,,,,26,27,,27,,,,,,,,26,,,,,,,,',
',,,,,,,,,,,,9,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,26,,,,,26,,,,,,,,,,26,',
',,,,,,,,,,,,9,,,,,,,,,,,,,,,,,9,,,,,,9,,,,,26,,,,,,26,,,,,,,,,,,,,26',
',,,,,,,26,26,,,,,,,,,,,,,,,53,,53,,,,,,53,26,26,,,26,,,53,,,26,,,,,',
',,,,,,,,,,,,,,,,,,,26,,,,,,,,26,,,,26,,,,,,,,,,,,,,53,,,53,,,,,,,,,',
',,,,,,,,,,,,53,,,,,,,,,,,,,,,,,,26,,,,,,,,,,,,,,,,,26,,,,,,26,,26,,',
',,,,,,,,,,,53,,,,,53,53,,,,,,,,,,,,53,,,,,,,,33,,,53,,,,,,33,33,33,',
',,,,,,,,,33,33,33,,,,,,,,,,,,,,,33,33,,,,,,,,,,,,,,,,53,,,,,53,,,,,',
',,,,53,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,53,,,,,,53,,,,,,,,,',
',,,53,,,,,,,,53,53,,,,,,,,,,,,,,,,,,,,,,,,53,53,,,53,,,,,,53,,,,,,,',
',,,,33,33,33,,,,,33,33,,,,,53,,,,,,,,53,,33,,53,33,33,33,33,33,33,33',
'33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,,,,,,,,33,33,',
',,,,,,33,,,,,,,33,,33,,,33,33,,53,,,,,,,,,,,,,,,,,53,,,,,,53,,53,,,',
',,,,,,,33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,33,,33',
'33,33,,,,,,,,,,,,,,,,,,,,,,,,,,33,,,,,,,,,,,,,,33,,33,,33,,,,,,,,,,',
',,,,,33,,,,,,,,,33,33,,,,,,,,,,33,,,33,,,,,,,,,,,,,,,,,,,,,,,,,33,,',
',,,,,,,,,,,,,,,,,33,33,,,,,,,,,,33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'33,33,,,33,33,33,33,,,,33,33,,,33,33,,,,,,,,,,,,,,,,,,,,,,,,33,,,33',
',,,,,,,,,,,,,,,,,,,33,,,,,,,,,,,,,,,,,33,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,33,,33,,,,,,,,,,,,,,33,33,33,33,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,33,,,,,,',
',,,,,,,,,,33,33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,33,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,33' ]
        racc_goto_check = arr = ::Array.new(3056, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   273,    16,   nil,    71,   127,    70,    59,  -302,   894,
  -513,  -597,  -549,   nil,  -248,    30,   240,   -18,  -198,   122,
   205,   644,   655,  -205,  -399,     1,  1078,   779,  -185,   -18,
    12,    55,   -19,  2068,   -10,   nil,   nil,    11,  -183,    55,
  -233,  -318,     3,  -310,   nil,   112,    57,    51,  -101,   nil,
   -23,    70,  -252,  1412,   246,  -277,    70,   -70,    -3,   nil,
   nil,    39,    44,  -199,    -4,    27,   737,   -52,  -605,   212,
   -52,    26,  -223,    12,   -13,  -273,  -250,  -399,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   199,   201,   -59,
   nil,   145,  -290,  -649,  -485,  -327,   115,  -179,   107,  -554,
   107,   119,   117,  -354,   110,   102,  -553,    94,  -560,  -425,
  -712,  -461,  -589,  -214,  -223,  -441,  -701,  -717,    89,  -460,
  -722,  -485,   nil,   201,  -436,   367,   325,  -476,   656,  -571,
  -536,   nil,  -554,  -694,  -783,  -769,  -154,  -503,   125,  -347,
  -284,   -13,   -68,   nil,   -77,   -77,  -721,  -489,  -612,   nil,
   nil,   124,   -21,    44,    42,   121,  -249,  -234,   128,   129,
   129,  -376,  -366,  -354,  -294,   nil,   nil,   -23,  -442,  -269,
  -580,    59,  -426,  -598,   nil,  -588,  -725,   nil,   nil,  -386 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   346,   293,   nil,   523,
   nil,   838,   nil,   290,   291,   nil,   nil,   nil,    11,    12,
    18,   228,   321,   nil,   nil,   586,   226,   227,   nil,   nil,
    17,   nil,   441,    21,    22,    23,    24,   nil,   677,   nil,
   nil,   nil,   310,   nil,    25,   412,    32,   nil,   nil,    34,
    37,    36,   nil,   223,   224,   358,   nil,   129,   420,   128,
   131,    75,    76,   nil,    90,    46,   282,   nil,   nil,   nil,
   807,   413,   nil,   414,   425,   631,   487,   280,   266,    47,
    48,    49,    50,    51,    52,    53,    54,    55,   nil,   267,
    61,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   569,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   704,   551,   nil,
   705,   928,   778,   539,   nil,   540,   nil,   nil,   541,   nil,
   543,   647,   nil,   nil,   nil,   549,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   424,   nil,   nil,   nil,   nil,   nil,    74,
    77,    78,   nil,   nil,   nil,   nil,   nil,   598,   nil,   nil,
   nil,   nil,   nil,   nil,   822,   739,   538,   nil,   542,   830,
   554,   556,   557,   790,   560,   561,   791,   564,   567,   285 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 146, :_reduce_none,
  2, 147, :_reduce_2,
  0, 148, :_reduce_3,
  1, 148, :_reduce_4,
  3, 148, :_reduce_5,
  2, 148, :_reduce_6,
  1, 150, :_reduce_none,
  4, 150, :_reduce_8,
  4, 153, :_reduce_9,
  2, 154, :_reduce_10,
  0, 158, :_reduce_11,
  1, 158, :_reduce_12,
  3, 158, :_reduce_13,
  2, 158, :_reduce_14,
  1, 159, :_reduce_none,
  4, 159, :_reduce_16,
  0, 176, :_reduce_17,
  4, 152, :_reduce_18,
  3, 152, :_reduce_19,
  3, 152, :_reduce_20,
  3, 152, :_reduce_21,
  2, 152, :_reduce_22,
  3, 152, :_reduce_23,
  3, 152, :_reduce_24,
  3, 152, :_reduce_25,
  3, 152, :_reduce_26,
  3, 152, :_reduce_27,
  4, 152, :_reduce_28,
  1, 152, :_reduce_none,
  3, 152, :_reduce_30,
  3, 152, :_reduce_31,
  6, 152, :_reduce_32,
  5, 152, :_reduce_33,
  5, 152, :_reduce_34,
  5, 152, :_reduce_35,
  5, 152, :_reduce_36,
  3, 152, :_reduce_37,
  3, 152, :_reduce_38,
  3, 152, :_reduce_39,
  1, 152, :_reduce_none,
  3, 163, :_reduce_41,
  3, 163, :_reduce_42,
  1, 175, :_reduce_none,
  3, 175, :_reduce_44,
  3, 175, :_reduce_45,
  3, 175, :_reduce_46,
  2, 175, :_reduce_47,
  1, 175, :_reduce_none,
  1, 162, :_reduce_none,
  1, 165, :_reduce_none,
  1, 165, :_reduce_none,
  1, 180, :_reduce_none,
  4, 180, :_reduce_53,
  0, 188, :_reduce_54,
  5, 185, :_reduce_55,
  1, 187, :_reduce_none,
  2, 179, :_reduce_57,
  3, 179, :_reduce_58,
  4, 179, :_reduce_59,
  5, 179, :_reduce_60,
  4, 179, :_reduce_61,
  5, 179, :_reduce_62,
  2, 179, :_reduce_63,
  2, 179, :_reduce_64,
  2, 179, :_reduce_65,
  2, 179, :_reduce_66,
  2, 179, :_reduce_67,
  1, 164, :_reduce_68,
  3, 164, :_reduce_69,
  1, 192, :_reduce_70,
  3, 192, :_reduce_71,
  1, 191, :_reduce_none,
  2, 191, :_reduce_73,
  3, 191, :_reduce_74,
  5, 191, :_reduce_75,
  2, 191, :_reduce_76,
  4, 191, :_reduce_77,
  2, 191, :_reduce_78,
  4, 191, :_reduce_79,
  1, 191, :_reduce_80,
  3, 191, :_reduce_81,
  1, 195, :_reduce_none,
  3, 195, :_reduce_83,
  2, 194, :_reduce_84,
  3, 194, :_reduce_85,
  1, 197, :_reduce_86,
  3, 197, :_reduce_87,
  1, 196, :_reduce_88,
  1, 196, :_reduce_89,
  4, 196, :_reduce_90,
  3, 196, :_reduce_91,
  3, 196, :_reduce_92,
  3, 196, :_reduce_93,
  3, 196, :_reduce_94,
  2, 196, :_reduce_95,
  1, 196, :_reduce_96,
  1, 172, :_reduce_97,
  1, 172, :_reduce_98,
  4, 172, :_reduce_99,
  3, 172, :_reduce_100,
  3, 172, :_reduce_101,
  3, 172, :_reduce_102,
  3, 172, :_reduce_103,
  2, 172, :_reduce_104,
  1, 172, :_reduce_105,
  1, 200, :_reduce_106,
  1, 200, :_reduce_none,
  2, 201, :_reduce_108,
  1, 201, :_reduce_109,
  3, 201, :_reduce_110,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 205, :_reduce_116,
  1, 205, :_reduce_none,
  1, 160, :_reduce_none,
  1, 160, :_reduce_none,
  1, 161, :_reduce_120,
  0, 208, :_reduce_121,
  4, 161, :_reduce_122,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 203, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  1, 204, :_reduce_none,
  3, 178, :_reduce_194,
  5, 178, :_reduce_195,
  3, 178, :_reduce_196,
  5, 178, :_reduce_197,
  6, 178, :_reduce_198,
  5, 178, :_reduce_199,
  5, 178, :_reduce_200,
  5, 178, :_reduce_201,
  5, 178, :_reduce_202,
  4, 178, :_reduce_203,
  3, 178, :_reduce_204,
  3, 178, :_reduce_205,
  3, 178, :_reduce_206,
  3, 178, :_reduce_207,
  3, 178, :_reduce_208,
  3, 178, :_reduce_209,
  3, 178, :_reduce_210,
  3, 178, :_reduce_211,
  3, 178, :_reduce_212,
  4, 178, :_reduce_213,
  2, 178, :_reduce_214,
  2, 178, :_reduce_215,
  3, 178, :_reduce_216,
  3, 178, :_reduce_217,
  3, 178, :_reduce_218,
  3, 178, :_reduce_219,
  3, 178, :_reduce_220,
  3, 178, :_reduce_221,
  3, 178, :_reduce_222,
  3, 178, :_reduce_223,
  3, 178, :_reduce_224,
  3, 178, :_reduce_225,
  3, 178, :_reduce_226,
  3, 178, :_reduce_227,
  3, 178, :_reduce_228,
  2, 178, :_reduce_229,
  2, 178, :_reduce_230,
  3, 178, :_reduce_231,
  3, 178, :_reduce_232,
  3, 178, :_reduce_233,
  3, 178, :_reduce_234,
  3, 178, :_reduce_235,
  0, 212, :_reduce_236,
  0, 213, :_reduce_237,
  8, 178, :_reduce_238,
  1, 178, :_reduce_none,
  1, 211, :_reduce_none,
  1, 214, :_reduce_none,
  2, 214, :_reduce_none,
  4, 214, :_reduce_243,
  2, 214, :_reduce_244,
  3, 219, :_reduce_245,
  0, 220, :_reduce_246,
  1, 220, :_reduce_none,
  0, 168, :_reduce_248,
  1, 168, :_reduce_none,
  2, 168, :_reduce_none,
  4, 168, :_reduce_251,
  2, 168, :_reduce_252,
  1, 190, :_reduce_253,
  2, 190, :_reduce_254,
  2, 190, :_reduce_255,
  4, 190, :_reduce_256,
  1, 190, :_reduce_257,
  0, 223, :_reduce_258,
  2, 184, :_reduce_259,
  2, 222, :_reduce_260,
  2, 221, :_reduce_261,
  0, 221, :_reduce_262,
  1, 216, :_reduce_263,
  2, 216, :_reduce_264,
  3, 216, :_reduce_265,
  4, 216, :_reduce_266,
  1, 174, :_reduce_267,
  1, 174, :_reduce_none,
  3, 173, :_reduce_269,
  4, 173, :_reduce_270,
  2, 173, :_reduce_271,
  1, 210, :_reduce_none,
  1, 210, :_reduce_none,
  1, 210, :_reduce_none,
  1, 210, :_reduce_none,
  1, 210, :_reduce_none,
  1, 210, :_reduce_none,
  1, 210, :_reduce_none,
  1, 210, :_reduce_none,
  1, 210, :_reduce_none,
  1, 210, :_reduce_none,
  1, 210, :_reduce_282,
  0, 246, :_reduce_283,
  4, 210, :_reduce_284,
  0, 247, :_reduce_285,
  0, 248, :_reduce_286,
  6, 210, :_reduce_287,
  0, 249, :_reduce_288,
  4, 210, :_reduce_289,
  3, 210, :_reduce_290,
  3, 210, :_reduce_291,
  2, 210, :_reduce_292,
  3, 210, :_reduce_293,
  3, 210, :_reduce_294,
  1, 210, :_reduce_295,
  4, 210, :_reduce_296,
  3, 210, :_reduce_297,
  1, 210, :_reduce_298,
  5, 210, :_reduce_299,
  4, 210, :_reduce_300,
  3, 210, :_reduce_301,
  2, 210, :_reduce_302,
  1, 210, :_reduce_none,
  2, 210, :_reduce_304,
  2, 210, :_reduce_305,
  6, 210, :_reduce_306,
  6, 210, :_reduce_307,
  0, 250, :_reduce_308,
  0, 251, :_reduce_309,
  7, 210, :_reduce_310,
  0, 252, :_reduce_311,
  0, 253, :_reduce_312,
  7, 210, :_reduce_313,
  5, 210, :_reduce_314,
  4, 210, :_reduce_315,
  0, 254, :_reduce_316,
  0, 255, :_reduce_317,
  9, 210, :_reduce_318,
  0, 256, :_reduce_319,
  6, 210, :_reduce_320,
  0, 257, :_reduce_321,
  7, 210, :_reduce_322,
  0, 258, :_reduce_323,
  5, 210, :_reduce_324,
  0, 259, :_reduce_325,
  6, 210, :_reduce_326,
  0, 260, :_reduce_327,
  0, 261, :_reduce_328,
  9, 210, :_reduce_329,
  1, 210, :_reduce_330,
  1, 210, :_reduce_331,
  1, 210, :_reduce_332,
  1, 210, :_reduce_333,
  1, 167, :_reduce_none,
  1, 237, :_reduce_none,
  1, 237, :_reduce_none,
  2, 237, :_reduce_337,
  1, 239, :_reduce_none,
  1, 239, :_reduce_none,
  1, 238, :_reduce_none,
  5, 238, :_reduce_341,
  1, 156, :_reduce_none,
  2, 156, :_reduce_343,
  1, 241, :_reduce_none,
  1, 241, :_reduce_none,
  1, 262, :_reduce_346,
  3, 262, :_reduce_347,
  1, 265, :_reduce_348,
  3, 265, :_reduce_349,
  1, 264, :_reduce_none,
  4, 264, :_reduce_351,
  6, 264, :_reduce_352,
  3, 264, :_reduce_353,
  5, 264, :_reduce_354,
  2, 264, :_reduce_355,
  4, 264, :_reduce_356,
  1, 264, :_reduce_357,
  3, 264, :_reduce_358,
  4, 266, :_reduce_359,
  2, 266, :_reduce_360,
  2, 266, :_reduce_361,
  1, 266, :_reduce_362,
  2, 271, :_reduce_363,
  0, 271, :_reduce_364,
  6, 272, :_reduce_365,
  8, 272, :_reduce_366,
  4, 272, :_reduce_367,
  6, 272, :_reduce_368,
  4, 272, :_reduce_369,
  2, 272, :_reduce_none,
  6, 272, :_reduce_371,
  2, 272, :_reduce_372,
  4, 272, :_reduce_373,
  6, 272, :_reduce_374,
  2, 272, :_reduce_375,
  4, 272, :_reduce_376,
  2, 272, :_reduce_377,
  4, 272, :_reduce_378,
  1, 272, :_reduce_none,
  0, 186, :_reduce_380,
  1, 186, :_reduce_381,
  3, 276, :_reduce_382,
  1, 276, :_reduce_383,
  4, 276, :_reduce_384,
  1, 277, :_reduce_385,
  4, 277, :_reduce_386,
  1, 278, :_reduce_387,
  3, 278, :_reduce_388,
  1, 279, :_reduce_389,
  1, 279, :_reduce_none,
  0, 283, :_reduce_391,
  0, 284, :_reduce_392,
  4, 236, :_reduce_393,
  4, 281, :_reduce_394,
  1, 281, :_reduce_395,
  3, 282, :_reduce_396,
  3, 282, :_reduce_397,
  0, 287, :_reduce_398,
  5, 286, :_reduce_399,
  2, 181, :_reduce_400,
  4, 181, :_reduce_401,
  5, 181, :_reduce_402,
  5, 181, :_reduce_403,
  2, 235, :_reduce_404,
  4, 235, :_reduce_405,
  4, 235, :_reduce_406,
  3, 235, :_reduce_407,
  3, 235, :_reduce_408,
  3, 235, :_reduce_409,
  2, 235, :_reduce_410,
  1, 235, :_reduce_411,
  4, 235, :_reduce_412,
  0, 289, :_reduce_413,
  5, 234, :_reduce_414,
  0, 290, :_reduce_415,
  5, 234, :_reduce_416,
  5, 240, :_reduce_417,
  1, 291, :_reduce_418,
  1, 291, :_reduce_none,
  6, 155, :_reduce_420,
  0, 155, :_reduce_421,
  1, 292, :_reduce_422,
  1, 292, :_reduce_none,
  1, 292, :_reduce_none,
  2, 293, :_reduce_425,
  1, 293, :_reduce_none,
  2, 157, :_reduce_427,
  1, 157, :_reduce_none,
  1, 224, :_reduce_none,
  1, 224, :_reduce_none,
  1, 224, :_reduce_none,
  1, 225, :_reduce_432,
  1, 295, :_reduce_433,
  2, 295, :_reduce_434,
  3, 296, :_reduce_435,
  1, 296, :_reduce_436,
  1, 296, :_reduce_437,
  3, 226, :_reduce_438,
  4, 227, :_reduce_439,
  3, 228, :_reduce_440,
  0, 300, :_reduce_441,
  3, 300, :_reduce_442,
  1, 301, :_reduce_443,
  2, 301, :_reduce_444,
  3, 230, :_reduce_445,
  0, 303, :_reduce_446,
  3, 303, :_reduce_447,
  3, 229, :_reduce_448,
  3, 231, :_reduce_449,
  0, 304, :_reduce_450,
  3, 304, :_reduce_451,
  0, 305, :_reduce_452,
  3, 305, :_reduce_453,
  0, 297, :_reduce_454,
  2, 297, :_reduce_455,
  0, 298, :_reduce_456,
  2, 298, :_reduce_457,
  0, 299, :_reduce_458,
  2, 299, :_reduce_459,
  1, 302, :_reduce_460,
  2, 302, :_reduce_461,
  0, 307, :_reduce_462,
  4, 302, :_reduce_463,
  1, 306, :_reduce_464,
  1, 306, :_reduce_465,
  1, 306, :_reduce_466,
  1, 306, :_reduce_none,
  1, 206, :_reduce_468,
  3, 207, :_reduce_469,
  1, 294, :_reduce_470,
  2, 294, :_reduce_471,
  1, 209, :_reduce_472,
  1, 209, :_reduce_473,
  1, 209, :_reduce_474,
  1, 209, :_reduce_475,
  1, 198, :_reduce_476,
  1, 198, :_reduce_477,
  1, 198, :_reduce_478,
  1, 198, :_reduce_479,
  1, 198, :_reduce_480,
  1, 199, :_reduce_481,
  1, 199, :_reduce_482,
  1, 199, :_reduce_483,
  1, 199, :_reduce_484,
  1, 199, :_reduce_485,
  1, 199, :_reduce_486,
  1, 199, :_reduce_487,
  1, 232, :_reduce_488,
  1, 232, :_reduce_489,
  1, 166, :_reduce_490,
  1, 166, :_reduce_491,
  1, 171, :_reduce_492,
  1, 171, :_reduce_493,
  1, 242, :_reduce_494,
  0, 308, :_reduce_495,
  4, 242, :_reduce_496,
  2, 242, :_reduce_497,
  3, 244, :_reduce_498,
  0, 310, :_reduce_499,
  3, 244, :_reduce_500,
  4, 309, :_reduce_501,
  2, 309, :_reduce_502,
  2, 309, :_reduce_503,
  1, 309, :_reduce_504,
  2, 312, :_reduce_505,
  0, 312, :_reduce_506,
  6, 285, :_reduce_507,
  8, 285, :_reduce_508,
  4, 285, :_reduce_509,
  6, 285, :_reduce_510,
  4, 285, :_reduce_511,
  6, 285, :_reduce_512,
  2, 285, :_reduce_513,
  4, 285, :_reduce_514,
  6, 285, :_reduce_515,
  2, 285, :_reduce_516,
  4, 285, :_reduce_517,
  2, 285, :_reduce_518,
  4, 285, :_reduce_519,
  1, 285, :_reduce_520,
  0, 285, :_reduce_521,
  1, 280, :_reduce_522,
  1, 280, :_reduce_523,
  1, 280, :_reduce_524,
  1, 280, :_reduce_525,
  1, 263, :_reduce_none,
  1, 263, :_reduce_527,
  1, 314, :_reduce_528,
  1, 315, :_reduce_529,
  3, 315, :_reduce_530,
  1, 273, :_reduce_531,
  3, 273, :_reduce_532,
  1, 316, :_reduce_533,
  2, 317, :_reduce_534,
  1, 317, :_reduce_535,
  2, 318, :_reduce_536,
  1, 318, :_reduce_537,
  1, 267, :_reduce_538,
  3, 267, :_reduce_539,
  1, 311, :_reduce_540,
  3, 311, :_reduce_541,
  1, 319, :_reduce_none,
  1, 319, :_reduce_none,
  2, 268, :_reduce_544,
  1, 268, :_reduce_545,
  3, 320, :_reduce_546,
  3, 321, :_reduce_547,
  1, 274, :_reduce_548,
  3, 274, :_reduce_549,
  1, 313, :_reduce_550,
  3, 313, :_reduce_551,
  1, 322, :_reduce_none,
  1, 322, :_reduce_none,
  2, 275, :_reduce_554,
  1, 275, :_reduce_555,
  1, 323, :_reduce_none,
  1, 323, :_reduce_none,
  2, 270, :_reduce_558,
  2, 269, :_reduce_559,
  0, 269, :_reduce_560,
  1, 245, :_reduce_none,
  3, 245, :_reduce_562,
  0, 233, :_reduce_563,
  2, 233, :_reduce_none,
  1, 218, :_reduce_565,
  3, 218, :_reduce_566,
  3, 324, :_reduce_567,
  2, 324, :_reduce_568,
  4, 324, :_reduce_569,
  2, 324, :_reduce_570,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 189, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 183, :_reduce_none,
  1, 288, :_reduce_none,
  1, 288, :_reduce_none,
  1, 288, :_reduce_none,
  1, 182, :_reduce_none,
  1, 182, :_reduce_none,
  1, 170, :_reduce_583,
  1, 170, :_reduce_584,
  0, 149, :_reduce_none,
  1, 149, :_reduce_none,
  0, 177, :_reduce_none,
  1, 177, :_reduce_none,
  2, 193, :_reduce_589,
  2, 169, :_reduce_590,
  0, 217, :_reduce_none,
  1, 217, :_reduce_none,
  1, 217, :_reduce_none,
  1, 243, :_reduce_594,
  1, 243, :_reduce_none,
  1, 151, :_reduce_none,
  2, 151, :_reduce_none,
  0, 215, :_reduce_598 ]

racc_reduce_n = 599

racc_shift_n = 1026

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tUMINUS_NUM => 65,
  :tPOW => 66,
  :tCMP => 67,
  :tEQ => 68,
  :tEQQ => 69,
  :tNEQ => 70,
  :tGEQ => 71,
  :tLEQ => 72,
  :tANDOP => 73,
  :tOROP => 74,
  :tMATCH => 75,
  :tNMATCH => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tLBRACK => 92,
  :tLBRACK2 => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tDSTAR => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tREGEXP_OPT => 119,
  :tWORDS_BEG => 120,
  :tQWORDS_BEG => 121,
  :tSYMBOLS_BEG => 122,
  :tQSYMBOLS_BEG => 123,
  :tSTRING_DBEG => 124,
  :tSTRING_DVAR => 125,
  :tSTRING_END => 126,
  :tSTRING_DEND => 127,
  :tSTRING => 128,
  :tSYMBOL => 129,
  :tNL => 130,
  :tEH => 131,
  :tCOLON => 132,
  :tCOMMA => 133,
  :tSPACE => 134,
  :tSEMI => 135,
  :tLAMBDA => 136,
  :tLAMBEG => 137,
  :tCHARACTER => 138,
  :tRATIONAL => 139,
  :tIMAGINARY => 140,
  :tLABEL_END => 141,
  :tANDDOT => 142,
  :tEQL => 143,
  :tLOWEST => 144 }

racc_nt_base = 145

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tLBRACK",
  "tLBRACK2",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tDSTAR",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tREGEXP_OPT",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSYMBOLS_BEG",
  "tQSYMBOLS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING_DEND",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tCHARACTER",
  "tRATIONAL",
  "tIMAGINARY",
  "tLABEL_END",
  "tANDDOT",
  "tEQL",
  "tLOWEST",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "stmt_or_begin",
  "fitem",
  "undef_list",
  "expr_value",
  "command_asgn",
  "mlhs",
  "command_call",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "call_op",
  "backref",
  "lhs",
  "mrhs",
  "mrhs_arg",
  "expr",
  "@1",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "block_call",
  "dot_or_colon",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "fcall",
  "@2",
  "operation",
  "call_args",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "user_variable",
  "keyword_variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "@3",
  "simple_numeric",
  "primary",
  "arg_value",
  "@4",
  "@5",
  "aref_args",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "@6",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "symbols",
  "qsymbols",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "@20",
  "@21",
  "@22",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_args_tail",
  "f_block_kwarg",
  "f_kwrest",
  "opt_f_block_arg",
  "f_block_arg",
  "opt_block_args_tail",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "@23",
  "@24",
  "f_args",
  "do_block",
  "@25",
  "operation3",
  "@26",
  "@27",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "regexp_contents",
  "word_list",
  "word",
  "string_content",
  "symbol_list",
  "qword_list",
  "qsym_list",
  "string_dvar",
  "@28",
  "@29",
  "args_tail",
  "@30",
  "f_kwarg",
  "opt_args_tail",
  "f_optarg",
  "f_arg_asgn",
  "f_arg_item",
  "f_label",
  "f_kw",
  "f_block_kw",
  "kwrest_mark",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'ruby23.y', 52)
  def _reduce_2(val, _values, result)
                          result = @builder.compstmt(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 57)
  def _reduce_3(val, _values, result)
                          result = []

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 61)
  def _reduce_4(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 65)
  def _reduce_5(val, _values, result)
                          result = val[0] << val[2]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 69)
  def _reduce_6(val, _values, result)
                          result = [ val[1] ]

    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'ruby23.y', 75)
  def _reduce_8(val, _values, result)
                          result = @builder.preexe(val[0], val[1], val[2], val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 80)
  def _reduce_9(val, _values, result)
                          rescue_bodies     = val[1]
                      else_t,   else_   = val[2]
                      ensure_t, ensure_ = val[3]

                      if rescue_bodies.empty? && !else_.nil?
                        diagnostic :warning, :useless_else, nil, else_t
                      end

                      result = @builder.begin_body(val[0],
                                  rescue_bodies,
                                  else_t,   else_,
                                  ensure_t, ensure_)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 96)
  def _reduce_10(val, _values, result)
                          result = @builder.compstmt(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 101)
  def _reduce_11(val, _values, result)
                          result = []

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 105)
  def _reduce_12(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 109)
  def _reduce_13(val, _values, result)
                          result = val[0] << val[2]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 113)
  def _reduce_14(val, _values, result)
                          result = [ val[1] ]

    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'ruby23.y', 119)
  def _reduce_16(val, _values, result)
                          diagnostic :error, :begin_in_method, nil, val[0]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 124)
  def _reduce_17(val, _values, result)
                          @lexer.state = :expr_fname

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 128)
  def _reduce_18(val, _values, result)
                          result = @builder.alias(val[0], val[1], val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 132)
  def _reduce_19(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.gvar(val[2]))

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 138)
  def _reduce_20(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.back_ref(val[2]))

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 144)
  def _reduce_21(val, _values, result)
                          diagnostic :error, :nth_ref_alias, nil, val[2]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 148)
  def _reduce_22(val, _values, result)
                          result = @builder.undef_method(val[0], val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 152)
  def _reduce_23(val, _values, result)
                          result = @builder.condition_mod(val[0], nil,
                                                      val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 157)
  def _reduce_24(val, _values, result)
                          result = @builder.condition_mod(nil, val[0],
                                                      val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 162)
  def _reduce_25(val, _values, result)
                          result = @builder.loop_mod(:while, val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 166)
  def _reduce_26(val, _values, result)
                          result = @builder.loop_mod(:until, val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 170)
  def _reduce_27(val, _values, result)
                          rescue_body = @builder.rescue_body(val[1],
                                        nil, nil, nil,
                                        nil, val[2])

                      result = @builder.begin_body(val[0], [ rescue_body ])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 178)
  def _reduce_28(val, _values, result)
                          result = @builder.postexe(val[0], val[1], val[2], val[3])

    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'ruby23.y', 183)
  def _reduce_30(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 187)
  def _reduce_31(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 191)
  def _reduce_32(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 198)
  def _reduce_33(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 205)
  def _reduce_34(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 212)
  def _reduce_35(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 219)
  def _reduce_36(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 226)
  def _reduce_37(val, _values, result)
                          @builder.op_assign(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 230)
  def _reduce_38(val, _values, result)
                          result = @builder.assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 235)
  def _reduce_39(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])

    result
  end
.,.,

# reduce 40 omitted

module_eval(<<'.,.,', 'ruby23.y', 241)
  def _reduce_41(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 245)
  def _reduce_42(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])

    result
  end
.,.,

# reduce 43 omitted

module_eval(<<'.,.,', 'ruby23.y', 251)
  def _reduce_44(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 255)
  def _reduce_45(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 259)
  def _reduce_46(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[2], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 263)
  def _reduce_47(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)

    result
  end
.,.,

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

module_eval(<<'.,.,', 'ruby23.y', 275)
  def _reduce_53(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 281)
  def _reduce_54(val, _values, result)
                          @static_env.extend_dynamic

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 285)
  def _reduce_55(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend

    result
  end
.,.,

# reduce 56 omitted

module_eval(<<'.,.,', 'ruby23.y', 294)
  def _reduce_57(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0],
                                  nil, val[1], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 299)
  def _reduce_58(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0],
                                        nil, val[1], nil)

                      begin_t, args, body, end_t = val[2]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 308)
  def _reduce_59(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 313)
  def _reduce_60(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 322)
  def _reduce_61(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 327)
  def _reduce_62(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 336)
  def _reduce_63(val, _values, result)
                          result = @builder.keyword_cmd(:super, val[0],
                                  nil, val[1], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 341)
  def _reduce_64(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0],
                                  nil, val[1], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 346)
  def _reduce_65(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0],
                                  nil, val[1], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 351)
  def _reduce_66(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0],
                                  nil, val[1], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 356)
  def _reduce_67(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0],
                                  nil, val[1], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 362)
  def _reduce_68(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 366)
  def _reduce_69(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 371)
  def _reduce_70(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 375)
  def _reduce_71(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])

    result
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'ruby23.y', 381)
  def _reduce_73(val, _values, result)
                          result = val[0].
                                  push(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 386)
  def _reduce_74(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2]))

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 391)
  def _reduce_75(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2])).
                                  concat(val[4])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 397)
  def _reduce_76(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1]))

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 402)
  def _reduce_77(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1])).
                                  concat(val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 408)
  def _reduce_78(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 412)
  def _reduce_79(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]),
                                 *val[3] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 417)
  def _reduce_80(val, _values, result)
                          result = [ @builder.splat(val[0]) ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 421)
  def _reduce_81(val, _values, result)
                          result = [ @builder.splat(val[0]),
                                 *val[2] ]

    result
  end
.,.,

# reduce 82 omitted

module_eval(<<'.,.,', 'ruby23.y', 428)
  def _reduce_83(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 433)
  def _reduce_84(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 437)
  def _reduce_85(val, _values, result)
                          result = val[0] << val[1]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 442)
  def _reduce_86(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 446)
  def _reduce_87(val, _values, result)
                          result = val[0] << val[2]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 451)
  def _reduce_88(val, _values, result)
                          result = @builder.assignable(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 455)
  def _reduce_89(val, _values, result)
                          result = @builder.assignable(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 459)
  def _reduce_90(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 463)
  def _reduce_91(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 467)
  def _reduce_92(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 471)
  def _reduce_93(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 475)
  def _reduce_94(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 480)
  def _reduce_95(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 485)
  def _reduce_96(val, _values, result)
                          result = @builder.assignable(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 490)
  def _reduce_97(val, _values, result)
                          result = @builder.assignable(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 494)
  def _reduce_98(val, _values, result)
                          result = @builder.assignable(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 498)
  def _reduce_99(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 502)
  def _reduce_100(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 506)
  def _reduce_101(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 510)
  def _reduce_102(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 514)
  def _reduce_103(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 519)
  def _reduce_104(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 524)
  def _reduce_105(val, _values, result)
                          result = @builder.assignable(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 529)
  def _reduce_106(val, _values, result)
                          diagnostic :error, :module_name_const, nil, val[0]

    result
  end
.,.,

# reduce 107 omitted

module_eval(<<'.,.,', 'ruby23.y', 535)
  def _reduce_108(val, _values, result)
                          result = @builder.const_global(val[0], val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 539)
  def _reduce_109(val, _values, result)
                          result = @builder.const(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 543)
  def _reduce_110(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])

    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

module_eval(<<'.,.,', 'ruby23.y', 552)
  def _reduce_116(val, _values, result)
                          result = @builder.symbol(val[0])

    result
  end
.,.,

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

module_eval(<<'.,.,', 'ruby23.y', 561)
  def _reduce_120(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 565)
  def _reduce_121(val, _values, result)
                          @lexer.state = :expr_fname

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 569)
  def _reduce_122(val, _values, result)
                          result = val[0] << val[3]

    result
  end
.,.,

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

module_eval(<<'.,.,', 'ruby23.y', 590)
  def _reduce_194(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 594)
  def _reduce_195(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result  = @builder.assign(val[0], val[1], rescue_)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 604)
  def _reduce_196(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 608)
  def _reduce_197(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result = @builder.op_assign(val[0], val[1], rescue_)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 618)
  def _reduce_198(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 625)
  def _reduce_199(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 632)
  def _reduce_200(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 639)
  def _reduce_201(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 646)
  def _reduce_202(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                      result = @builder.op_assign(const, val[3], val[4])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 652)
  def _reduce_203(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_global(val[0], val[1]))
                      result = @builder.op_assign(const, val[2], val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 658)
  def _reduce_204(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 662)
  def _reduce_205(val, _values, result)
                          result = @builder.range_inclusive(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 666)
  def _reduce_206(val, _values, result)
                          result = @builder.range_exclusive(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 670)
  def _reduce_207(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 674)
  def _reduce_208(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 678)
  def _reduce_209(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 682)
  def _reduce_210(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 686)
  def _reduce_211(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 690)
  def _reduce_212(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 694)
  def _reduce_213(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    val[1], val[2], val[3]))

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 700)
  def _reduce_214(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 704)
  def _reduce_215(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 708)
  def _reduce_216(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 712)
  def _reduce_217(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 716)
  def _reduce_218(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 720)
  def _reduce_219(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 724)
  def _reduce_220(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 728)
  def _reduce_221(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 732)
  def _reduce_222(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 736)
  def _reduce_223(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 740)
  def _reduce_224(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 744)
  def _reduce_225(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 748)
  def _reduce_226(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 752)
  def _reduce_227(val, _values, result)
                          result = @builder.match_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 756)
  def _reduce_228(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 760)
  def _reduce_229(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 764)
  def _reduce_230(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 768)
  def _reduce_231(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 772)
  def _reduce_232(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 776)
  def _reduce_233(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 780)
  def _reduce_234(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 784)
  def _reduce_235(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0], nil, [ val[2] ], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 794)
  def _reduce_236(val, _values, result)
                          @lexer.push_cond
                      @lexer.cond.push(true)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 799)
  def _reduce_237(val, _values, result)
                          @lexer.pop_cond

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 803)
  def _reduce_238(val, _values, result)
                          result = @builder.ternary(val[0], val[1],
                                                val[3], val[5], val[7])

    result
  end
.,.,

# reduce 239 omitted

# reduce 240 omitted

# reduce 241 omitted

# reduce 242 omitted

module_eval(<<'.,.,', 'ruby23.y', 814)
  def _reduce_243(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 818)
  def _reduce_244(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 823)
  def _reduce_245(val, _values, result)
                          result = val

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 828)
  def _reduce_246(val, _values, result)
                          result = [ nil, [], nil ]

    result
  end
.,.,

# reduce 247 omitted

module_eval(<<'.,.,', 'ruby23.y', 834)
  def _reduce_248(val, _values, result)
                          result = []

    result
  end
.,.,

# reduce 249 omitted

# reduce 250 omitted

module_eval(<<'.,.,', 'ruby23.y', 840)
  def _reduce_251(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 844)
  def _reduce_252(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 849)
  def _reduce_253(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 853)
  def _reduce_254(val, _values, result)
                          result = val[0].concat(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 857)
  def _reduce_255(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                      result.concat(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 862)
  def _reduce_256(val, _values, result)
                          assocs = @builder.associate(nil, val[2], nil)
                      result = val[0] << assocs
                      result.concat(val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 868)
  def _reduce_257(val, _values, result)
                          result =  [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 872)
  def _reduce_258(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.push(true)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 877)
  def _reduce_259(val, _values, result)
                          @lexer.cmdarg = val[0]

                      result = val[1]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 884)
  def _reduce_260(val, _values, result)
                          result = @builder.block_pass(val[0], val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 889)
  def _reduce_261(val, _values, result)
                          result = [ val[1] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 893)
  def _reduce_262(val, _values, result)
                          result = []

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 898)
  def _reduce_263(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 902)
  def _reduce_264(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 906)
  def _reduce_265(val, _values, result)
                          result = val[0] << val[2]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 910)
  def _reduce_266(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 915)
  def _reduce_267(val, _values, result)
                          result = @builder.array(nil, val[0], nil)

    result
  end
.,.,

# reduce 268 omitted

module_eval(<<'.,.,', 'ruby23.y', 921)
  def _reduce_269(val, _values, result)
                          result = val[0] << val[2]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 925)
  def _reduce_270(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 929)
  def _reduce_271(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]

    result
  end
.,.,

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

# reduce 280 omitted

# reduce 281 omitted

module_eval(<<'.,.,', 'ruby23.y', 944)
  def _reduce_282(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 948)
  def _reduce_283(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 953)
  def _reduce_284(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin_keyword(val[0], val[2], val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 959)
  def _reduce_285(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 964)
  def _reduce_286(val, _values, result)
                          @lexer.state = :expr_endarg

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 968)
  def _reduce_287(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin(val[0], val[2], val[5])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 974)
  def _reduce_288(val, _values, result)
                          @lexer.state = :expr_endarg

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 978)
  def _reduce_289(val, _values, result)
                          result = @builder.begin(val[0], nil, val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 982)
  def _reduce_290(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 986)
  def _reduce_291(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 990)
  def _reduce_292(val, _values, result)
                          result = @builder.const_global(val[0], val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 994)
  def _reduce_293(val, _values, result)
                          result = @builder.array(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 998)
  def _reduce_294(val, _values, result)
                          result = @builder.associate(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1002)
  def _reduce_295(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1006)
  def _reduce_296(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], val[2], val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1010)
  def _reduce_297(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], [], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1014)
  def _reduce_298(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1018)
  def _reduce_299(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0],
                                                    val[2], [ val[3] ], val[4])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1023)
  def _reduce_300(val, _values, result)
                          result = @builder.not_op(val[0], val[1], val[2], val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1027)
  def _reduce_301(val, _values, result)
                          result = @builder.not_op(val[0], val[1], nil, val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1031)
  def _reduce_302(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0])

                      begin_t, args, body, end_t = val[1]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)

    result
  end
.,.,

# reduce 303 omitted

module_eval(<<'.,.,', 'ruby23.y', 1040)
  def _reduce_304(val, _values, result)
                          begin_t, args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, args, body, end_t)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1046)
  def _reduce_305(val, _values, result)
                          lambda_call = @builder.call_lambda(val[0])

                      args, (begin_t, body, end_t) = val[1]
                      result      = @builder.block(lambda_call,
                                      begin_t, args, body, end_t)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1054)
  def _reduce_306(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  val[3], else_t,
                                                  else_,  val[5])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1061)
  def _reduce_307(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  else_,  else_t,
                                                  val[3], val[5])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1068)
  def _reduce_308(val, _values, result)
                          @lexer.cond.push(true)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1072)
  def _reduce_309(val, _values, result)
                          @lexer.cond.pop

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1076)
  def _reduce_310(val, _values, result)
                          result = @builder.loop(:while, val[0], val[2], val[3],
                                             val[5], val[6])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1081)
  def _reduce_311(val, _values, result)
                          @lexer.cond.push(true)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1085)
  def _reduce_312(val, _values, result)
                          @lexer.cond.pop

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1089)
  def _reduce_313(val, _values, result)
                          result = @builder.loop(:until, val[0], val[2], val[3],
                                             val[5], val[6])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1094)
  def _reduce_314(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[3]

                      result = @builder.case(val[0], val[1],
                                             when_bodies, else_t, else_body,
                                             val[4])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1102)
  def _reduce_315(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[2]

                      result = @builder.case(val[0], nil,
                                             when_bodies, else_t, else_body,
                                             val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1110)
  def _reduce_316(val, _values, result)
                          @lexer.cond.push(true)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1114)
  def _reduce_317(val, _values, result)
                          @lexer.cond.pop

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1118)
  def _reduce_318(val, _values, result)
                          result = @builder.for(val[0], val[1],
                                            val[2], val[4],
                                            val[5], val[7], val[8])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1124)
  def _reduce_319(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1129)
  def _reduce_320(val, _values, result)
                          if in_def?
                        diagnostic :error, :class_in_def, nil, val[0]
                      end

                      lt_t, superclass = val[2]
                      result = @builder.def_class(val[0], val[1],
                                                  lt_t, superclass,
                                                  val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1143)
  def _reduce_321(val, _values, result)
                          result = @def_level
                      @def_level = 0

                      @static_env.extend_static
                      @lexer.push_cmdarg

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1151)
  def _reduce_322(val, _values, result)
                          result = @builder.def_sclass(val[0], val[1], val[2],
                                                   val[5], val[6])

                      @lexer.pop_cmdarg
                      @static_env.unextend

                      @def_level = val[4]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1161)
  def _reduce_323(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1166)
  def _reduce_324(val, _values, result)
                          if in_def?
                        diagnostic :error, :module_in_def, nil, val[0]
                      end

                      result = @builder.def_module(val[0], val[1],
                                                   val[3], val[4])

                      @lexer.pop_cmdarg
                      @static_env.unextend

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1178)
  def _reduce_325(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1184)
  def _reduce_326(val, _values, result)
                          result = @builder.def_method(val[0], val[1],
                                  val[3], val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1193)
  def _reduce_327(val, _values, result)
                          @lexer.state = :expr_fname

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1197)
  def _reduce_328(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1203)
  def _reduce_329(val, _values, result)
                          result = @builder.def_singleton(val[0], val[1], val[2],
                                  val[4], val[6], val[7], val[8])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1212)
  def _reduce_330(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1216)
  def _reduce_331(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1220)
  def _reduce_332(val, _values, result)
                          result = @builder.keyword_cmd(:redo, val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1224)
  def _reduce_333(val, _values, result)
                          result = @builder.keyword_cmd(:retry, val[0])

    result
  end
.,.,

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

module_eval(<<'.,.,', 'ruby23.y', 1233)
  def _reduce_337(val, _values, result)
                          result = val[1]

    result
  end
.,.,

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

module_eval(<<'.,.,', 'ruby23.y', 1242)
  def _reduce_341(val, _values, result)
                          else_t, else_ = val[4]
                      result = [ val[0],
                                 @builder.condition(val[0], val[1], val[2],
                                                    val[3], else_t,
                                                    else_,  nil),
                               ]

    result
  end
.,.,

# reduce 342 omitted

module_eval(<<'.,.,', 'ruby23.y', 1253)
  def _reduce_343(val, _values, result)
                          result = val

    result
  end
.,.,

# reduce 344 omitted

# reduce 345 omitted

module_eval(<<'.,.,', 'ruby23.y', 1261)
  def _reduce_346(val, _values, result)
                          result = @builder.arg(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1265)
  def _reduce_347(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1270)
  def _reduce_348(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1274)
  def _reduce_349(val, _values, result)
                          result = val[0] << val[2]

    result
  end
.,.,

# reduce 350 omitted

module_eval(<<'.,.,', 'ruby23.y', 1280)
  def _reduce_351(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2], val[3]))

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1285)
  def _reduce_352(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2], val[3])).
                                  concat(val[5])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1291)
  def _reduce_353(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2]))

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1296)
  def _reduce_354(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2])).
                                  concat(val[4])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1302)
  def _reduce_355(val, _values, result)
                          result = [ @builder.restarg(val[0], val[1]) ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1306)
  def _reduce_356(val, _values, result)
                          result = [ @builder.restarg(val[0], val[1]),
                                 *val[3] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1311)
  def _reduce_357(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1315)
  def _reduce_358(val, _values, result)
                          result = [ @builder.restarg(val[0]),
                                 *val[2] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1321)
  def _reduce_359(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1325)
  def _reduce_360(val, _values, result)
                          result = val[0].concat(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1329)
  def _reduce_361(val, _values, result)
                          result = val[0].concat(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1333)
  def _reduce_362(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1339)
  def _reduce_363(val, _values, result)
                          result = val[1]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1343)
  def _reduce_364(val, _values, result)
                          result = []

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1348)
  def _reduce_365(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1355)
  def _reduce_366(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1363)
  def _reduce_367(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1369)
  def _reduce_368(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1376)
  def _reduce_369(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])

    result
  end
.,.,

# reduce 370 omitted

module_eval(<<'.,.,', 'ruby23.y', 1383)
  def _reduce_371(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1390)
  def _reduce_372(val, _values, result)
                          result = val[0].concat(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1394)
  def _reduce_373(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1400)
  def _reduce_374(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1407)
  def _reduce_375(val, _values, result)
                          result = val[0].
                                  concat(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1412)
  def _reduce_376(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1418)
  def _reduce_377(val, _values, result)
                          result = val[0].
                                  concat(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1423)
  def _reduce_378(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])

    result
  end
.,.,

# reduce 379 omitted

module_eval(<<'.,.,', 'ruby23.y', 1431)
  def _reduce_380(val, _values, result)
                          result = @builder.args(nil, [], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1435)
  def _reduce_381(val, _values, result)
                          @lexer.state = :expr_value

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1440)
  def _reduce_382(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1444)
  def _reduce_383(val, _values, result)
                          result = @builder.args(val[0], [], val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1448)
  def _reduce_384(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1453)
  def _reduce_385(val, _values, result)
                          result = []

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1457)
  def _reduce_386(val, _values, result)
                          result = val[2]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1462)
  def _reduce_387(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1466)
  def _reduce_388(val, _values, result)
                          result = val[0] << val[2]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1471)
  def _reduce_389(val, _values, result)
                          result = @builder.shadowarg(val[0])

    result
  end
.,.,

# reduce 390 omitted

module_eval(<<'.,.,', 'ruby23.y', 1476)
  def _reduce_391(val, _values, result)
                          @static_env.extend_dynamic

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1480)
  def _reduce_392(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1485)
  def _reduce_393(val, _values, result)
                          @lexer.cmdarg = val[2]
                      @lexer.cmdarg.lexpop

                      result = [ val[1], val[3] ]

                      @static_env.unextend

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1495)
  def _reduce_394(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1499)
  def _reduce_395(val, _values, result)
                          result = @builder.args(nil, val[0], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1504)
  def _reduce_396(val, _values, result)
                          result = [ val[0], val[1], val[2] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1508)
  def _reduce_397(val, _values, result)
                          result = [ val[0], val[1], val[2] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1513)
  def _reduce_398(val, _values, result)
                          @static_env.extend_dynamic

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1517)
  def _reduce_399(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1524)
  def _reduce_400(val, _values, result)
                          begin_t, block_args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, block_args, body, end_t)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1530)
  def _reduce_401(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1536)
  def _reduce_402(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      method_call = @builder.call_method(val[0], val[1], val[2],
                                      lparen_t, args, rparen_t)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1546)
  def _reduce_403(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                      nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1556)
  def _reduce_404(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.call_method(nil, nil, val[0],
                                  lparen_t, args, rparen_t)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1562)
  def _reduce_405(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1568)
  def _reduce_406(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1574)
  def _reduce_407(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1578)
  def _reduce_408(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1584)
  def _reduce_409(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1590)
  def _reduce_410(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.keyword_cmd(:super, val[0],
                                  lparen_t, args, rparen_t)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1596)
  def _reduce_411(val, _values, result)
                          result = @builder.keyword_cmd(:zsuper, val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1600)
  def _reduce_412(val, _values, result)
                          result = @builder.index(val[0], val[1], val[2], val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1605)
  def _reduce_413(val, _values, result)
                          @static_env.extend_dynamic

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1609)
  def _reduce_414(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1615)
  def _reduce_415(val, _values, result)
                          @static_env.extend_dynamic

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1619)
  def _reduce_416(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1626)
  def _reduce_417(val, _values, result)
                          result = [ @builder.when(val[0], val[1], val[2], val[3]),
                                 *val[4] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1632)
  def _reduce_418(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

# reduce 419 omitted

module_eval(<<'.,.,', 'ruby23.y', 1638)
  def _reduce_420(val, _values, result)
                          assoc_t, exc_var = val[2]

                      if val[1]
                        exc_list = @builder.array(nil, val[1], nil)
                      end

                      result = [ @builder.rescue_body(val[0],
                                      exc_list, assoc_t, exc_var,
                                      val[3], val[4]),
                                 *val[5] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1651)
  def _reduce_421(val, _values, result)
                          result = []

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1656)
  def _reduce_422(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

# reduce 423 omitted

# reduce 424 omitted

module_eval(<<'.,.,', 'ruby23.y', 1663)
  def _reduce_425(val, _values, result)
                          result = [ val[0], val[1] ]

    result
  end
.,.,

# reduce 426 omitted

module_eval(<<'.,.,', 'ruby23.y', 1669)
  def _reduce_427(val, _values, result)
                          result = [ val[0], val[1] ]

    result
  end
.,.,

# reduce 428 omitted

# reduce 429 omitted

# reduce 430 omitted

# reduce 431 omitted

module_eval(<<'.,.,', 'ruby23.y', 1679)
  def _reduce_432(val, _values, result)
                          result = @builder.string_compose(nil, val[0], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1684)
  def _reduce_433(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1688)
  def _reduce_434(val, _values, result)
                          result = val[0] << val[1]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1693)
  def _reduce_435(val, _values, result)
                          result = @builder.string_compose(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1697)
  def _reduce_436(val, _values, result)
                          result = @builder.string(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1701)
  def _reduce_437(val, _values, result)
                          result = @builder.character(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1706)
  def _reduce_438(val, _values, result)
                          result = @builder.xstring_compose(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1711)
  def _reduce_439(val, _values, result)
                          opts   = @builder.regexp_options(val[3])
                      result = @builder.regexp_compose(val[0], val[1], val[2], opts)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1717)
  def _reduce_440(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1722)
  def _reduce_441(val, _values, result)
                          result = []

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1726)
  def _reduce_442(val, _values, result)
                          result = val[0] << @builder.word(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1731)
  def _reduce_443(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1735)
  def _reduce_444(val, _values, result)
                          result = val[0] << val[1]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1740)
  def _reduce_445(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1745)
  def _reduce_446(val, _values, result)
                          result = []

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1749)
  def _reduce_447(val, _values, result)
                          result = val[0] << @builder.word(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1754)
  def _reduce_448(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1759)
  def _reduce_449(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1764)
  def _reduce_450(val, _values, result)
                          result = []

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1768)
  def _reduce_451(val, _values, result)
                          result = val[0] << @builder.string_internal(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1773)
  def _reduce_452(val, _values, result)
                          result = []

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1777)
  def _reduce_453(val, _values, result)
                          result = val[0] << @builder.symbol_internal(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1782)
  def _reduce_454(val, _values, result)
                          result = []

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1786)
  def _reduce_455(val, _values, result)
                          result = val[0] << val[1]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1791)
  def _reduce_456(val, _values, result)
                          result = []

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1795)
  def _reduce_457(val, _values, result)
                          result = val[0] << val[1]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1800)
  def _reduce_458(val, _values, result)
                          result = []

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1804)
  def _reduce_459(val, _values, result)
                          result = val[0] << val[1]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1809)
  def _reduce_460(val, _values, result)
                          result = @builder.string_internal(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1813)
  def _reduce_461(val, _values, result)
                          result = val[1]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1817)
  def _reduce_462(val, _values, result)
                          @lexer.cond.push(false)
                      @lexer.cmdarg.push(false)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1822)
  def _reduce_463(val, _values, result)
                          @lexer.cond.lexpop
                      @lexer.cmdarg.lexpop

                      result = @builder.begin(val[0], val[2], val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1830)
  def _reduce_464(val, _values, result)
                          result = @builder.gvar(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1834)
  def _reduce_465(val, _values, result)
                          result = @builder.ivar(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1838)
  def _reduce_466(val, _values, result)
                          result = @builder.cvar(val[0])

    result
  end
.,.,

# reduce 467 omitted

module_eval(<<'.,.,', 'ruby23.y', 1845)
  def _reduce_468(val, _values, result)
                          result = @builder.symbol(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1850)
  def _reduce_469(val, _values, result)
                          result = @builder.symbol_compose(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1855)
  def _reduce_470(val, _values, result)
                          result = val[0]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1859)
  def _reduce_471(val, _values, result)
                          result = @builder.negate(val[0], val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1864)
  def _reduce_472(val, _values, result)
                          result = @builder.integer(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1868)
  def _reduce_473(val, _values, result)
                          result = @builder.float(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1872)
  def _reduce_474(val, _values, result)
                          result = @builder.rational(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1876)
  def _reduce_475(val, _values, result)
                          result = @builder.complex(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1881)
  def _reduce_476(val, _values, result)
                          result = @builder.ident(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1885)
  def _reduce_477(val, _values, result)
                          result = @builder.ivar(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1889)
  def _reduce_478(val, _values, result)
                          result = @builder.gvar(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1893)
  def _reduce_479(val, _values, result)
                          result = @builder.const(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1897)
  def _reduce_480(val, _values, result)
                          result = @builder.cvar(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1902)
  def _reduce_481(val, _values, result)
                          result = @builder.nil(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1906)
  def _reduce_482(val, _values, result)
                          result = @builder.self(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1910)
  def _reduce_483(val, _values, result)
                          result = @builder.true(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1914)
  def _reduce_484(val, _values, result)
                          result = @builder.false(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1918)
  def _reduce_485(val, _values, result)
                          result = @builder.__FILE__(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1922)
  def _reduce_486(val, _values, result)
                          result = @builder.__LINE__(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1926)
  def _reduce_487(val, _values, result)
                          result = @builder.__ENCODING__(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1931)
  def _reduce_488(val, _values, result)
                          result = @builder.accessible(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1935)
  def _reduce_489(val, _values, result)
                          result = @builder.accessible(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1940)
  def _reduce_490(val, _values, result)
                          result = @builder.assignable(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1944)
  def _reduce_491(val, _values, result)
                          result = @builder.assignable(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1949)
  def _reduce_492(val, _values, result)
                          result = @builder.nth_ref(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1953)
  def _reduce_493(val, _values, result)
                          result = @builder.back_ref(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1958)
  def _reduce_494(val, _values, result)
                          result = nil

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1962)
  def _reduce_495(val, _values, result)
                          @lexer.state = :expr_value

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1966)
  def _reduce_496(val, _values, result)
                          result = [ val[0], val[2] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1970)
  def _reduce_497(val, _values, result)
                          yyerrok
                      result = nil

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1976)
  def _reduce_498(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])

                      @lexer.state = :expr_value

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1981)
  def _reduce_499(val, _values, result)
                          result = @lexer.in_kwarg
                      @lexer.in_kwarg = true

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1986)
  def _reduce_500(val, _values, result)
                          @lexer.in_kwarg = val[0]
                      result = @builder.args(nil, val[1], nil)

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1992)
  def _reduce_501(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 1996)
  def _reduce_502(val, _values, result)
                          result = val[0].concat(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2000)
  def _reduce_503(val, _values, result)
                          result = val[0].concat(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2004)
  def _reduce_504(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2009)
  def _reduce_505(val, _values, result)
                          result = val[1]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2013)
  def _reduce_506(val, _values, result)
                          result = []

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2018)
  def _reduce_507(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2025)
  def _reduce_508(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2033)
  def _reduce_509(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2039)
  def _reduce_510(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2046)
  def _reduce_511(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2052)
  def _reduce_512(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2059)
  def _reduce_513(val, _values, result)
                          result = val[0].
                                  concat(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2064)
  def _reduce_514(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2070)
  def _reduce_515(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2077)
  def _reduce_516(val, _values, result)
                          result = val[0].
                                  concat(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2082)
  def _reduce_517(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2088)
  def _reduce_518(val, _values, result)
                          result = val[0].
                                  concat(val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2093)
  def _reduce_519(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2099)
  def _reduce_520(val, _values, result)
                          result = val[0]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2103)
  def _reduce_521(val, _values, result)
                          result = []

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2108)
  def _reduce_522(val, _values, result)
                          diagnostic :error, :argument_const, nil, val[0]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2112)
  def _reduce_523(val, _values, result)
                          diagnostic :error, :argument_ivar, nil, val[0]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2116)
  def _reduce_524(val, _values, result)
                          diagnostic :error, :argument_gvar, nil, val[0]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2120)
  def _reduce_525(val, _values, result)
                          diagnostic :error, :argument_cvar, nil, val[0]

    result
  end
.,.,

# reduce 526 omitted

module_eval(<<'.,.,', 'ruby23.y', 2126)
  def _reduce_527(val, _values, result)
                          @static_env.declare val[0][0]

                      result = val[0]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2133)
  def _reduce_528(val, _values, result)
                          result = val[0]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2138)
  def _reduce_529(val, _values, result)
                          result = @builder.arg(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2142)
  def _reduce_530(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2147)
  def _reduce_531(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2151)
  def _reduce_532(val, _values, result)
                          result = val[0] << val[2]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2156)
  def _reduce_533(val, _values, result)
                          check_kwarg_name(val[0])

                      @static_env.declare val[0][0]

                      result = val[0]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2165)
  def _reduce_534(val, _values, result)
                          result = @builder.kwoptarg(val[0], val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2169)
  def _reduce_535(val, _values, result)
                          result = @builder.kwarg(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2174)
  def _reduce_536(val, _values, result)
                          result = @builder.kwoptarg(val[0], val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2178)
  def _reduce_537(val, _values, result)
                          result = @builder.kwarg(val[0])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2183)
  def _reduce_538(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2187)
  def _reduce_539(val, _values, result)
                          result = val[0] << val[2]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2192)
  def _reduce_540(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2196)
  def _reduce_541(val, _values, result)
                          result = val[0] << val[2]

    result
  end
.,.,

# reduce 542 omitted

# reduce 543 omitted

module_eval(<<'.,.,', 'ruby23.y', 2203)
  def _reduce_544(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.kwrestarg(val[0], val[1]) ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2209)
  def _reduce_545(val, _values, result)
                          result = [ @builder.kwrestarg(val[0]) ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2214)
  def _reduce_546(val, _values, result)
                          result = @builder.optarg(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2219)
  def _reduce_547(val, _values, result)
                          result = @builder.optarg(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2224)
  def _reduce_548(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2228)
  def _reduce_549(val, _values, result)
                          result = val[0] << val[2]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2233)
  def _reduce_550(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2237)
  def _reduce_551(val, _values, result)
                          result = val[0] << val[2]

    result
  end
.,.,

# reduce 552 omitted

# reduce 553 omitted

module_eval(<<'.,.,', 'ruby23.y', 2244)
  def _reduce_554(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2250)
  def _reduce_555(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]

    result
  end
.,.,

# reduce 556 omitted

# reduce 557 omitted

module_eval(<<'.,.,', 'ruby23.y', 2257)
  def _reduce_558(val, _values, result)
                          @static_env.declare val[1][0]

                      result = @builder.blockarg(val[0], val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2264)
  def _reduce_559(val, _values, result)
                          result = [ val[1] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2268)
  def _reduce_560(val, _values, result)
                          result = []

    result
  end
.,.,

# reduce 561 omitted

module_eval(<<'.,.,', 'ruby23.y', 2274)
  def _reduce_562(val, _values, result)
                          result = val[1]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2279)
  def _reduce_563(val, _values, result)
                          result = []

    result
  end
.,.,

# reduce 564 omitted

module_eval(<<'.,.,', 'ruby23.y', 2285)
  def _reduce_565(val, _values, result)
                          result = [ val[0] ]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2289)
  def _reduce_566(val, _values, result)
                          result = val[0] << val[2]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2294)
  def _reduce_567(val, _values, result)
                          result = @builder.pair(val[0], val[1], val[2])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2298)
  def _reduce_568(val, _values, result)
                          result = @builder.pair_keyword(val[0], val[1])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2302)
  def _reduce_569(val, _values, result)
                          result = @builder.pair_quoted(val[0], val[1], val[2], val[3])

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2306)
  def _reduce_570(val, _values, result)
                          result = @builder.kwsplat(val[0], val[1])

    result
  end
.,.,

# reduce 571 omitted

# reduce 572 omitted

# reduce 573 omitted

# reduce 574 omitted

# reduce 575 omitted

# reduce 576 omitted

# reduce 577 omitted

# reduce 578 omitted

# reduce 579 omitted

# reduce 580 omitted

# reduce 581 omitted

# reduce 582 omitted

module_eval(<<'.,.,', 'ruby23.y', 2315)
  def _reduce_583(val, _values, result)
                          result = [:dot, val[0][1]]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2319)
  def _reduce_584(val, _values, result)
                          result = [:anddot, val[0][1]]

    result
  end
.,.,

# reduce 585 omitted

# reduce 586 omitted

# reduce 587 omitted

# reduce 588 omitted

module_eval(<<'.,.,', 'ruby23.y', 2325)
  def _reduce_589(val, _values, result)
                          result = val[1]

    result
  end
.,.,

module_eval(<<'.,.,', 'ruby23.y', 2329)
  def _reduce_590(val, _values, result)
                          result = val[1]

    result
  end
.,.,

# reduce 591 omitted

# reduce 592 omitted

# reduce 593 omitted

module_eval(<<'.,.,', 'ruby23.y', 2335)
  def _reduce_594(val, _values, result)
                        yyerrok

    result
  end
.,.,

# reduce 595 omitted

# reduce 596 omitted

# reduce 597 omitted

module_eval(<<'.,.,', 'ruby23.y', 2344)
  def _reduce_598(val, _values, result)
                        result = nil

    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Ruby23
  end   # module Parser
