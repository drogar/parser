# -*- encoding:utf-8; warn-indent:false -*-
#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


if respond_to? :require_relative
  require_relative './../parser'
else
  require 'parser'
end

Parser.check_for_encoding_support

module Parser
  class Ruby19 < Parser::Base

module_eval(<<'...end ruby19.y/module_eval...', 'ruby19.y', 2145)

  def version
    19
  end

  def default_encoding
    Encoding::BINARY
  end
...end ruby19.y/module_eval...
##### State transition tables begin ###

clist = [
'-281,278,66,67,68,9,54,-281,-281,-281,60,61,-281,-281,-281,64,-281,62',
'63,65,29,30,69,70,209,258,-281,-281,-281,28,27,26,93,92,94,95,-281,-281',
'19,-281,-281,-281,-281,-281,8,44,542,10,97,96,98,87,53,89,88,90,563',
'91,99,100,542,85,86,542,41,42,40,-281,-281,-281,-281,-281,-281,-281',
'-281,-281,-281,-281,-281,-281,-281,209,-90,-281,-281,-281,39,744,-281',
'32,-101,-281,55,56,-281,-281,57,-281,34,-281,788,-281,43,-281,-281,-281',
'-281,-281,-281,-281,20,-281,257,-281,-96,84,76,79,80,105,81,82,584,688',
'104,77,83,-281,-281,-281,-281,-528,-281,59,-281,78,-102,-98,-528,-528',
'-528,-103,208,-528,-528,-528,817,-528,742,-90,688,205,206,542,205,206',
'-528,-528,-528,-528,665,105,562,-82,799,-101,104,-528,-528,-68,-528',
'-528,-528,-528,-528,105,-100,-99,105,209,104,-92,105,104,498,-90,583',
'104,-90,-97,258,542,205,206,-90,-98,-92,-101,-528,-528,-528,-528,-528',
'-528,-528,-528,-528,-528,-528,-528,-528,-528,-98,688,-528,-528,-528',
'-104,743,-528,-87,-99,-528,-464,105,-528,-528,-94,-528,104,-528,638',
'-528,-103,-528,-528,-528,-528,-528,-528,-528,209,-528,-528,-528,105',
'-100,-94,-92,-102,104,105,-98,649,-524,253,104,-98,-528,-528,-528,-528',
'-450,-528,203,-528,664,-100,105,-450,-450,-450,-96,104,-450,-450,-450',
'257,-450,727,-101,205,206,209,-92,-101,-450,-92,-450,-450,-450,-100',
'-99,-92,-465,-88,-100,-99,-450,-450,656,-450,-450,-450,-450,-450,105',
'-95,205,206,619,104,-524,-104,105,-525,258,619,-89,104,573,511,-89,-95',
'513,498,-394,-90,-98,-450,-450,-450,-450,-450,-450,-450,-450,-450,-450',
'-450,-450,-450,-450,-97,618,-450,-450,-450,428,-450,-450,618,-91,-450',
'798,-93,-450,-450,-522,-450,554,-450,-82,-450,555,-450,-450,-450,-450',
'-450,-450,-450,209,-450,-103,-450,741,209,229,-394,573,253,575,574,576',
'209,-394,-521,-528,-450,-450,-450,-450,-453,-450,-394,-450,-104,-450',
'209,-453,-453,-453,257,619,-453,-453,-453,656,-453,226,-453,619,-394',
'228,227,209,-453,-453,-453,-453,-453,229,-522,-457,-99,-528,-453,209',
'-453,-453,-457,-453,-453,-453,-453,-453,-456,618,229,-450,-528,575,574',
'-456,-522,618,-450,-528,229,105,720,-521,-524,226,104,-450,-528,228',
'227,-453,-453,-453,-453,-453,-453,-453,-453,-453,-453,-453,-453,-453',
'-453,-521,-528,-453,-453,-453,-528,-453,-453,-453,-465,-453,573,-528',
'-453,-453,-453,-453,-524,-453,229,-453,-528,-453,-453,-453,-453,-453',
'-453,-453,-281,-453,76,-453,597,-455,209,-281,-281,-281,-528,77,-455',
'-281,-281,229,-281,-453,-453,-453,-453,78,-453,-88,-453,-460,-453,250',
'-450,-97,511,568,-460,510,251,-450,-281,-281,569,-281,-281,-281,-281',
'-281,575,574,571,-90,754,424,526,525,524,-99,527,679,425,526,525,524',
'679,527,526,525,524,426,527,-281,-281,-281,-281,-281,-281,-281,-281',
'-281,-281,-281,-281,-281,-281,573,598,-281,-281,-281,531,602,105,493',
'494,-281,573,104,-281,535,534,538,537,-281,573,-281,753,-281,-281,-281',
'-281,-281,-281,-281,-528,-281,807,-281,-458,-459,-464,-528,-528,-528',
'609,-458,-459,-528,-528,-92,-528,-281,-281,753,-93,-101,-281,-461,790',
'-528,-102,229,606,897,-461,-463,667,575,574,585,-528,-528,-463,-528',
'-528,-528,-528,-528,575,574,580,-463,511,-87,253,513,575,574,578,-96',
'714,715,596,226,716,99,100,228,227,224,225,-528,-528,-528,-528,-528',
'-528,-528,-528,-528,-528,-528,-528,-528,-528,205,206,-528,-528,-528',
'679,603,526,525,524,-528,527,105,-528,105,-262,105,104,-528,104,-528',
'104,-528,-528,-528,-528,-528,-528,-528,595,-528,-528,-528,754,489,526',
'525,524,-274,527,656,490,548,675,209,-274,-528,-528,591,-91,488,-528',
'859,816,-274,-100,278,66,67,68,9,54,381,794,656,60,61,383,382,-260,64',
'531,62,63,65,29,30,69,70,589,535,534,538,537,28,27,26,93,92,94,95,586',
'829,19,526,525,524,669,527,8,44,229,10,97,96,98,87,53,89,88,90,209,91',
'99,100,511,85,86,513,41,42,40,771,679,-260,526,525,524,679,527,526,525',
'524,226,527,672,-462,228,227,224,225,39,767,-462,32,205,206,55,56,304',
'305,57,-462,34,794,656,679,43,526,525,524,675,527,673,229,20,531,819',
'821,824,84,76,79,80,825,81,82,538,537,753,77,83,278,66,67,68,9,54,59',
'229,78,60,61,831,531,832,64,681,62,63,65,29,30,69,70,538,537,834,835',
'649,28,27,26,93,92,94,95,682,829,19,526,525,524,649,527,8,44,553,10',
'97,96,98,87,53,89,88,90,552,91,99,100,844,85,86,845,41,42,40,846,679',
'209,526,525,524,679,527,526,525,524,848,527,851,679,853,526,525,524',
'39,527,855,32,855,209,55,56,373,860,57,548,34,862,253,679,43,526,525',
'524,675,527,864,684,20,531,475,548,515,84,76,79,80,675,81,82,538,537',
'514,77,83,278,66,67,68,9,54,59,253,78,60,61,870,531,691,64,872,62,63',
'65,29,30,69,70,538,537,209,875,-263,28,27,26,93,92,94,95,507,506,19',
'108,109,110,111,112,8,44,229,10,97,96,98,87,53,89,88,90,500,91,99,100',
'499,85,86,495,41,42,40,209,679,882,526,525,524,679,527,526,525,524,883',
'527,253,679,886,526,525,524,39,527,209,32,262,491,55,56,484,891,57,483',
'34,209,-67,679,43,526,525,524,675,527,649,719,20,531,475,473,899,84',
'76,79,80,675,81,82,538,537,471,77,83,278,66,67,68,9,54,59,901,78,60',
'61,902,531,475,64,907,62,63,65,29,30,69,70,538,537,462,909,912,28,27',
'26,93,92,94,95,914,855,19,855,473,208,919,607,8,44,506,10,97,96,98,87',
'53,89,88,90,430,91,99,100,429,85,86,427,41,42,40,229,233,238,239,240',
'235,237,245,246,241,242,-463,222,223,501,384,243,244,-463,39,927,502',
'32,855,855,55,56,-463,855,57,426,34,226,931,232,43,228,227,224,225,236',
'234,230,20,231,722,899,371,84,76,79,80,209,81,82,504,303,-462,77,83',
'302,247,-275,-237,-462,-261,59,248,78,-275,-275,-275,728,-462,-275,-275',
'-275,529,-275,526,525,524,209,527,-281,204,199,198,-275,-275,-275,-281',
'197,113,462,899,-525,462,-275,-275,-281,-275,-275,-275,-275,-275,-282',
'108,109,110,111,112,946,-282,947,531,949,679,855,526,525,524,-282,527',
'535,534,538,537,855,-275,-275,-275,-275,-275,-275,-275,-275,-275,-275',
'-275,-275,-275,-275,855,889,-275,-275,-275,-525,-524,-275,890,746,-275',
'855,675,-275,-275,899,-275,888,-275,101,-275,678,-275,-275,-275,-275',
'-275,-275,-275,550,-275,529,-275,526,525,524,551,527,108,109,110,111',
'112,855,,549,-275,-275,-275,-275,,-275,,-275,278,66,67,68,9,54,,,,60',
'61,,,,64,531,62,63,65,29,30,69,70,,535,534,538,537,28,27,26,93,92,94',
'95,,,19,108,109,110,111,112,8,44,,10,97,96,98,87,53,89,88,90,-274,91',
'99,100,,85,86,-274,41,42,40,,,,,-281,-274,679,558,526,525,524,-281,527',
',918,,-525,201,,39,-281,,32,559,202,55,56,,,57,,34,,200,679,43,526,525',
'524,,527,,,20,531,,,,84,76,79,80,,81,82,538,537,,77,83,278,66,67,68',
'9,54,59,,78,60,61,,531,,64,,62,63,65,29,30,69,70,538,537,,,,28,27,26',
'93,92,94,95,,,19,,,,,592,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,,41,42,40,229,233,238,239,240,235,237,245,246,241,242,-281,222',
'223,558,,243,244,-281,39,,557,32,-525,,55,56,-281,,57,559,34,226,,232',
'43,228,227,224,225,236,234,230,20,231,,,,84,76,79,80,,81,82,,-282,-324',
'77,83,,247,-530,-282,-324,,59,,78,-530,-530,-530,-282,-324,-530,-530',
'-530,529,-530,526,525,524,,527,-282,,,-530,-530,-530,-530,-282,,,,,',
',-530,-530,-282,-530,-530,-530,-530,-530,,,,,,,,,,531,709,679,,526,525',
'524,,527,535,534,538,537,,-530,-530,-530,-530,-530,-530,-530,-530,-530',
'-530,-530,-530,-530,-530,,,-530,-530,-530,,,-530,,,-530,,675,-530,-530',
',-530,,-530,,-530,678,-530,-530,-530,-530,-530,-530,-530,-529,-530,-530',
'-530,,,,-529,-529,-529,,,-529,-529,-529,229,-529,-530,-530,-530,-530',
',-530,,-530,-529,-529,-529,-529,,,243,244,,,,-529,-529,,-529,-529,-529',
'-529,-529,,,,226,,232,,228,227,224,225,,,230,,231,,,,,,,,-529,-529,-529',
'-529,-529,-529,-529,-529,-529,-529,-529,-529,-529,-529,,,-529,-529,-529',
',,-529,,,-529,,,-529,-529,,-529,,-529,,-529,,-529,-529,-529,-529,-529',
'-529,-529,,-529,-529,-529,,,,,,,,,,,,,,-529,-529,-529,-529,,-529,,-529',
'278,66,67,68,9,54,,,,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26',
'93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,,41,42,40,229,,,,,,679,,526,525,524,,527,,,,243,244,,39,,,32,,,55',
'56,,,57,,34,226,,232,43,228,227,224,225,,,,20,531,,,,84,76,79,80,,81',
'82,538,537,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29',
'30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53',
'89,88,90,,91,99,100,,85,86,,41,42,40,229,233,238,239,240,235,237,245',
',241,242,,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228,227',
'224,225,236,234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66,67',
'68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92',
'94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,',
'41,42,40,229,233,238,239,240,235,237,245,246,241,242,,-547,-547,,,243',
'244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228,227,224,225,236,234,230',
'20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61',
',,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44',
',10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,229,-547,-547',
'-547,-547,235,237,,,-547,-547,,,,,,243,244,,39,,,32,,,55,56,,,57,,34',
'226,,232,43,228,227,224,225,236,234,230,20,231,,,,84,76,79,80,,81,82',
',,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70',
',,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90',
',91,99,100,,85,86,,41,42,40,229,,,,,,,,,,,,,,,,243,244,,39,,,32,,,55',
'56,,,57,,34,226,,232,43,228,227,224,225,,,230,20,231,,,,84,76,79,80',
',81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30',
'69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,,41,42,40,229,,,,,,,,,,,,,,,,243,244,,39,,,32',
',,55,56,,,57,,34,226,,232,43,228,227,224,225,,,230,20,231,,,,84,76,79',
'80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29',
'30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53',
'89,88,90,,91,99,100,,85,86,,41,42,40,229,233,238,239,240,235,237,,,241',
'242,,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228,227,224,225',
'236,234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40',
'229,-547,-547,-547,-547,235,237,,,-547,-547,,,,,,243,244,,39,,,32,,',
'55,56,,,57,,34,226,,232,43,228,227,224,225,236,234,230,20,231,,,,84',
'76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,,41,42,40,229,-547,-547,-547,-547,235',
'237,,,-547,-547,,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228',
'227,224,225,236,234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66',
'67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93',
'92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86',
',41,42,40,229,-547,-547,-547,-547,235,237,,,-547,-547,,,,,,243,244,',
'39,,,32,,,55,56,,,57,,34,226,,232,43,228,227,224,225,236,234,230,20',
'231,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,',
',64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,',
'10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,229,233,238,239',
'240,235,237,245,246,241,242,,-547,-547,,,243,244,,39,,,280,,,55,56,',
',57,,34,226,,232,43,228,227,224,225,236,234,230,20,231,,,,84,76,79,80',
',81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30',
'69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,,41,42,40,229,-547,-547,-547,-547,235,237,,',
'-547,-547,,,,,,243,244,,39,,,280,,,55,56,,,57,,34,226,,232,43,228,227',
'224,225,236,234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66,67',
'68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92',
'94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,',
'41,42,40,229,-547,-547,-547,-547,235,237,,,-547,-547,,,,,,243,244,,39',
',,280,,,55,56,,,57,,34,226,,232,43,228,227,224,225,236,234,230,20,231',
',,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64',
',62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,229,,,,,,,,,,,,,,,',
'243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228,227,224,225,,,230',
'20,231,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61',
',,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44',
',10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,229,,,,,,,,',
',,,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,232,43,228,227,224,225',
',,,20,,,,,84,76,79,80,,81,82,,,,77,83,5,66,67,68,9,54,59,,78,60,61,',
',,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44',
'7,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,229,,,,,,,',
',,,,,,,,243,244,,39,,,32,,,55,56,,,57,,34,226,,,43,228,227,224,225,',
',,20,,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61',
',,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44',
',10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,',
',,,,,,,39,,,32,,,55,56,,,57,,34,,,,43,,,,,,,,20,,,,,84,76,79,80,,81',
'82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69',
'70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,39,,,32,,,55,56,,',
'57,,34,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68',
'9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94',
'95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41',
'42,40,,,,,,,,,,,,,,,,,,,,39,,,32,,,55,56,,,57,,34,,,,43,,,,,,,,20,,',
',,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78,60,61,,,,64,',
'62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,',
'39,,,32,,,55,56,,,57,,34,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77',
'83,278,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28',
'27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99',
'100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,39,,,32,,,55,56,,,57,,34,,,',
'43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,278,66,67,68,9,54,59,,78',
'60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,',
',,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,',
',,,,,,,,,,,,,,39,,,32,,,55,56,,,57,,34,,,,43,,,,,,,,20,,,,,84,76,79',
'80,,81,82,,,,77,83,5,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30',
'69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,7,10,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,39,,,32,,,55,56',
',,57,,34,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,',
'54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92',
'94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86',
',41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,269,,43,,,,,',
',,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,',
'64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,',
'44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,',
',,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81',
'82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70',
',,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90',
'273,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,271,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68',
',54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92',
'94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86',
',41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219',
',,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,',
'214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,',
'77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28',
'27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,',
',,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44',
',,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,',
',,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82',
',,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,',
',28,27,26,93,92,94,95,,,19,,,,,607,,44,,,97,96,98,87,53,89,88,90,,91',
'99,100,,85,86,,41,42,40,229,233,238,239,240,235,237,245,246,241,242',
',222,223,,,243,244,,214,,,220,,,55,56,,,57,,,226,,232,43,228,227,224',
'225,236,234,230,20,231,,,,84,76,79,80,,81,82,,,,77,83,105,247,,,,104',
'59,,78,66,67,68,,54,,,,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291',
'292,298,93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89,88,90,,91,99',
'100,,85,86,,,,299,,,,,,,,,,,,,,,,,,,,335,,,32,,,55,56,,,57,,34,,,,,',
'529,,526,525,524,,527,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,531,62,63,65,295,296,69,70,,535,534,538,537,291,292',
'298,93,92,94,95,,,221,,,,,,,293,,,97,96,98,340,53,89,88,341,,91,99,100',
',85,86,,,,299,,,,,,,,,,,,,,,,,347,,,342,,,220,,,55,56,,,57,,,,,,,,529',
',526,525,524,,527,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,',
'78,60,61,,,,64,531,62,63,65,295,296,69,70,,535,534,538,537,291,292,298',
'93,92,94,95,,,221,,,,,,,293,,,97,96,98,340,53,89,88,341,,91,99,100,',
'85,86,,,,299,,,,,,,,,,,,,,,,,,,,342,,,220,,,55,56,,,57,,,,,,,,529,,526',
'525,524,,527,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60',
'61,,,,64,531,62,63,65,29,30,69,70,,535,534,538,537,28,27,26,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87',
'53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66',
'67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298',
'93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,',
',,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,',
'64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,',
'44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,',
',,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81',
'82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,',
',,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91',
'99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,',
',,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,9,54,59,',
'78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19',
',,,,,8,44,7,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,229',
'233,238,239,240,235,237,245,246,241,242,,222,223,,,243,244,,39,,,32',
',,55,56,,,57,,34,226,,232,43,228,227,224,225,236,234,230,20,231,,,,84',
'76,79,80,,81,82,,,,77,83,,247,,,,373,59,,78,66,67,68,,54,,,,60,61,,',
',64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,',
'97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,',
',,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,',
',,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,',
'28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99',
'100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,',
'43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60',
'61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,',
'44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,',
',,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81',
'82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,',
',,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91',
'99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,',
',,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,9,54,59,,78',
'60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,',
',,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,',
',,,,,,,,,,,,,,39,,,32,,,55,56,,,57,,34,,,,43,,,,,,,,20,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30',
'69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87',
'53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66',
'67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93',
'92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86',
',41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219',
',,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,',
'220,,,55,56,,,57,,389,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77',
'83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27',
'26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,',
'85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44',
',,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,,41,42,40,,,,,,,,,,,',
',,,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296',
'69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89',
'88,90,273,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,',
'55,56,,,57,,,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66',
'67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298',
'93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,',
'85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,633,,269',
',43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78',
'60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,',
',,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,',
',,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69',
'70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90',
',91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57',
',389,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,',
',,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76',
'79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29',
'30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55',
'56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68',
',54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94',
'95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84',
'76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65',
'29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53',
'89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,',
'55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,209,66',
'67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298',
'93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,',
',,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,',
'64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,',
'44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,',
',,,,,,,,214,,,220,,,55,56,,,57,,725,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69',
'70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,7,10,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,39,,,32,,,55,56,,',
'57,,34,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',19,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,',
',,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76',
'79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295',
'296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87',
'53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66',
'67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298',
'93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89,88,90,,91,99,100,,85',
'86,,,,299,,,,,,,,,,,,,,,,,,,,289,,,285,,,55,56,,,57,,,,,,,,754,,526',
'525,524,,527,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60',
'61,,,,64,531,62,63,65,29,30,69,70,,535,534,538,537,28,27,26,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,,41',
'42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,',
',219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64',
',62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44',
',,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,',
',,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82',
',,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,',
',28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99',
'100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,',
'43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60',
'61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,',
'44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,',
',,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81',
'82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70',
',,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90',
',91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57',
',,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59',
',78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95',
',,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40',
',,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84',
'76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65',
'295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,',
'220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,',
',,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,',
',,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,',
',,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,',
',,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,',
',,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,',
',,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,',
',,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,',
',,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96',
'98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214',
',,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292',
'298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100',
',85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,',
',,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,',
',,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,',
',221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219',
',,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,',
'220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,',
'66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26',
'93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,',
'85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269',
',43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78',
'60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,',
',,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85,86,,41,42,40,,,,',
',,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84',
'76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65',
'29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53',
'89,88,90,273,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83',
',66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26',
'93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,',
'85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269',
',43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,209,66,67,68,,54,59,',
'78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95',
',,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40',
',,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87',
'53,89,88,90,273,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,',
'220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,',
'77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,',
'291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91',
'99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,',
',,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78',
'60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221',
',,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,',
',,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296',
'69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55',
'56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68',
',54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92',
'94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41',
'42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,',
',,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,',
'214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,',
'77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,',
'291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91',
'99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,',
',,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78',
'60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221',
',,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,',
',,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,9,54,59,,78,60,61,,,,64,,62,63,65,29,30',
'69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,8,44,,10,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,39,,,32,,,55,56',
',,57,,34,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,',
'54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92',
'94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41',
'42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,',
',,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62',
'63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97',
'96,98,87,53,89,88,90,,91,99,100,,85,86,,,,299,229,233,238,239,240,235',
'237,245,246,241,242,,222,223,,,243,244,,289,,,220,,,55,56,,,57,,,226',
',232,,228,227,224,225,236,234,230,,231,,,,84,76,79,80,,81,82,,,,77,83',
',247,,301,,,59,,78,66,67,68,,54,,,,60,61,,,,64,,62,63,65,295,296,69',
'70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,,,,299,,,,,,,,,,,,,,,,,,,,289,,,285,,,55,56',
',,57,,,,,,,,754,,526,525,524,,527,,,,,84,76,79,80,,81,82,,,,77,83,,66',
'67,68,,54,59,,78,60,61,,,,64,531,62,63,65,295,296,69,70,,535,534,538',
'537,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90',
',91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57',
',,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59',
',78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95',
',,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40',
',,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84',
'76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65',
'295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97,96,98',
'87,53,89,88,90,,91,99,100,,85,86,,,,299,229,233,238,239,240,235,237',
'245,246,241,242,,222,223,,,243,244,,289,,,220,,,55,56,,,57,,,226,,232',
',228,227,224,225,236,234,230,,231,,,,84,76,79,80,,81,82,,,,77,83,,247',
',486,,,59,,78,66,67,68,,54,,,,60,61,,,,64,,62,63,65,295,296,69,70,,',
',,,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89,88,90',
',91,99,100,,85,86,,,,299,,,,,,,,,,,,,,,,,,,,289,,,285,,,55,56,,,57,',
'284,,,,,,,,,,,,,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78',
'60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221',
',,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,',
',,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296',
'69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89',
'88,90,273,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,',
'55,56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67',
'68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93',
'92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85',
'86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,633,,,,43,,',
',,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,',
',,,,,,,,,,,214,,,220,,,55,56,,,57,,389,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30',
'69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88',
'90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56',
',,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87',
'53,89,88,90,273,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,',
'220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,',
'77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,',
'291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91',
'99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,',
',,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78',
'60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221',
',,,,,,293,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,,,299,,,,,,,',
',,,,,,,,,,,,885,,,220,,,55,56,,,57,,,,,,,,,,,,,,,,,,,84,76,79,80,,81',
'82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70',
',,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90',
',91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57',
',,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59',
',78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95',
',,221,,,,,,,293,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,,,299,',
',,,,,,,,,,,,,,,,,,289,,,285,,,55,56,,,57,,,,,,,,,,,,,,,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296',
'69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53',
'89,88,90,,91,99,100,,85,86,,,,299,,,,,,,,,,,,,,,,,,,,289,,,285,,,55',
'56,,,57,,,,,,,,,,,,,,,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54',
'59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94',
'95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42',
'40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87',
'53,89,88,90,273,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,',
'220,,,55,56,,,57,,271,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,',
'77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,',
'291,292,298,93,92,94,95,,,221,,,,,,,293,,,97,96,98,87,53,89,88,90,,91',
'99,100,,85,86,,,,299,,,,,,,,,,,,,,,,,,,,289,,,285,,,55,56,,,57,,,,,',
',,,,,,,,,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44',
',,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,',
',,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82',
',,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,',
',,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90',
',91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57',
',,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59',
',78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95',
',,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40',
',,,,,,,,,,,,,,,,,,,214,,,220,504,,55,56,,,57,,,,,,43,,,,,,,,219,,,,',
'84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63',
'65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87',
'53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220',
',,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67',
'68,,54,59,,78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93',
'92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85',
'86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,633,,269,,43',
',,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44',
',,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,',
',,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82',
',,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,',
',28,27,26,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91',
'99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271',
',269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59',
',78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95',
',,221,,,,,,,293,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,,,299,',
',,,,,,,,,,,,,,,,,,841,,,220,,,55,56,,,57,,,,,,,,,,,,,,,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296',
'69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89',
'88,90,273,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,',
'55,56,,,57,,,,269,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66',
'67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93',
'92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89,88,90,273,91,99,100,,85',
'86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57,,271,,269,,43',
',,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61',
',,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95,,,221,,,',
',,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,',
',,,,,,,,,,,214,,,220,,,55,56,,,57,,633,,,,43,,,,,,,,219,,,,,84,76,79',
'80,,81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,295,296',
'69,70,,,,,,291,292,298,93,92,94,95,,,221,,,,,,,44,,,97,96,98,87,53,89',
'88,90,,91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55',
'56,,,57,,,,,,43,,,,,,,,219,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68',
'9,54,59,,78,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94',
'95,,,19,,,,,,8,44,,10,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41',
'42,40,229,233,238,239,240,235,237,245,246,241,242,,222,223,,,243,244',
',39,,,32,,,55,56,,,57,,34,226,,232,43,228,227,224,225,236,234,230,20',
'231,,,,84,76,79,80,,81,82,,,,77,83,,247,,,,373,59,,78,66,67,68,,54,',
',,60,61,,,,64,,62,63,65,29,30,69,70,,,,,,28,27,26,93,92,94,95,,,19,',
',,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40,,,,,,',
',,,,,,,,,,,,,214,,,220,,,55,56,,,57,,,,,,43,,,,,,,,20,,,,,84,76,79,80',
',81,82,,,,77,83,,66,67,68,,54,59,,78,60,61,,,,64,,62,63,65,29,30,69',
'70,,,,,,28,27,26,93,92,94,95,,,19,,,,,,,44,,,97,96,98,87,53,89,88,90',
',91,99,100,,85,86,,41,42,40,,,,,,,,,,,,,,,,,,,,214,,,220,,,55,56,,,57',
',,,,,43,,,,,,,,20,,,,,84,76,79,80,,81,82,,,,77,83,,66,67,68,,54,59,',
'78,60,61,,,,64,,62,63,65,295,296,69,70,,,,,,291,292,298,93,92,94,95',
',,221,,,,,,,44,,,97,96,98,87,53,89,88,90,,91,99,100,,85,86,,41,42,40',
'229,233,238,239,240,235,237,245,246,241,242,,222,223,,,243,244,,214',
',,220,,,55,56,,,57,,,226,,232,43,228,227,224,225,236,234,230,219,231',
',,,84,76,79,80,,81,82,,,,77,83,,247,-243,,,,59,,78,-243,-243,-243,,',
'-243,-243,-243,529,-243,526,525,524,,527,,,,,-243,,,,,,,,,,-243,-243',
',-243,-243,-243,-243,-243,,,,,,,,,,531,518,,,,,,,,535,534,538,537,,-243',
',,,,,,-243,-243,-243,,-243,-243,-243,-243,,-243,,-243,,,,,253,-243,-243',
'-243,-243,,,,,,,,,-243,-243,,-243,-243,-243,-243,-243,,,-243,,,,,,,',
',,,,,,-243,,,,,-243,,-243,-243,-243,-243,-243,-243,-243,-243,-243,-243',
'-243,-243,-243,-243,,,-243,-243,-243,,,-243,,253,-243,,,-243,-243,,-243',
',-243,,-243,,-243,-243,-243,-243,-243,-243,-243,-393,-243,-243,-243',
',,,-393,-393,-393,,,-393,-393,-393,,-393,-243,-243,,-243,,-243,,,-393',
'-393,-393,,,,,,,,,-393,-393,,-393,-393,-393,-393,-393,,,,,,,,,,,,,,',
',,,,,,,,,-393,-393,-393,-393,-393,-393,-393,-393,-393,-393,-393,-393',
'-393,-393,,,-393,-393,-393,,,-393,,253,-393,,,-393,-393,,-393,,-393',
',-393,,-393,-393,-393,-393,-393,-393,-393,-288,-393,-393,-393,,,,-288',
'-288,-288,,,-288,-288,-288,,-288,-393,-393,,-393,,-393,,,,-288,-288',
',,,,,,,,-288,-288,,-288,-288,-288,-288,-288,,,,,,,,,,,,,,,,,,,,,,,,-288',
'-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,-288,,,-288',
'-288,-288,,,-288,,262,-288,,,-288,-288,,-288,,-288,,-288,,-288,-288',
'-288,-288,-288,-288,-288,-243,-288,,-288,,,,-243,-243,-243,,,-243,-243',
'-243,,-243,-288,-288,,-288,,-288,,,,-243,,,,,,,,,,-243,-243,,-243,-243',
'-243,-243,-243,,,,,,610,401,,,611,,,,,,,,,149,150,,146,128,129,130,137',
'134,136,,,131,132,,,-243,151,152,138,139,,,-243,,,253,,253,-243,,,,',
'143,142,,127,148,145,144,140,141,135,133,125,147,126,,,153,-243,,,,',
',,,,,,,,,-243,,,,,-243,164,175,165,188,161,181,171,170,191,192,186,169',
'168,163,189,193,194,173,162,176,180,182,174,167,,,,183,190,185,184,177',
'187,172,160,179,178,,,,,,159,166,157,158,154,155,156,116,118,,,117,',
',,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138',
'139,,,,,,,,,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147,126',
',,153,84,,,,,,,,,,,83,164,175,165,188,161,181,171,170,191,192,186,169',
'168,163,189,193,194,173,162,176,180,182,174,167,,,,183,190,185,184,177',
'187,172,160,179,178,,,,,,159,166,157,158,154,155,156,116,118,,,117,',
',,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138',
'139,,,,,,,,,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147,126',
',,153,84,,,,,,,,,,,83,164,175,165,188,161,181,171,170,191,192,186,169',
'168,163,189,193,194,173,162,176,180,182,174,167,,,,183,190,185,184,177',
'187,172,160,179,178,,,,,,159,166,157,158,154,155,156,116,118,115,,117',
',,,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138',
'139,,,,,,,,,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147,126',
',,153,84,,,,,,,,,,,83,164,175,165,188,161,181,171,170,191,192,186,169',
'168,163,189,193,194,173,162,176,180,182,174,167,,,,183,190,185,184,177',
'187,172,160,179,178,,,,,,159,166,157,158,154,155,156,116,118,,,117,',
',,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138',
'139,,,,,,,,,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147,126',
',,153,84,,,,,,,,,,,83,164,175,165,188,161,181,171,170,191,192,186,169',
'168,163,189,193,194,173,162,176,180,182,174,167,,,,183,190,185,184,177',
'187,172,160,179,178,,,,,,159,166,157,158,154,155,156,116,118,,,117,',
',,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138',
'139,,,,,,,,,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147,126',
',,153,164,175,165,188,161,181,171,170,191,192,186,169,168,163,189,193',
'194,173,162,176,180,182,174,167,,,,183,190,185,358,357,359,356,160,179',
'178,,,,,,159,166,157,158,353,354,355,351,118,89,88,352,,91,,,,,,,149',
'150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,363',
',,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147,126,696,408',
'153,,697,,,,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151',
'152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140,141,135,133',
'125,147,126,699,408,153,,700,,,,,,,,,149,150,,146,128,129,130,137,134',
'136,,,131,132,,,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145',
'144,140,141,135,133,125,147,126,459,401,153,,460,,,,,,,,,149,150,,146',
'128,129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,253,,,,,,',
',143,142,,127,148,145,144,140,141,135,133,125,147,126,612,408,153,,613',
',,,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138',
'139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147',
'126,612,408,153,,613,,,,,,,,,149,150,,146,128,129,130,137,134,136,,',
'131,132,,,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145,144',
'140,141,135,133,125,147,126,610,401,153,,611,,,,,,,,,149,150,,146,128',
'129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,253,,,,,,,,143',
'142,,127,148,145,144,140,141,135,133,125,147,126,459,401,153,,460,,',
',,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138',
'139,,,,,,,,,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147,126',
'459,401,153,,460,,,,,,,,,149,150,,146,128,129,130,137,134,136,,,131',
'132,,,,151,152,138,139,,,,,,,,,,,,,,143,142,,127,148,145,144,140,141',
'135,133,125,147,126,941,408,153,,940,,,,,,,,,149,150,,146,128,129,130',
'137,134,136,,,131,132,,,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127',
'148,145,144,140,141,135,133,125,147,126,922,401,153,,923,,,,,,,,,149',
'150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,253',
',,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147,126,645,408',
'153,,646,,,,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151',
'152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140,141,135,133',
'125,147,126,642,401,153,,643,,,,,,,,,149,150,,146,128,129,130,137,134',
'136,,,131,132,,,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145',
'144,140,141,135,133,125,147,126,924,408,153,,925,,,,,,,,,149,150,,146',
'128,129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,253,,,,,,',
',143,142,,127,148,145,144,140,141,135,133,125,147,126,404,408,153,,403',
',,,,,,,,149,150,,146,128,129,130,137,134,136,,,131,132,,,,151,152,138',
'139,,,,,,253,,,,,,,,143,142,,127,148,145,144,140,141,135,133,125,147',
'126,397,401,153,,398,,,,,,,,,149,150,,146,128,129,130,137,134,136,,',
'131,132,,,,151,152,138,139,,,,,,253,,,,,,,,143,142,,127,148,145,144',
'140,141,135,133,125,147,126,694,401,153,,695,,,,,,,,,149,150,,146,128',
'129,130,137,134,136,,,131,132,,,,151,152,138,139,,,,,,253,529,,526,525',
'524,,527,143,142,,127,148,145,144,140,141,135,133,125,147,126,,,153',
'229,233,238,239,240,235,237,245,246,241,242,,222,223,531,709,243,244',
',,,,,535,534,538,537,,,,,,226,,232,,228,227,224,225,236,234,230,,231',
',229,233,238,239,240,235,237,245,246,241,242,,222,223,,247,243,244,',
',,,,,,,,,,,,,226,,232,,228,227,224,225,236,234,230,,231,,229,233,238',
'239,240,235,237,245,246,241,242,,222,223,,247,243,244,,,,,,,,,,,,,,',
'226,,232,,228,227,224,225,236,234,230,,231,,229,233,238,239,240,235',
'237,245,246,241,242,,222,223,,247,243,244,,,,,,,,,,,,,,,226,,232,,228',
'227,224,225,236,234,230,,231,,229,233,238,239,240,235,237,245,246,241',
'242,,222,223,,247,243,244,,,,,,,,,,,,,,,226,,232,,228,227,224,225,236',
'234,230,,231,,229,233,238,239,240,235,237,245,246,241,242,,222,223,',
'247,243,244,,,,,,,,,,,,,,,226,,232,,228,227,224,225,236,234,230,,231',
',229,233,238,239,240,235,237,245,246,241,242,,222,223,,247,243,244,',
',,,,,,,,,,,,,226,,232,,228,227,224,225,236,234,230,,231,,229,233,238',
'239,240,235,237,245,246,241,242,,222,223,209,247,243,244,,,,,,,,,,,',
',,,226,,232,,228,227,224,225,236,234,230,,231,,229,233,238,239,240,235',
'237,245,246,241,242,,222,223,,247,243,244,,,,,,,,,,,,,,,226,,232,,228',
'227,224,225,236,234,230,,231,,,,,,,,,,,,,,,,,247' ]
        racc_action_table = arr = ::Array.new(23494, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'613,757,757,757,757,757,757,613,613,613,757,757,613,613,613,757,613',
'757,757,757,757,757,757,757,614,58,613,613,613,757,757,757,757,757,757',
'757,613,613,757,613,613,613,613,613,757,757,692,757,757,757,757,757',
'757,757,757,757,346,757,757,757,326,757,757,863,757,757,757,613,613',
'613,613,613,613,613,613,613,613,613,613,613,613,487,642,613,613,613',
'757,613,613,757,695,613,757,757,613,613,757,613,757,613,677,613,757',
'613,613,613,613,613,613,613,757,613,58,613,332,757,757,757,757,563,757',
'757,369,544,563,757,757,613,613,613,613,612,613,757,613,757,613,942',
'612,612,612,552,19,612,612,612,745,612,611,642,545,324,324,325,564,564',
'612,612,612,612,517,692,346,637,692,923,692,612,612,637,612,612,612',
'612,612,326,924,922,863,19,326,643,346,863,303,642,369,346,642,333,294',
'770,653,653,642,745,695,611,612,612,612,612,612,612,612,612,612,612',
'612,612,612,612,801,802,612,612,612,336,612,612,332,694,612,212,544',
'612,612,303,612,544,612,485,612,303,612,612,612,612,612,612,612,680',
'612,612,612,564,696,552,643,697,564,545,942,496,924,294,545,942,612',
'612,612,612,87,612,15,612,517,612,325,87,87,87,212,325,87,87,87,294',
'87,593,923,570,570,653,643,923,87,643,87,87,87,924,922,643,213,333,924',
'922,87,87,685,87,87,87,87,87,770,15,421,421,466,770,696,15,802,697,25',
'457,801,802,366,316,593,336,316,427,763,694,593,87,87,87,87,87,87,87',
'87,87,87,87,87,87,87,213,466,87,87,87,215,87,87,457,696,87,690,697,87',
'87,341,87,342,87,482,87,342,87,87,87,87,87,87,87,570,87,427,87,610,693',
'434,763,581,25,366,366,366,481,763,340,699,87,87,87,87,90,87,763,87',
'215,87,421,90,90,90,25,467,90,90,90,505,90,434,341,625,763,434,434,468',
'90,341,90,90,90,433,341,359,610,645,341,464,90,90,359,90,90,90,90,90',
'358,467,438,340,699,581,581,358,341,625,340,699,437,710,581,340,699',
'433,710,340,699,433,433,90,90,90,90,90,90,90,90,90,90,90,90,90,90,340',
'699,90,90,90,645,90,90,352,38,90,365,645,90,90,352,90,645,90,436,90',
'645,90,90,90,90,90,90,90,403,90,74,90,397,357,702,403,403,403,645,74',
'357,403,403,435,403,90,90,90,90,74,90,38,90,353,90,24,351,38,315,361',
'353,315,24,351,403,403,361,403,403,403,403,403,365,365,365,397,618,211',
'618,618,618,397,618,678,211,678,678,678,859,678,859,859,859,211,859',
'403,403,403,403,403,403,403,403,403,403,403,403,403,403,370,398,403',
'403,403,618,403,276,299,299,403,368,276,403,618,618,618,618,403,367',
'403,666,403,403,403,403,403,403,403,404,403,707,403,356,354,37,404,404',
'404,423,356,354,404,404,398,404,403,403,618,403,398,403,355,678,404',
'403,452,413,859,355,839,520,370,370,370,404,404,839,404,404,404,404',
'404,368,368,368,839,662,37,405,662,367,367,367,37,574,574,396,452,574',
'574,574,452,452,452,452,404,404,404,404,404,404,404,404,404,404,404',
'404,404,404,17,17,404,404,404,788,404,788,788,788,404,788,704,404,329',
'724,3,704,404,329,404,3,404,404,404,404,404,404,404,395,404,404,404',
'821,288,821,821,821,290,821,868,288,868,788,393,290,404,404,390,404',
'288,404,788,729,290,404,540,540,540,540,540,540,115,933,933,540,540',
'115,115,387,540,821,540,540,540,540,540,540,540,385,821,821,821,821',
'540,540,540,540,540,540,540,379,753,540,753,753,753,521,753,540,540',
'453,540,540,540,540,540,540,540,540,540,661,540,540,540,319,540,540',
'319,540,540,540,658,860,657,860,860,860,949,860,949,949,949,453,949',
'522,838,453,453,453,453,540,654,838,540,508,508,540,540,40,40,540,838',
'540,683,683,851,540,851,851,851,860,851,529,652,540,949,747,748,749',
'540,540,540,540,751,540,540,949,949,752,540,540,656,656,656,656,656',
'656,540,651,540,656,656,754,851,756,656,536,656,656,656,656,656,656',
'656,851,851,758,759,762,656,656,656,656,656,656,656,539,883,656,883',
'883,883,648,883,656,656,337,656,656,656,656,656,656,656,656,656,335',
'656,656,656,773,656,656,775,656,656,656,776,931,777,931,931,931,927',
'931,927,927,927,778,927,779,790,782,790,790,790,656,790,783,656,785',
'787,656,656,331,789,656,330,656,792,647,853,656,853,853,853,931,853',
'795,541,656,927,320,546,318,656,656,656,656,790,656,656,927,927,317',
'656,656,664,664,664,664,664,664,656,644,656,664,664,804,853,547,664',
'808,664,664,664,664,664,664,664,853,853,809,812,813,664,664,664,664',
'664,664,664,312,311,664,480,480,480,480,480,664,664,308,664,664,664',
'664,664,664,664,664,664,305,664,664,664,304,664,664,300,664,664,664',
'641,899,826,899,899,899,855,899,855,855,855,827,855,298,897,833,897',
'897,897,664,897,293,664,292,289,664,664,283,841,664,282,664,281,279',
'912,664,912,912,912,899,912,639,578,664,855,270,267,861,664,664,664',
'664,897,664,664,855,855,266,664,664,665,665,665,665,665,665,664,865',
'664,665,665,866,912,632,665,871,665,665,665,665,665,665,665,912,912',
'252,876,877,665,665,665,665,665,665,665,878,879,665,881,630,221,885',
'416,665,665,887,665,665,665,665,665,665,665,665,665,217,665,665,665',
'216,665,665,214,665,665,665,416,416,416,416,416,416,416,416,416,416',
'416,287,416,416,306,195,416,416,287,665,892,306,665,893,894,665,665',
'287,895,665,306,665,416,896,416,665,416,416,416,416,416,416,416,665',
'416,584,898,101,665,665,665,665,44,665,665,492,39,286,665,665,36,416',
'53,416,286,590,665,22,665,53,53,53,594,286,53,53,53,848,53,848,848,848',
'921,848,700,16,13,12,53,53,53,700,10,7,599,932,700,604,53,53,700,53',
'53,53,53,53,891,6,6,6,6,6,934,891,935,848,936,531,937,531,531,531,891',
'531,848,848,848,848,938,53,53,53,53,53,53,53,53,53,53,53,53,53,53,939',
'840,53,53,53,940,941,53,840,616,53,943,531,53,53,944,53,840,53,1,53',
'531,53,53,53,53,53,53,53,334,53,518,53,518,518,518,334,518,277,277,277',
'277,277,954,,334,53,53,53,53,,53,,53,703,703,703,703,703,703,,,,703',
'703,,,,703,518,703,703,703,703,703,703,703,,518,518,518,518,703,703',
'703,703,703,703,703,,,703,636,636,636,636,636,703,703,,703,703,703,703',
'703,703,703,703,703,842,703,703,703,,703,703,842,703,703,703,,,,,925',
'842,824,884,824,824,824,925,824,,884,,925,14,,703,925,,703,884,14,703',
'703,,,703,,703,,14,672,703,672,672,672,,672,,,703,824,,,,703,703,703',
'703,,703,703,824,824,,703,703,708,708,708,708,708,708,703,,703,708,708',
',672,,708,,708,708,708,708,708,708,708,672,672,,,,708,708,708,708,708',
'708,708,,,708,,,,,392,708,708,,708,708,708,708,708,708,708,708,708,',
'708,708,708,,708,708,,708,708,708,392,392,392,392,392,392,392,392,392',
'392,392,646,392,392,344,,392,392,646,708,,344,708,646,,708,708,646,',
'708,344,708,392,,392,708,392,392,392,392,392,392,392,708,392,,,,708',
'708,708,708,,708,708,,555,45,708,708,,392,409,555,45,,708,,708,409,409',
'409,555,45,409,409,409,566,409,566,566,566,,566,491,,,409,409,409,409',
'491,,,,,,,409,409,491,409,409,409,409,409,,,,,,,,,,566,566,675,,675',
'675,675,,675,566,566,566,566,,409,409,409,409,409,409,409,409,409,409',
'409,409,409,409,,,409,409,409,,,409,,,409,,675,409,409,,409,,409,,409',
'675,409,409,409,409,409,409,409,408,409,409,409,,,,408,408,408,,,408',
'408,408,444,408,409,409,409,409,,409,,409,408,408,408,408,,,444,444',
',,,408,408,,408,408,408,408,408,,,,444,,444,,444,444,444,444,,,444,',
'444,,,,,,,,408,408,408,408,408,408,408,408,408,408,408,408,408,408,',
',408,408,408,,,408,,,408,,,408,408,,408,,408,,408,,408,408,408,408,408',
'408,408,,408,408,408,,,,,,,,,,,,,,408,408,408,408,,408,,408,565,565',
'565,565,565,565,,,,565,565,,,,565,,565,565,565,565,565,565,565,,,,,',
'565,565,565,565,565,565,565,,,565,,,,,,565,565,,565,565,565,565,565',
'565,565,565,565,,565,565,565,,565,565,,565,565,565,440,,,,,,914,,914',
'914,914,,914,,,,440,440,,565,,,565,,,565,565,,,565,,565,440,,440,565',
'440,440,440,440,,,,565,914,,,,565,565,565,565,,565,565,914,914,,565',
'565,628,628,628,628,628,628,565,,565,628,628,,,,628,,628,628,628,628',
'628,628,628,,,,,,628,628,628,628,628,628,628,,,628,,,,,,628,628,,628',
'628,628,628,628,628,628,628,628,,628,628,628,,628,628,,628,628,628,455',
'455,455,455,455,455,455,455,,455,455,,,,,,455,455,,628,,,628,,,628,628',
',,628,,628,455,,455,628,455,455,455,455,455,455,455,628,455,,,,628,628',
'628,628,,628,628,,,,628,628,718,718,718,718,718,718,628,,628,718,718',
',,,718,,718,718,718,718,718,718,718,,,,,,718,718,718,718,718,718,718',
',,718,,,,,,718,718,,718,718,718,718,718,718,718,718,718,,718,718,718',
',718,718,,718,718,718,432,432,432,432,432,432,432,432,432,432,432,,432',
'432,,,432,432,,718,,,718,,,718,718,,,718,,718,432,,432,718,432,432,432',
'432,432,432,432,718,432,,,,718,718,718,718,,718,718,,,,718,718,543,543',
'543,543,543,543,718,,718,543,543,,,,543,,543,543,543,543,543,543,543',
',,,,,543,543,543,543,543,543,543,,,543,,,,,,543,543,,543,543,543,543',
'543,543,543,543,543,,543,543,543,,543,543,,543,543,543,442,442,442,442',
'442,442,442,,,442,442,,,,,,442,442,,543,,,543,,,543,543,,,543,,543,442',
',442,543,442,442,442,442,442,442,442,543,442,,,,543,543,543,543,,543',
'543,,,,543,543,767,767,767,767,767,767,543,,543,767,767,,,,767,,767',
'767,767,767,767,767,767,,,,,,767,767,767,767,767,767,767,,,767,,,,,',
'767,767,,767,767,767,767,767,767,767,767,767,,767,767,767,,767,767,',
'767,767,767,445,,,,,,,,,,,,,,,,445,445,,767,,,767,,,767,767,,,767,,767',
'445,,445,767,445,445,445,445,,,445,767,445,,,,767,767,767,767,,767,767',
',,,767,767,796,796,796,796,796,796,767,,767,796,796,,,,796,,796,796',
'796,796,796,796,796,,,,,,796,796,796,796,796,796,796,,,796,,,,,,796',
'796,,796,796,796,796,796,796,796,796,796,,796,796,796,,796,796,,796',
'796,796,443,,,,,,,,,,,,,,,,443,443,,796,,,796,,,796,796,,,796,,796,443',
',443,796,443,443,443,443,,,443,796,443,,,,796,796,796,796,,796,796,',
',,796,796,797,797,797,797,797,797,796,,796,797,797,,,,797,,797,797,797',
'797,797,797,797,,,,,,797,797,797,797,797,797,797,,,797,,,,,,797,797',
',797,797,797,797,797,797,797,797,797,,797,797,797,,797,797,,797,797',
'797,454,454,454,454,454,454,454,,,454,454,,,,,,454,454,,797,,,797,,',
'797,797,,,797,,797,454,,454,797,454,454,454,454,454,454,454,797,454',
',,,797,797,797,797,,797,797,,,,797,797,800,800,800,800,800,800,797,',
'797,800,800,,,,800,,800,800,800,800,800,800,800,,,,,,800,800,800,800',
'800,800,800,,,800,,,,,,800,800,,800,800,800,800,800,800,800,800,800',
',800,800,800,,800,800,,800,800,800,448,448,448,448,448,448,448,,,448',
'448,,,,,,448,448,,800,,,800,,,800,800,,,800,,800,448,,448,800,448,448',
'448,448,448,448,448,800,448,,,,800,800,800,800,,800,800,,,,800,800,806',
'806,806,806,806,806,800,,800,806,806,,,,806,,806,806,806,806,806,806',
'806,,,,,,806,806,806,806,806,806,806,,,806,,,,,,806,806,,806,806,806',
'806,806,806,806,806,806,,806,806,806,,806,806,,806,806,806,447,447,447',
'447,447,447,447,,,447,447,,,,,,447,447,,806,,,806,,,806,806,,,806,,806',
'447,,447,806,447,447,447,447,447,447,447,806,447,,,,806,806,806,806',
',806,806,,,,806,806,837,837,837,837,837,837,806,,806,837,837,,,,837',
',837,837,837,837,837,837,837,,,,,,837,837,837,837,837,837,837,,,837',
',,,,,837,837,,837,837,837,837,837,837,837,837,837,,837,837,837,,837',
'837,,837,837,837,451,451,451,451,451,451,451,,,451,451,,,,,,451,451',
',837,,,837,,,837,837,,,837,,837,451,,451,837,451,451,451,451,451,451',
'451,837,451,,,,837,837,837,837,,837,837,,,,837,837,32,32,32,32,32,32',
'837,,837,32,32,,,,32,,32,32,32,32,32,32,32,,,,,,32,32,32,32,32,32,32',
',,32,,,,,,32,32,,32,32,32,32,32,32,32,32,32,,32,32,32,,32,32,,32,32',
'32,431,431,431,431,431,431,431,431,431,431,431,,431,431,,,431,431,,32',
',,32,,,32,32,,,32,,32,431,,431,32,431,431,431,431,431,431,431,32,431',
',,,32,32,32,32,,32,32,,,,32,32,285,285,285,285,285,285,32,,32,285,285',
',,,285,,285,285,285,285,285,285,285,,,,,,285,285,285,285,285,285,285',
',,285,,,,,,285,285,,285,285,285,285,285,285,285,285,285,,285,285,285',
',285,285,,285,285,285,450,450,450,450,450,450,450,,,450,450,,,,,,450',
'450,,285,,,285,,,285,285,,,285,,285,450,,450,285,450,450,450,450,450',
'450,450,285,450,,,,285,285,285,285,,285,285,,,,285,285,280,280,280,280',
'280,280,285,,285,280,280,,,,280,,280,280,280,280,280,280,280,,,,,,280',
'280,280,280,280,280,280,,,280,,,,,,280,280,,280,280,280,280,280,280',
'280,280,280,,280,280,280,,280,280,,280,280,280,449,449,449,449,449,449',
'449,,,449,449,,,,,,449,449,,280,,,280,,,280,280,,,280,,280,449,,449',
'280,449,449,449,449,449,449,449,280,449,,,,280,280,280,280,,280,280',
',,,280,280,220,220,220,220,220,220,280,,280,220,220,,,,220,,220,220',
'220,220,220,220,220,,,,,,220,220,220,220,220,220,220,,,220,,,,,,220',
'220,,220,220,220,220,220,220,220,220,220,,220,220,220,,220,220,,220',
'220,220,446,,,,,,,,,,,,,,,,446,446,,220,,,220,,,220,220,,,220,,220,446',
',446,220,446,446,446,446,,,446,220,446,,,,220,220,220,220,,220,220,',
',,220,220,197,197,197,197,197,197,220,,220,197,197,,,,197,,197,197,197',
'197,197,197,197,,,,,,197,197,197,197,197,197,197,,,197,,,,,,197,197',
',197,197,197,197,197,197,197,197,197,,197,197,197,,197,197,,197,197',
'197,439,,,,,,,,,,,,,,,,439,439,,197,,,197,,,197,197,,,197,,197,439,',
'439,197,439,439,439,439,,,,197,,,,,197,197,197,197,,197,197,,,,197,197',
'113,113,113,113,113,113,197,,197,113,113,,,,113,,113,113,113,113,113',
'113,113,,,,,,113,113,113,113,113,113,113,,,113,,,,,,113,113,113,113',
'113,113,113,113,113,113,113,113,,113,113,113,,113,113,,113,113,113,441',
',,,,,,,,,,,,,,,441,441,,113,,,113,,,113,113,,,113,,113,441,,,113,441',
'441,441,441,,,,113,,,,,113,113,113,113,,113,113,,,,113,113,908,908,908',
'908,908,908,113,,113,908,908,,,,908,,908,908,908,908,908,908,908,,,',
',,908,908,908,908,908,908,908,,,908,,,,,,908,908,,908,908,908,908,908',
'908,908,908,908,,908,908,908,,908,908,,908,908,908,,,,,,,,,,,,,,,,,',
',,908,,,908,,,908,908,,,908,,908,,,,908,,,,,,,,908,,,,,908,908,908,908',
',908,908,,,,908,908,906,906,906,906,906,906,908,,908,906,906,,,,906',
',906,906,906,906,906,906,906,,,,,,906,906,906,906,906,906,906,,,906',
',,,,,906,906,,906,906,906,906,906,906,906,906,906,,906,906,906,,906',
'906,,906,906,906,,,,,,,,,,,,,,,,,,,,906,,,906,,,906,906,,,906,,906,',
',,906,,,,,,,,906,,,,,906,906,906,906,,906,906,,,,906,906,627,627,627',
'627,627,627,906,,906,627,627,,,,627,,627,627,627,627,627,627,627,,,',
',,627,627,627,627,627,627,627,,,627,,,,,,627,627,,627,627,627,627,627',
'627,627,627,627,,627,627,627,,627,627,,627,627,627,,,,,,,,,,,,,,,,,',
',,627,,,627,,,627,627,,,627,,627,,,,627,,,,,,,,627,,,,,627,627,627,627',
',627,627,,,,627,627,620,620,620,620,620,620,627,,627,620,620,,,,620',
',620,620,620,620,620,620,620,,,,,,620,620,620,620,620,620,620,,,620',
',,,,,620,620,,620,620,620,620,620,620,620,620,620,,620,620,620,,620',
'620,,620,620,620,,,,,,,,,,,,,,,,,,,,620,,,620,,,620,620,,,620,,620,',
',,620,,,,,,,,620,,,,,620,620,620,620,,620,620,,,,620,620,54,54,54,54',
'54,54,620,,620,54,54,,,,54,,54,54,54,54,54,54,54,,,,,,54,54,54,54,54',
'54,54,,,54,,,,,,54,54,,54,54,54,54,54,54,54,54,54,,54,54,54,,54,54,',
'54,54,54,,,,,,,,,,,,,,,,,,,,54,,,54,,,54,54,,,54,,54,,,,54,,,,,,,,54',
',,,,54,54,54,54,,54,54,,,,54,54,900,900,900,900,900,900,54,,54,900,900',
',,,900,,900,900,900,900,900,900,900,,,,,,900,900,900,900,900,900,900',
',,900,,,,,,900,900,,900,900,900,900,900,900,900,900,900,,900,900,900',
',900,900,,900,900,900,,,,,,,,,,,,,,,,,,,,900,,,900,,,900,900,,,900,',
'900,,,,900,,,,,,,,900,,,,,900,900,900,900,,900,900,,,,900,900,0,0,0',
'0,0,0,900,,900,0,0,,,,0,,0,0,0,0,0,0,0,,,,,,0,0,0,0,0,0,0,,,0,,,,,,0',
'0,0,0,0,0,0,0,0,0,0,0,,0,0,0,,0,0,,0,0,0,,,,,,,,,,,,,,,,,,,,0,,,0,,',
'0,0,,,0,,0,,,,0,,,,,,,,0,,,,,0,0,0,0,,0,0,,,,0,0,,816,816,816,,816,0',
',0,816,816,,,,816,,816,816,816,816,816,816,816,,,,,,816,816,816,816',
'816,816,816,,,816,,,,,,,816,,,816,816,816,816,816,816,816,816,816,816',
'816,816,,816,816,,816,816,816,,,,,,,,,,,,,,,,,,,,816,,,816,,,816,816',
',,816,,,,816,,816,,,,,,,,816,,,,,816,816,816,816,,816,816,,,,816,816',
',43,43,43,,43,816,,816,43,43,,,,43,,43,43,43,43,43,43,43,,,,,,43,43',
'43,43,43,43,43,,,43,,,,,,,43,,,43,43,43,43,43,43,43,43,,43,43,43,,43',
'43,,43,43,43,,,,,,,,,,,,,,,,,,,,43,,,43,,,43,43,,,43,,,,,,43,,,,,,,',
'43,,,,,43,43,43,43,,43,43,,,,43,43,,56,56,56,,56,43,,43,56,56,,,,56',
',56,56,56,56,56,56,56,,,,,,56,56,56,56,56,56,56,,,56,,,,,,,56,,,56,56',
'56,56,56,56,56,56,56,56,56,56,,56,56,,56,56,56,,,,,,,,,,,,,,,,,,,,56',
',,56,,,56,56,,,56,,56,,,,56,,,,,,,,56,,,,,56,56,56,56,,56,56,,,,56,56',
',57,57,57,,57,56,,56,57,57,,,,57,,57,57,57,57,57,57,57,,,,,,57,57,57',
'57,57,57,57,,,57,,,,,,,57,,,57,57,57,57,57,57,57,57,57,57,57,57,,57',
'57,,57,57,57,,,,,,,,,,,,,,,,,,,,57,,,57,,,57,57,,,57,,,,,,57,,,,,,,',
'57,,,,,57,57,57,57,,57,57,,,,57,57,,607,607,607,,607,57,,57,607,607',
',,,607,,607,607,607,607,607,607,607,,,,,,607,607,607,607,607,607,607',
',,607,,,,,,,607,,,607,607,607,607,607,607,607,607,,607,607,607,,607',
'607,,607,607,607,,,,,,,,,,,,,,,,,,,,607,,,607,,,607,607,,,607,,,,,,607',
',,,,,,,607,,,,,607,607,607,607,,607,607,,,,607,607,,60,60,60,,60,607',
',607,60,60,,,,60,,60,60,60,60,60,60,60,,,,,,60,60,60,60,60,60,60,,,60',
',,,,,,60,,,60,60,60,60,60,60,60,60,,60,60,60,,60,60,,60,60,60,,,,,,',
',,,,,,,,,,,,,60,,,60,,,60,60,,,60,,,,,,60,,,,,,,,60,,,,,60,60,60,60',
',60,60,,,,60,60,,61,61,61,,61,60,,60,61,61,,,,61,,61,61,61,61,61,61',
'61,,,,,,61,61,61,61,61,61,61,,,61,,,,,,,61,,,61,61,61,61,61,61,61,61',
',61,61,61,,61,61,,61,61,61,,,,,,,,,,,,,,,,,,,,61,,,61,,,61,61,,,61,',
',,,,61,,,,,,,,61,,,,,61,61,61,61,,61,61,,,,61,61,,64,64,64,,64,61,,61',
'64,64,,,,64,,64,64,64,64,64,64,64,,,,,,64,64,64,64,64,64,64,,,64,,,',
',615,,64,,,64,64,64,64,64,64,64,64,,64,64,64,,64,64,,64,64,64,615,615',
'615,615,615,615,615,615,615,615,615,,615,615,,,615,615,,64,,,64,,,64',
'64,,,64,,,615,,615,64,615,615,615,615,615,615,615,64,615,,,,64,64,64',
'64,,64,64,,,,64,64,64,615,,,,64,64,,64,65,65,65,,65,,,,65,65,,,,65,',
'65,65,65,65,65,65,65,,,,,,65,65,65,65,65,65,65,,,65,,,,,,,65,,,65,65',
'65,65,65,65,65,65,,65,65,65,,65,65,,,,65,,,,,,,,,,,,,,,,,,,,65,,,65',
',,65,65,,,65,,65,,,,,,709,,709,709,709,,709,,,,,65,65,65,65,,65,65,',
',,65,65,,66,66,66,,66,65,,65,66,66,,,,66,709,66,66,66,66,66,66,66,,709',
'709,709,709,66,66,66,66,66,66,66,,,66,,,,,,,66,,,66,66,66,66,66,66,66',
'66,,66,66,66,,66,66,,,,66,,,,,,,,,,,,,,,,,66,,,66,,,66,,,66,66,,,66',
',,,,,,,667,,667,667,667,,667,,,,,66,66,66,66,,66,66,,,,66,66,,67,67',
'67,,67,66,,66,67,67,,,,67,667,67,67,67,67,67,67,67,,667,667,667,667',
'67,67,67,67,67,67,67,,,67,,,,,,,67,,,67,67,67,67,67,67,67,67,,67,67',
'67,,67,67,,,,67,,,,,,,,,,,,,,,,,,,,67,,,67,,,67,67,,,67,,,,,,,,669,',
'669,669,669,,669,,,,,67,67,67,67,,67,67,,,,67,67,,727,727,727,,727,67',
',67,727,727,,,,727,669,727,727,727,727,727,727,727,,669,669,669,669',
'727,727,727,727,727,727,727,,,727,,,,,,,727,,,727,727,727,727,727,727',
'727,727,,727,727,727,,727,727,,727,727,727,,,,,,,,,,,,,,,,,,,,727,,',
'727,,,727,727,,,727,,,,,,727,,,,,,,,727,,,,,727,727,727,727,,727,727',
',,,727,727,,606,606,606,,606,727,,727,606,606,,,,606,,606,606,606,606',
'606,606,606,,,,,,606,606,606,606,606,606,606,,,606,,,,,,,606,,,606,606',
'606,606,606,606,606,606,,606,606,606,,606,606,,606,606,606,,,,,,,,,',
',,,,,,,,,,606,,,606,,,606,606,,,606,,,,,,606,,,,,,,,606,,,,,606,606',
'606,606,,606,606,,,,606,606,,42,42,42,,42,606,,606,42,42,,,,42,,42,42',
'42,42,42,42,42,,,,,,42,42,42,42,42,42,42,,,42,,,,,,,42,,,42,42,42,42',
'42,42,42,42,,42,42,42,,42,42,,42,42,42,,,,,,,,,,,,,,,,,,,,42,,,42,,',
'42,42,,,42,,,,,,42,,,,,,,,42,,,,,42,42,42,42,,42,42,,,,42,42,,41,41',
'41,,41,42,,42,41,41,,,,41,,41,41,41,41,41,41,41,,,,,,41,41,41,41,41',
'41,41,,,41,,,,,,,41,,,41,41,41,41,41,41,41,41,,41,41,41,,41,41,,41,41',
'41,,,,,,,,,,,,,,,,,,,,41,,,41,,,41,41,,,41,,,,,,41,,,,,,,,41,,,,,41',
'41,41,41,,41,41,,,,41,41,,603,603,603,,603,41,,41,603,603,,,,603,,603',
'603,603,603,603,603,603,,,,,,603,603,603,603,603,603,603,,,603,,,,,',
',603,,,603,603,603,603,603,603,603,603,,603,603,603,,603,603,,603,603',
'603,,,,,,,,,,,,,,,,,,,,603,,,603,,,603,603,,,603,,,,,,603,,,,,,,,603',
',,,,603,603,603,603,,603,603,,,,603,603,,103,103,103,103,103,603,,603',
'103,103,,,,103,,103,103,103,103,103,103,103,,,,,,103,103,103,103,103',
'103,103,,,103,,,,,,103,103,103,103,103,103,103,103,103,103,103,103,',
'103,103,103,,103,103,,103,103,103,733,733,733,733,733,733,733,733,733',
'733,733,,733,733,,,733,733,,103,,,103,,,103,103,,,103,,103,733,,733',
'103,733,733,733,733,733,733,733,103,733,,,,103,103,103,103,,103,103',
',,,103,103,,733,,,,103,103,,103,108,108,108,,108,,,,108,108,,,,108,',
'108,108,108,108,108,108,108,,,,,,108,108,108,108,108,108,108,,,108,',
',,,,,108,,,108,108,108,108,108,108,108,108,,108,108,108,,108,108,,108',
'108,108,,,,,,,,,,,,,,,,,,,,108,,,108,,,108,108,,,108,,,,,,108,,,,,,',
',108,,,,,108,108,108,108,,108,108,,,,108,108,,109,109,109,,109,108,',
'108,109,109,,,,109,,109,109,109,109,109,109,109,,,,,,109,109,109,109',
'109,109,109,,,109,,,,,,,109,,,109,109,109,109,109,109,109,109,,109,109',
'109,,109,109,,109,109,109,,,,,,,,,,,,,,,,,,,,109,,,109,,,109,109,,,109',
',,,,,109,,,,,,,,109,,,,,109,109,109,109,,109,109,,,,109,109,,110,110',
'110,,110,109,,109,110,110,,,,110,,110,110,110,110,110,110,110,,,,,,110',
'110,110,110,110,110,110,,,110,,,,,,,110,,,110,110,110,110,110,110,110',
'110,,110,110,110,,110,110,,110,110,110,,,,,,,,,,,,,,,,,,,,110,,,110',
',,110,110,,,110,,,,,,110,,,,,,,,110,,,,,110,110,110,110,,110,110,,,',
'110,110,,111,111,111,,111,110,,110,111,111,,,,111,,111,111,111,111,111',
'111,111,,,,,,111,111,111,111,111,111,111,,,111,,,,,,,111,,,111,111,111',
'111,111,111,111,111,,111,111,111,,111,111,,111,111,111,,,,,,,,,,,,,',
',,,,,,111,,,111,,,111,111,,,111,,,,,,111,,,,,,,,111,,,,,111,111,111',
'111,,111,111,,,,111,111,,112,112,112,112,112,111,,111,112,112,,,,112',
',112,112,112,112,112,112,112,,,,,,112,112,112,112,112,112,112,,,112',
',,,,,112,112,,112,112,112,112,112,112,112,112,112,,112,112,112,,112',
'112,,112,112,112,,,,,,,,,,,,,,,,,,,,112,,,112,,,112,112,,,112,,112,',
',,112,,,,,,,,112,,,,,112,112,112,112,,112,112,,,,112,112,,602,602,602',
',602,112,,112,602,602,,,,602,,602,602,602,602,602,602,602,,,,,,602,602',
'602,602,602,602,602,,,602,,,,,,,602,,,602,602,602,602,602,602,602,602',
',602,602,602,,602,602,,602,602,602,,,,,,,,,,,,,,,,,,,,602,,,602,,,602',
'602,,,602,,,,,,602,,,,,,,,602,,,,,602,602,602,602,,602,602,,,,602,602',
',725,725,725,,725,602,,602,725,725,,,,725,,725,725,725,725,725,725,725',
',,,,,725,725,725,725,725,725,725,,,725,,,,,,,725,,,725,725,725,725,725',
'725,725,725,,725,725,725,,725,725,,725,725,725,,,,,,,,,,,,,,,,,,,,725',
',,725,,,725,725,,,725,,,,,,725,,,,,,,,725,,,,,725,725,725,725,,725,725',
',,,725,725,,598,598,598,,598,725,,725,598,598,,,,598,,598,598,598,598',
'598,598,598,,,,,,598,598,598,598,598,598,598,,,598,,,,,,,598,,,598,598',
'598,598,598,598,598,598,,598,598,598,,598,598,,598,598,598,,,,,,,,,',
',,,,,,,,,,598,,,598,,,598,598,,,598,,,,,,598,,,,,,,,598,,,,,598,598',
'598,598,,598,598,,,,598,598,,597,597,597,,597,598,,598,597,597,,,,597',
',597,597,597,597,597,597,597,,,,,,597,597,597,597,597,597,597,,,597',
',,,,,,597,,,597,597,597,597,597,597,597,597,,597,597,597,,597,597,,597',
'597,597,,,,,,,,,,,,,,,,,,,,597,,,597,,,597,597,,,597,,,,,,597,,,,,,',
',597,,,,,597,597,597,597,,597,597,,,,597,597,,198,198,198,,198,597,',
'597,198,198,,,,198,,198,198,198,198,198,198,198,,,,,,198,198,198,198',
'198,198,198,,,198,,,,,,,198,,,198,198,198,198,198,198,198,198,,198,198',
'198,,198,198,,198,198,198,,,,,,,,,,,,,,,,,,,,198,,,198,,,198,198,,,198',
',198,,,,198,,,,,,,,198,,,,,198,198,198,198,,198,198,,,,198,198,,199',
'199,199,,199,198,,198,199,199,,,,199,,199,199,199,199,199,199,199,,',
',,,199,199,199,199,199,199,199,,,199,,,,,,,199,,,199,199,199,199,199',
'199,199,199,,199,199,199,,199,199,,199,199,199,,,,,,,,,,,,,,,,,,,,199',
',,199,,,199,199,,,199,,,,,,199,,,,,,,,199,,,,,199,199,199,199,,199,199',
',,,199,199,,200,200,200,,200,199,,199,200,200,,,,200,,200,200,200,200',
'200,200,200,,,,,,200,200,200,200,200,200,200,,,200,,,,,,,200,,,200,200',
'200,200,200,200,200,200,200,200,200,200,,200,200,,200,200,200,,,,,,',
',,,,,,,,,,,,,200,,,200,,,200,200,,,200,,200,,200,,200,,,,,,,,200,,,',
',200,200,200,200,,200,200,,,,200,200,,596,596,596,,596,200,,200,596',
'596,,,,596,,596,596,596,596,596,596,596,,,,,,596,596,596,596,596,596',
'596,,,596,,,,,,,596,,,596,596,596,596,596,596,596,596,596,596,596,596',
',596,596,,596,596,596,,,,,,,,,,,,,,,,,,,,596,,,596,,,596,596,,,596,',
',,596,,596,,,,,,,,596,,,,,596,596,596,596,,596,596,,,,596,596,,595,595',
'595,,595,596,,596,595,595,,,,595,,595,595,595,595,595,595,595,,,,,,595',
'595,595,595,595,595,595,,,595,,,,,,,595,,,595,595,595,595,595,595,595',
'595,595,595,595,595,,595,595,,595,595,595,,,,,,,,,,,,,,,,,,,,595,,,595',
',,595,595,,,595,,595,,595,,595,,,,,,,,595,,,,,595,595,595,595,,595,595',
',,,595,595,,203,203,203,,203,595,,595,203,203,,,,203,,203,203,203,203',
'203,203,203,,,,,,203,203,203,203,203,203,203,,,203,,,,,,,203,,,203,203',
'203,203,203,203,203,203,,203,203,203,,203,203,,203,203,203,,,,,,,,,',
',,,,,,,,,,203,,,203,,,203,203,,,203,,,,,,203,,,,,,,,203,,,,,203,203',
'203,203,,203,203,,,,203,203,,204,204,204,,204,203,,203,204,204,,,,204',
',204,204,204,204,204,204,204,,,,,,204,204,204,204,204,204,204,,,204',
',,,,,,204,,,204,204,204,204,204,204,204,204,,204,204,204,,204,204,,204',
'204,204,,,,,,,,,,,,,,,,,,,,204,,,204,,,204,204,,,204,,204,,,,204,,,',
',,,,204,,,,,204,204,204,204,,204,204,,,,204,204,,205,205,205,,205,204',
',204,205,205,,,,205,,205,205,205,205,205,205,205,,,,,,205,205,205,205',
'205,205,205,,,205,,,,,,,205,,,205,205,205,205,205,205,205,205,,205,205',
'205,,205,205,,205,205,205,,,,,,,,,,,,,,,,,,,,205,,,205,,,205,205,,,205',
',,,,,205,,,,,,,,205,,,,,205,205,205,205,,205,205,,,,205,205,,206,206',
'206,,206,205,,205,206,206,,,,206,,206,206,206,206,206,206,206,,,,,,206',
'206,206,206,206,206,206,,,206,,,,,,,206,,,206,206,206,206,206,206,206',
'206,,206,206,206,,206,206,,206,206,206,,,,,,,,,,,,,,,,,,,,206,,,206',
',,206,206,,,206,,,,,,206,,,,,,,,206,,,,,206,206,206,206,,206,206,,,',
'206,206,,207,207,207,,207,206,,206,207,207,,,,207,,207,207,207,207,207',
'207,207,,,,,,207,207,207,207,207,207,207,,,207,,,,,,,207,,,207,207,207',
'207,207,207,207,207,,207,207,207,,207,207,,207,207,207,,,,,,,,,,,,,',
',,,,,,207,,,207,,,207,207,,,207,,,,,,207,,,,,,,,207,,,,,207,207,207',
'207,,207,207,,,,207,207,,208,208,208,,208,207,,207,208,208,,,,208,,208',
'208,208,208,208,208,208,,,,,,208,208,208,208,208,208,208,,,208,,,,,',
',208,,,208,208,208,208,208,208,208,208,,208,208,208,,208,208,,208,208',
'208,,,,,,,,,,,,,,,,,,,,208,,,208,,,208,208,,,208,,,,,,208,,,,,,,,208',
',,,,208,208,208,208,,208,208,,,,208,208,208,592,592,592,,592,208,,208',
'592,592,,,,592,,592,592,592,592,592,592,592,,,,,,592,592,592,592,592',
'592,592,,,592,,,,,,,592,,,592,592,592,592,592,592,592,592,,592,592,592',
',592,592,,592,592,592,,,,,,,,,,,,,,,,,,,,592,,,592,,,592,592,,,592,',
',,,,592,,,,,,,,592,,,,,592,592,592,592,,592,592,,,,592,592,,591,591',
'591,,591,592,,592,591,591,,,,591,,591,591,591,591,591,591,591,,,,,,591',
'591,591,591,591,591,591,,,591,,,,,,,591,,,591,591,591,591,591,591,591',
'591,,591,591,591,,591,591,,591,591,591,,,,,,,,,,,,,,,,,,,,591,,,591',
',,591,591,,,591,,591,,,,591,,,,,,,,591,,,,,591,591,591,591,,591,591',
',,,591,591,,5,5,5,5,5,591,,591,5,5,,,,5,,5,5,5,5,5,5,5,,,,,,5,5,5,5',
'5,5,5,,,5,,,,,,5,5,5,5,5,5,5,5,5,5,5,5,,5,5,5,,5,5,,5,5,5,,,,,,,,,,',
',,,,,,,,,5,,,5,,,5,5,,,5,,5,,,,5,,,,,,,,5,,,,,5,5,5,5,,5,5,,,,5,5,,327',
'327,327,,327,5,,5,327,327,,,,327,,327,327,327,327,327,327,327,,,,,,327',
'327,327,327,327,327,327,,,327,,,,,,,327,,,327,327,327,327,327,327,327',
'327,,327,327,327,,327,327,,327,327,327,,,,,,,,,,,,,,,,,,,,327,,,327',
',,327,327,,,327,,,,,,327,,,,,,,,327,,,,,327,327,327,327,,327,327,,,',
'327,327,,633,633,633,,633,327,,327,633,633,,,,633,,633,633,633,633,633',
'633,633,,,,,,633,633,633,633,633,633,633,,,633,,,,,,,633,,,633,633,633',
'633,633,633,633,633,,633,633,633,,633,633,,633,633,633,,,,,,,,,,,,,',
',,,,,,633,,,633,,,633,633,,,633,,,,,,633,,,,,,,,633,,,,,633,633,633',
'633,,633,633,,,,633,633,,638,638,638,,638,633,,633,638,638,,,,638,,638',
'638,638,638,638,638,638,,,,,,638,638,638,638,638,638,638,,,638,,,,,',
',638,,,638,638,638,638,638,638,638,638,,638,638,638,,638,638,,,,638',
',,,,,,,,,,,,,,,,,,,638,,,638,,,638,638,,,638,,,,,,,,819,,819,819,819',
',819,,,,,638,638,638,638,,638,638,,,,638,638,,888,888,888,,888,638,',
'638,888,888,,,,888,819,888,888,888,888,888,888,888,,819,819,819,819',
'888,888,888,888,888,888,888,,,888,,,,,,,888,,,888,888,888,888,888,888',
'888,888,888,888,888,888,,888,888,,888,888,888,,,,,,,,,,,,,,,,,,,,888',
',,888,,,888,888,,,888,,888,,888,,888,,,,,,,,888,,,,,888,888,888,888',
',888,888,,,,888,888,,219,219,219,,219,888,,888,219,219,,,,219,,219,219',
'219,219,219,219,219,,,,,,219,219,219,219,219,219,219,,,219,,,,,,,219',
',,219,219,219,219,219,219,219,219,,219,219,219,,219,219,,219,219,219',
',,,,,,,,,,,,,,,,,,,219,,,219,,,219,219,,,219,,,,,,219,,,,,,,,219,,,',
',219,219,219,219,,219,219,,,,219,219,,20,20,20,,20,219,,219,20,20,,',
',20,,20,20,20,20,20,20,20,,,,,,20,20,20,20,20,20,20,,,20,,,,,,,20,,',
'20,20,20,20,20,20,20,20,,20,20,20,,20,20,,20,20,20,,,,,,,,,,,,,,,,,',
',,20,,,20,,,20,20,,,20,,,,,,20,,,,,,,,20,,,,,20,20,20,20,,20,20,,,,20',
'20,,562,562,562,,562,20,,20,562,562,,,,562,,562,562,562,562,562,562',
'562,,,,,,562,562,562,562,562,562,562,,,562,,,,,,,562,,,562,562,562,562',
'562,562,562,562,,562,562,562,,562,562,,562,562,562,,,,,,,,,,,,,,,,,',
',,562,,,562,,,562,562,,,562,,,,,,562,,,,,,,,562,,,,,562,562,562,562',
',562,562,,,,562,562,,222,222,222,,222,562,,562,222,222,,,,222,,222,222',
'222,222,222,222,222,,,,,,222,222,222,222,222,222,222,,,222,,,,,,,222',
',,222,222,222,222,222,222,222,222,,222,222,222,,222,222,,222,222,222',
',,,,,,,,,,,,,,,,,,,222,,,222,,,222,222,,,222,,,,,,222,,,,,,,,222,,,',
',222,222,222,222,,222,222,,,,222,222,,223,223,223,,223,222,,222,223',
'223,,,,223,,223,223,223,223,223,223,223,,,,,,223,223,223,223,223,223',
'223,,,223,,,,,,,223,,,223,223,223,223,223,223,223,223,,223,223,223,',
'223,223,,223,223,223,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,223,,,223,,',
',,,223,,,,,,,,223,,,,,223,223,223,223,,223,223,,,,223,223,,224,224,224',
',224,223,,223,224,224,,,,224,,224,224,224,224,224,224,224,,,,,,224,224',
'224,224,224,224,224,,,224,,,,,,,224,,,224,224,224,224,224,224,224,224',
',224,224,224,,224,224,,224,224,224,,,,,,,,,,,,,,,,,,,,224,,,224,,,224',
'224,,,224,,,,,,224,,,,,,,,224,,,,,224,224,224,224,,224,224,,,,224,224',
',225,225,225,,225,224,,224,225,225,,,,225,,225,225,225,225,225,225,225',
',,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225,225,225,225',
'225,225,225,,225,225,225,,225,225,,225,225,225,,,,,,,,,,,,,,,,,,,,225',
',,225,,,225,225,,,225,,,,,,225,,,,,,,,225,,,,,225,225,225,225,,225,225',
',,,225,225,,226,226,226,,226,225,,225,226,226,,,,226,,226,226,226,226',
'226,226,226,,,,,,226,226,226,226,226,226,226,,,226,,,,,,,226,,,226,226',
'226,226,226,226,226,226,,226,226,226,,226,226,,226,226,226,,,,,,,,,',
',,,,,,,,,,226,,,226,,,226,226,,,226,,,,,,226,,,,,,,,226,,,,,226,226',
'226,226,,226,226,,,,226,226,,227,227,227,,227,226,,226,227,227,,,,227',
',227,227,227,227,227,227,227,,,,,,227,227,227,227,227,227,227,,,227',
',,,,,,227,,,227,227,227,227,227,227,227,227,,227,227,227,,227,227,,227',
'227,227,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,227,,,227,,,,,,227,,,,,,',
',227,,,,,227,227,227,227,,227,227,,,,227,227,,228,228,228,,228,227,',
'227,228,228,,,,228,,228,228,228,228,228,228,228,,,,,,228,228,228,228',
'228,228,228,,,228,,,,,,,228,,,228,228,228,228,228,228,228,228,,228,228',
'228,,228,228,,228,228,228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,228,,,228',
',,,,,228,,,,,,,,228,,,,,228,228,228,228,,228,228,,,,228,228,,229,229',
'229,,229,228,,228,229,229,,,,229,,229,229,229,229,229,229,229,,,,,,229',
'229,229,229,229,229,229,,,229,,,,,,,229,,,229,229,229,229,229,229,229',
'229,,229,229,229,,229,229,,229,229,229,,,,,,,,,,,,,,,,,,,,229,,,229',
',,229,229,,,229,,,,,,229,,,,,,,,229,,,,,229,229,229,229,,229,229,,,',
'229,229,,230,230,230,,230,229,,229,230,230,,,,230,,230,230,230,230,230',
'230,230,,,,,,230,230,230,230,230,230,230,,,230,,,,,,,230,,,230,230,230',
'230,230,230,230,230,,230,230,230,,230,230,,230,230,230,,,,,,,,,,,,,',
',,,,,,230,,,230,,,230,230,,,230,,,,,,230,,,,,,,,230,,,,,230,230,230',
'230,,230,230,,,,230,230,,231,231,231,,231,230,,230,231,231,,,,231,,231',
'231,231,231,231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,',
',231,,,231,231,231,231,231,231,231,231,,231,231,231,,231,231,,231,231',
'231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,231,,,231,,,,,,231,,,,,,,,231',
',,,,231,231,231,231,,231,231,,,,231,231,,232,232,232,,232,231,,231,232',
'232,,,,232,,232,232,232,232,232,232,232,,,,,,232,232,232,232,232,232',
'232,,,232,,,,,,,232,,,232,232,232,232,232,232,232,232,,232,232,232,',
'232,232,,232,232,232,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,232,,,232,,',
',,,232,,,,,,,,232,,,,,232,232,232,232,,232,232,,,,232,232,,233,233,233',
',233,232,,232,233,233,,,,233,,233,233,233,233,233,233,233,,,,,,233,233',
'233,233,233,233,233,,,233,,,,,,,233,,,233,233,233,233,233,233,233,233',
',233,233,233,,233,233,,233,233,233,,,,,,,,,,,,,,,,,,,,233,,,233,,,233',
'233,,,233,,,,,,233,,,,,,,,233,,,,,233,233,233,233,,233,233,,,,233,233',
',234,234,234,,234,233,,233,234,234,,,,234,,234,234,234,234,234,234,234',
',,,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,234,234,234',
'234,234,234,,234,234,234,,234,234,,234,234,234,,,,,,,,,,,,,,,,,,,,234',
',,234,,,234,234,,,234,,,,,,234,,,,,,,,234,,,,,234,234,234,234,,234,234',
',,,234,234,,235,235,235,,235,234,,234,235,235,,,,235,,235,235,235,235',
'235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,,,235,,,235,235',
'235,235,235,235,235,235,,235,235,235,,235,235,,235,235,235,,,,,,,,,',
',,,,,,,,,,235,,,235,,,235,235,,,235,,,,,,235,,,,,,,,235,,,,,235,235',
'235,235,,235,235,,,,235,235,,236,236,236,,236,235,,235,236,236,,,,236',
',236,236,236,236,236,236,236,,,,,,236,236,236,236,236,236,236,,,236',
',,,,,,236,,,236,236,236,236,236,236,236,236,,236,236,236,,236,236,,236',
'236,236,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,236,,,236,,,,,,236,,,,,,',
',236,,,,,236,236,236,236,,236,236,,,,236,236,,237,237,237,,237,236,',
'236,237,237,,,,237,,237,237,237,237,237,237,237,,,,,,237,237,237,237',
'237,237,237,,,237,,,,,,,237,,,237,237,237,237,237,237,237,237,,237,237',
'237,,237,237,,237,237,237,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,237,,,237',
',,,,,237,,,,,,,,237,,,,,237,237,237,237,,237,237,,,,237,237,,238,238',
'238,,238,237,,237,238,238,,,,238,,238,238,238,238,238,238,238,,,,,,238',
'238,238,238,238,238,238,,,238,,,,,,,238,,,238,238,238,238,238,238,238',
'238,,238,238,238,,238,238,,238,238,238,,,,,,,,,,,,,,,,,,,,238,,,238',
',,238,238,,,238,,,,,,238,,,,,,,,238,,,,,238,238,238,238,,238,238,,,',
'238,238,,239,239,239,,239,238,,238,239,239,,,,239,,239,239,239,239,239',
'239,239,,,,,,239,239,239,239,239,239,239,,,239,,,,,,,239,,,239,239,239',
'239,239,239,239,239,,239,239,239,,239,239,,239,239,239,,,,,,,,,,,,,',
',,,,,,239,,,239,,,239,239,,,239,,,,,,239,,,,,,,,239,,,,,239,239,239',
'239,,239,239,,,,239,239,,240,240,240,,240,239,,239,240,240,,,,240,,240',
'240,240,240,240,240,240,,,,,,240,240,240,240,240,240,240,,,240,,,,,',
',240,,,240,240,240,240,240,240,240,240,,240,240,240,,240,240,,240,240',
'240,,,,,,,,,,,,,,,,,,,,240,,,240,,,240,240,,,240,,,,,,240,,,,,,,,240',
',,,,240,240,240,240,,240,240,,,,240,240,,241,241,241,,241,240,,240,241',
'241,,,,241,,241,241,241,241,241,241,241,,,,,,241,241,241,241,241,241',
'241,,,241,,,,,,,241,,,241,241,241,241,241,241,241,241,,241,241,241,',
'241,241,,241,241,241,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,241,,,241,,',
',,,241,,,,,,,,241,,,,,241,241,241,241,,241,241,,,,241,241,,242,242,242',
',242,241,,241,242,242,,,,242,,242,242,242,242,242,242,242,,,,,,242,242',
'242,242,242,242,242,,,242,,,,,,,242,,,242,242,242,242,242,242,242,242',
',242,242,242,,242,242,,242,242,242,,,,,,,,,,,,,,,,,,,,242,,,242,,,242',
'242,,,242,,,,,,242,,,,,,,,242,,,,,242,242,242,242,,242,242,,,,242,242',
',243,243,243,,243,242,,242,243,243,,,,243,,243,243,243,243,243,243,243',
',,,,,243,243,243,243,243,243,243,,,243,,,,,,,243,,,243,243,243,243,243',
'243,243,243,,243,243,243,,243,243,,243,243,243,,,,,,,,,,,,,,,,,,,,243',
',,243,,,243,243,,,243,,,,,,243,,,,,,,,243,,,,,243,243,243,243,,243,243',
',,,243,243,,244,244,244,,244,243,,243,244,244,,,,244,,244,244,244,244',
'244,244,244,,,,,,244,244,244,244,244,244,244,,,244,,,,,,,244,,,244,244',
'244,244,244,244,244,244,,244,244,244,,244,244,,244,244,244,,,,,,,,,',
',,,,,,,,,,244,,,244,,,244,244,,,244,,,,,,244,,,,,,,,244,,,,,244,244',
'244,244,,244,244,,,,244,244,,245,245,245,,245,244,,244,245,245,,,,245',
',245,245,245,245,245,245,245,,,,,,245,245,245,245,245,245,245,,,245',
',,,,,,245,,,245,245,245,245,245,245,245,245,,245,245,245,,245,245,,245',
'245,245,,,,,,,,,,,,,,,,,,,,245,,,245,,,245,245,,,245,,,,,,245,,,,,,',
',245,,,,,245,245,245,245,,245,245,,,,245,245,,246,246,246,,246,245,',
'245,246,246,,,,246,,246,246,246,246,246,246,246,,,,,,246,246,246,246',
'246,246,246,,,246,,,,,,,246,,,246,246,246,246,246,246,246,246,,246,246',
'246,,246,246,,246,246,246,,,,,,,,,,,,,,,,,,,,246,,,246,,,246,246,,,246',
',,,,,246,,,,,,,,246,,,,,246,246,246,246,,246,246,,,,246,246,,247,247',
'247,,247,246,,246,247,247,,,,247,,247,247,247,247,247,247,247,,,,,,247',
'247,247,247,247,247,247,,,247,,,,,,,247,,,247,247,247,247,247,247,247',
'247,,247,247,247,,247,247,,247,247,247,,,,,,,,,,,,,,,,,,,,247,,,247',
',,247,247,,,247,,,,,,247,,,,,,,,247,,,,,247,247,247,247,,247,247,,,',
'247,247,,559,559,559,,559,247,,247,559,559,,,,559,,559,559,559,559,559',
'559,559,,,,,,559,559,559,559,559,559,559,,,559,,,,,,,559,,,559,559,559',
'559,559,559,559,559,559,559,559,559,,559,559,,559,559,559,,,,,,,,,,',
',,,,,,,,,559,,,559,,,559,559,,,559,,559,,559,,559,,,,,,,,559,,,,,559',
'559,559,559,,559,559,,,,559,559,,363,363,363,,363,559,,559,363,363,',
',,363,,363,363,363,363,363,363,363,,,,,,363,363,363,363,363,363,363',
',,363,,,,,,,363,,,363,363,363,363,363,363,363,363,,363,363,363,,363',
'363,,363,363,363,,,,,,,,,,,,,,,,,,,,363,,,363,,,363,363,,,363,,,,,,363',
',,,,,,,363,,,,,363,363,363,363,,363,363,,,,363,363,,549,549,549,,549',
'363,,363,549,549,,,,549,,549,549,549,549,549,549,549,,,,,,549,549,549',
'549,549,549,549,,,549,,,,,,,549,,,549,549,549,549,549,549,549,549,549',
'549,549,549,,549,549,,549,549,549,,,,,,,,,,,,,,,,,,,,549,,,549,,,549',
'549,,,549,,549,,549,,549,,,,,,,,549,,,,,549,549,549,549,,549,549,,,',
'549,549,,253,253,253,,253,549,,549,253,253,,,,253,,253,253,253,253,253',
'253,253,,,,,,253,253,253,253,253,253,253,,,253,,,,,,,253,,,253,253,253',
'253,253,253,253,253,253,253,253,253,,253,253,,253,253,253,,,,,,,,,,',
',,,,,,,,,253,,,253,,,253,253,,,253,,253,,253,,253,,,,,,,,253,,,,,253',
'253,253,253,,253,253,,,,253,253,,254,254,254,,254,253,,253,254,254,',
',,254,,254,254,254,254,254,254,254,,,,,,254,254,254,254,254,254,254',
',,254,,,,,,,254,,,254,254,254,254,254,254,254,254,254,254,254,254,,254',
'254,,254,254,254,,,,,,,,,,,,,,,,,,,,254,,,254,,,254,254,,,254,,254,',
'254,,254,,,,,,,,254,,,,,254,254,254,254,,254,254,,,,254,254,,262,262',
'262,,262,254,,254,262,262,,,,262,,262,262,262,262,262,262,262,,,,,,262',
'262,262,262,262,262,262,,,262,,,,,,,262,,,262,262,262,262,262,262,262',
'262,262,262,262,262,,262,262,,262,262,262,,,,,,,,,,,,,,,,,,,,262,,,262',
',,262,262,,,262,,262,,262,,262,,,,,,,,262,,,,,262,262,262,262,,262,262',
',,,262,262,262,548,548,548,,548,262,,262,548,548,,,,548,,548,548,548',
'548,548,548,548,,,,,,548,548,548,548,548,548,548,,,548,,,,,,,548,,,548',
'548,548,548,548,548,548,548,,548,548,548,,548,548,,548,548,548,,,,,',
',,,,,,,,,,,,,,548,,,548,,,548,548,,,548,,548,,,,548,,,,,,,,548,,,,,548',
'548,548,548,,548,548,,,,548,548,,426,426,426,,426,548,,548,426,426,',
',,426,,426,426,426,426,426,426,426,,,,,,426,426,426,426,426,426,426',
',,426,,,,,,,426,,,426,426,426,426,426,426,426,426,426,426,426,426,,426',
'426,,426,426,426,,,,,,,,,,,,,,,,,,,,426,,,426,,,426,426,,,426,,426,',
'426,,426,,,,,,,,426,,,,,426,426,426,426,,426,426,,,,426,426,,428,428',
'428,,428,426,,426,428,428,,,,428,,428,428,428,428,428,428,428,,,,,,428',
'428,428,428,428,428,428,,,428,,,,,,,428,,,428,428,428,428,428,428,428',
'428,,428,428,428,,428,428,,428,428,428,,,,,,,,,,,,,,,,,,,,428,,,428',
',,428,428,,,428,,,,,,428,,,,,,,,428,,,,,428,428,428,428,,428,428,,,',
'428,428,,269,269,269,,269,428,,428,269,269,,,,269,,269,269,269,269,269',
'269,269,,,,,,269,269,269,269,269,269,269,,,269,,,,,,,269,,,269,269,269',
'269,269,269,269,269,,269,269,269,,269,269,,269,269,269,,,,,,,,,,,,,',
',,,,,,269,,,269,,,269,269,,,269,,,,,,269,,,,,,,,269,,,,,269,269,269',
'269,,269,269,,,,269,269,,741,741,741,,741,269,,269,741,741,,,,741,,741',
'741,741,741,741,741,741,,,,,,741,741,741,741,741,741,741,,,741,,,,,',
',741,,,741,741,741,741,741,741,741,741,,741,741,741,,741,741,,741,741',
'741,,,,,,,,,,,,,,,,,,,,741,,,741,,,741,741,,,741,,,,,,741,,,,,,,,741',
',,,,741,741,741,741,,741,741,,,,741,741,,271,271,271,,271,741,,741,271',
'271,,,,271,,271,271,271,271,271,271,271,,,,,,271,271,271,271,271,271',
'271,,,271,,,,,,,271,,,271,271,271,271,271,271,271,271,,271,271,271,',
'271,271,,271,271,271,,,,,,,,,,,,,,,,,,,,271,,,271,,,271,271,,,271,,',
',,,271,,,,,,,,271,,,,,271,271,271,271,,271,271,,,,271,271,,273,273,273',
',273,271,,271,273,273,,,,273,,273,273,273,273,273,273,273,,,,,,273,273',
'273,273,273,273,273,,,273,,,,,,,273,,,273,273,273,273,273,273,273,273',
',273,273,273,,273,273,,273,273,273,,,,,,,,,,,,,,,,,,,,273,,,273,,,273',
'273,,,273,,,,,,273,,,,,,,,273,,,,,273,273,273,273,,273,273,,,,273,273',
',742,742,742,,742,273,,273,742,742,,,,742,,742,742,742,742,742,742,742',
',,,,,742,742,742,742,742,742,742,,,742,,,,,,,742,,,742,742,742,742,742',
'742,742,742,,742,742,742,,742,742,,742,742,742,,,,,,,,,,,,,,,,,,,,742',
',,742,,,742,742,,,742,,,,,,742,,,,,,,,742,,,,,742,742,742,742,,742,742',
',,,742,742,,743,743,743,,743,742,,742,743,743,,,,743,,743,743,743,743',
'743,743,743,,,,,,743,743,743,743,743,743,743,,,743,,,,,,,743,,,743,743',
'743,743,743,743,743,743,,743,743,743,,743,743,,743,743,743,,,,,,,,,',
',,,,,,,,,,743,,,743,,,743,743,,,743,,,,,,743,,,,,,,,743,,,,,743,743',
'743,743,,743,743,,,,743,743,,278,278,278,278,278,743,,743,278,278,,',
',278,,278,278,278,278,278,278,278,,,,,,278,278,278,278,278,278,278,',
',278,,,,,,278,278,,278,278,278,278,278,278,278,278,278,,278,278,278',
',278,278,,278,278,278,,,,,,,,,,,,,,,,,,,,278,,,278,,,278,278,,,278,',
'278,,,,278,,,,,,,,278,,,,,278,278,278,278,,278,278,,,,278,278,,744,744',
'744,,744,278,,278,744,744,,,,744,,744,744,744,744,744,744,744,,,,,,744',
'744,744,744,744,744,744,,,744,,,,,,,744,,,744,744,744,744,744,744,744',
'744,,744,744,744,,744,744,,744,744,744,,,,,,,,,,,,,,,,,,,,744,,,744',
',,744,744,,,744,,,,,,744,,,,,,,,744,,,,,744,744,744,744,,744,744,,,',
'744,744,,34,34,34,,34,744,,744,34,34,,,,34,,34,34,34,34,34,34,34,,,',
',,34,34,34,34,34,34,34,,,34,,,,,,,34,,,34,34,34,34,34,34,34,34,,34,34',
'34,,34,34,,,,34,740,740,740,740,740,740,740,740,740,740,740,,740,740',
',,740,740,,34,,,34,,,34,34,,,34,,,740,,740,,740,740,740,740,740,740',
'740,,740,,,,34,34,34,34,,34,34,,,,34,34,,740,,34,,,34,,34,649,649,649',
',649,,,,649,649,,,,649,,649,649,649,649,649,649,649,,,,,,649,649,649',
'649,649,649,649,,,649,,,,,,,649,,,649,649,649,649,649,649,649,649,,649',
'649,649,,649,649,,,,649,,,,,,,,,,,,,,,,,,,,649,,,649,,,649,649,,,649',
',,,,,,,909,,909,909,909,,909,,,,,649,649,649,649,,649,649,,,,649,649',
',429,429,429,,429,649,,649,429,429,,,,429,909,429,429,429,429,429,429',
'429,,909,909,909,909,429,429,429,429,429,429,429,,,429,,,,,,,429,,,429',
'429,429,429,429,429,429,429,,429,429,429,,429,429,,429,429,429,,,,,',
',,,,,,,,,,,,,,429,,,429,,,429,429,,,429,,,,,,429,,,,,,,,429,,,,,429',
'429,429,429,,429,429,,,,429,429,,746,746,746,,746,429,,429,746,746,',
',,746,,746,746,746,746,746,746,746,,,,,,746,746,746,746,746,746,746',
',,746,,,,,,,746,,,746,746,746,746,746,746,746,746,,746,746,746,,746',
'746,,746,746,746,,,,,,,,,,,,,,,,,,,,746,,,746,,,746,746,,,746,,,,,,746',
',,,,,,,746,,,,,746,746,746,746,,746,746,,,,746,746,,284,284,284,,284',
'746,,746,284,284,,,,284,,284,284,284,284,284,284,284,,,,,,284,284,284',
'284,284,284,284,,,284,,,,,,,284,,,284,284,284,284,284,284,284,284,,284',
'284,284,,284,284,,,,284,503,503,503,503,503,503,503,503,503,503,503',
',503,503,,,503,503,,284,,,284,,,284,284,,,284,,,503,,503,,503,503,503',
'503,503,503,503,,503,,,,284,284,284,284,,284,284,,,,284,284,,503,,284',
',,284,,284,33,33,33,,33,,,,33,33,,,,33,,33,33,33,33,33,33,33,,,,,,33',
'33,33,33,33,33,33,,,33,,,,,,,33,,,33,33,33,33,33,33,33,33,,33,33,33',
',33,33,,,,33,,,,,,,,,,,,,,,,,,,,33,,,33,,,33,33,,,33,,33,,,,,,,,,,,',
',,,,,33,33,33,33,,33,33,,,,33,33,,430,430,430,,430,33,,33,430,430,,',
',430,,430,430,430,430,430,430,430,,,,,,430,430,430,430,430,430,430,',
',430,,,,,,,430,,,430,430,430,430,430,430,430,430,,430,430,430,,430,430',
',430,430,430,,,,,,,,,,,,,,,,,,,,430,,,430,,,430,430,,,430,,,,,,430,',
',,,,,,430,,,,,430,430,430,430,,430,430,,,,430,430,,513,513,513,,513',
'430,,430,513,513,,,,513,,513,513,513,513,513,513,513,,,,,,513,513,513',
'513,513,513,513,,,513,,,,,,,513,,,513,513,513,513,513,513,513,513,513',
'513,513,513,,513,513,,513,513,513,,,,,,,,,,,,,,,,,,,,513,,,513,,,513',
'513,,,513,,,,,,513,,,,,,,,513,,,,,513,513,513,513,,513,513,,,,513,513',
',510,510,510,,510,513,,513,510,510,,,,510,,510,510,510,510,510,510,510',
',,,,,510,510,510,510,510,510,510,,,510,,,,,,,510,,,510,510,510,510,510',
'510,510,510,510,510,510,510,,510,510,,510,510,510,,,,,,,,,,,,,,,,,,',
',510,,,510,,,510,510,,,510,,510,,,,510,,,,,,,,510,,,,,510,510,510,510',
',510,510,,,,510,510,,506,506,506,,506,510,,510,506,506,,,,506,,506,506',
'506,506,506,506,506,,,,,,506,506,506,506,506,506,506,,,506,,,,,,,506',
',,506,506,506,506,506,506,506,506,,506,506,506,,506,506,,506,506,506',
',,,,,,,,,,,,,,,,,,,506,,,506,,,506,506,,,506,,506,,,,506,,,,,,,,506',
',,,,506,506,506,506,,506,506,,,,506,506,,504,504,504,,504,506,,506,504',
'504,,,,504,,504,504,504,504,504,504,504,,,,,,504,504,504,504,504,504',
'504,,,504,,,,,,,504,,,504,504,504,504,504,504,504,504,,504,504,504,',
'504,504,,504,504,504,,,,,,,,,,,,,,,,,,,,504,,,504,,,504,504,,,504,,',
',,,504,,,,,,,,504,,,,,504,504,504,504,,504,504,,,,504,504,,500,500,500',
',500,504,,504,500,500,,,,500,,500,500,500,500,500,500,500,,,,,,500,500',
'500,500,500,500,500,,,500,,,,,,,500,,,500,500,500,500,500,500,500,500',
',500,500,500,,500,500,,500,500,500,,,,,,,,,,,,,,,,,,,,500,,,500,,,500',
'500,,,500,,,,,,500,,,,,,,,500,,,,,500,500,500,500,,500,500,,,,500,500',
',30,30,30,,30,500,,500,30,30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30',
'30,30,30,30,30,,,30,,,,,,,30,,,30,30,30,30,30,30,30,30,30,30,30,30,',
'30,30,,30,30,30,,,,,,,,,,,,,,,,,,,,30,,,30,,,30,30,,,30,,30,,30,,30',
',,,,,,,30,,,,,30,30,30,30,,30,30,,,,30,30,,499,499,499,,499,30,,30,499',
'499,,,,499,,499,499,499,499,499,499,499,,,,,,499,499,499,499,499,499',
'499,,,499,,,,,,,499,,,499,499,499,499,499,499,499,499,,499,499,499,',
'499,499,,499,499,499,,,,,,,,,,,,,,,,,,,,499,,,499,,,499,499,,,499,,',
',,,499,,,,,,,,499,,,,,499,499,499,499,,499,499,,,,499,499,,831,831,831',
',831,499,,499,831,831,,,,831,,831,831,831,831,831,831,831,,,,,,831,831',
'831,831,831,831,831,,,831,,,,,,,831,,,831,831,831,831,831,831,831,831',
',831,831,831,,831,831,,,,831,,,,,,,,,,,,,,,,,,,,831,,,831,,,831,831',
',,831,,,,,,,,,,,,,,,,,,,831,831,831,831,,831,831,,,,831,831,,498,498',
'498,,498,831,,831,498,498,,,,498,,498,498,498,498,498,498,498,,,,,,498',
'498,498,498,498,498,498,,,498,,,,,,,498,,,498,498,498,498,498,498,498',
'498,,498,498,498,,498,498,,498,498,498,,,,,,,,,,,,,,,,,,,,498,,,498',
',,498,498,,,498,,,,,,498,,,,,,,,498,,,,,498,498,498,498,,498,498,,,',
'498,498,,495,495,495,,495,498,,498,495,495,,,,495,,495,495,495,495,495',
'495,495,,,,,,495,495,495,495,495,495,495,,,495,,,,,,,495,,,495,495,495',
'495,495,495,495,495,,495,495,495,,495,495,,,,495,,,,,,,,,,,,,,,,,,,',
'495,,,495,,,495,495,,,495,,,,,,,,,,,,,,,,,,,495,495,495,495,,495,495',
',,,495,495,,301,301,301,,301,495,,495,301,301,,,,301,,301,301,301,301',
'301,301,301,,,,,,301,301,301,301,301,301,301,,,301,,,,,,,301,,,301,301',
'301,301,301,301,301,301,,301,301,301,,301,301,,,,301,,,,,,,,,,,,,,,',
',,,,301,,,301,,,301,301,,,301,,,,,,,,,,,,,,,,,,,301,301,301,301,,301',
'301,,,,301,301,,673,673,673,,673,301,,301,673,673,,,,673,,673,673,673',
'673,673,673,673,,,,,,673,673,673,673,673,673,673,,,673,,,,,,,673,,,673',
'673,673,673,673,673,673,673,,673,673,673,,673,673,,673,673,673,,,,,',
',,,,,,,,,,,,,,673,,,673,,,673,673,,,673,,,,,,673,,,,,,,,673,,,,,673',
'673,673,673,,673,673,,,,673,673,,488,488,488,,488,673,,673,488,488,',
',,488,,488,488,488,488,488,488,488,,,,,,488,488,488,488,488,488,488',
',,488,,,,,,,488,,,488,488,488,488,488,488,488,488,488,488,488,488,,488',
'488,,488,488,488,,,,,,,,,,,,,,,,,,,,488,,,488,,,488,488,,,488,,488,',
'488,,488,,,,,,,,488,,,,,488,488,488,488,,488,488,,,,488,488,,486,486',
'486,,486,488,,488,486,486,,,,486,,486,486,486,486,486,486,486,,,,,,486',
'486,486,486,486,486,486,,,486,,,,,,,486,,,486,486,486,486,486,486,486',
'486,,486,486,486,,486,486,,,,486,,,,,,,,,,,,,,,,,,,,486,,,486,,,486',
'486,,,486,,,,,,,,,,,,,,,,,,,486,486,486,486,,486,486,,,,486,486,,698',
'698,698,,698,486,,486,698,698,,,,698,,698,698,698,698,698,698,698,,',
',,,698,698,698,698,698,698,698,,,698,,,,,,,698,,,698,698,698,698,698',
'698,698,698,,698,698,698,,698,698,,698,698,698,,,,,,,,,,,,,,,,,,,,698',
',,698,,,698,698,,,698,,,,,,698,,,,,,,,698,,,,,698,698,698,698,,698,698',
',,,698,698,,817,817,817,,817,698,,698,817,817,,,,817,,817,817,817,817',
'817,817,817,,,,,,817,817,817,817,817,817,817,,,817,,,,,,,817,,,817,817',
'817,817,817,817,817,817,,817,817,817,,817,817,,817,817,817,,,,,,,,,',
',,,,,,,,,,817,,,817,,,817,817,,,817,,,,,,817,,,,,,,,817,,,,,817,817',
'817,817,,817,817,,,,817,817,,310,310,310,,310,817,,817,310,310,,,,310',
',310,310,310,310,310,310,310,,,,,,310,310,310,310,310,310,310,,,310',
',,,,,,310,,,310,310,310,310,310,310,310,310,,310,310,310,,310,310,,310',
'310,310,,,,,,,,,,,,,,,,,,,,310,,,310,310,,310,310,,,310,,,,,,310,,,',
',,,,310,,,,,310,310,310,310,,310,310,,,,310,310,,347,347,347,,347,310',
',310,347,347,,,,347,,347,347,347,347,347,347,347,,,,,,347,347,347,347',
'347,347,347,,,347,,,,,,,347,,,347,347,347,347,347,347,347,347,,347,347',
'347,,347,347,,347,347,347,,,,,,,,,,,,,,,,,,,,347,,,347,,,347,347,,,347',
',,,,,347,,,,,,,,347,,,,,347,347,347,347,,347,347,,,,347,347,,471,471',
'471,,471,347,,347,471,471,,,,471,,471,471,471,471,471,471,471,,,,,,471',
'471,471,471,471,471,471,,,471,,,,,,,471,,,471,471,471,471,471,471,471',
'471,471,471,471,471,,471,471,,471,471,471,,,,,,,,,,,,,,,,,,,,471,,,471',
',,471,471,,,471,,471,,471,,471,,,,,,,,471,,,,,471,471,471,471,,471,471',
',,,471,471,,313,313,313,,313,471,,471,313,313,,,,313,,313,313,313,313',
'313,313,313,,,,,,313,313,313,313,313,313,313,,,313,,,,,,,313,,,313,313',
'313,313,313,313,313,313,,313,313,313,,313,313,,313,313,313,,,,,,,,,',
',,,,,,,,,,313,,,313,,,313,313,,,313,,,,,,313,,,,,,,,313,,,,,313,313',
'313,313,,313,313,,,,313,313,,29,29,29,,29,313,,313,29,29,,,,29,,29,29',
'29,29,29,29,29,,,,,,29,29,29,29,29,29,29,,,29,,,,,,,29,,,29,29,29,29',
'29,29,29,29,29,29,29,29,,29,29,,29,29,29,,,,,,,,,,,,,,,,,,,,29,,,29',
',,29,29,,,29,,29,,29,,29,,,,,,,,29,,,,,29,29,29,29,,29,29,,,,29,29,',
'771,771,771,,771,29,,29,771,771,,,,771,,771,771,771,771,771,771,771',
',,,,,771,771,771,771,771,771,771,,,771,,,,,,,771,,,771,771,771,771,771',
'771,771,771,,771,771,771,,771,771,,,,771,,,,,,,,,,,,,,,,,,,,771,,,771',
',,771,771,,,771,,,,,,,,,,,,,,,,,,,771,771,771,771,,771,771,,,,771,771',
',473,473,473,,473,771,,771,473,473,,,,473,,473,473,473,473,473,473,473',
',,,,,473,473,473,473,473,473,473,,,473,,,,,,,473,,,473,473,473,473,473',
'473,473,473,473,473,473,473,,473,473,,473,473,473,,,,,,,,,,,,,,,,,,',
',473,,,473,,,473,473,,,473,,,,473,,473,,,,,,,,473,,,,,473,473,473,473',
',473,473,,,,473,473,,28,28,28,,28,473,,473,28,28,,,,28,,28,28,28,28',
'28,28,28,,,,,,28,28,28,28,28,28,28,,,28,,,,,,,28,,,28,28,28,28,28,28',
'28,28,28,28,28,28,,28,28,,28,28,28,,,,,,,,,,,,,,,,,,,,28,,,28,,,28,28',
',,28,,28,,28,,28,,,,,,,,28,,,,,28,28,28,28,,28,28,,,,28,28,,799,799',
'799,,799,28,,28,799,799,,,,799,,799,799,799,799,799,799,799,,,,,,799',
'799,799,799,799,799,799,,,799,,,,,,,799,,,799,799,799,799,799,799,799',
'799,,799,799,799,,799,799,,799,799,799,,,,,,,,,,,,,,,,,,,,799,,,799',
',,799,799,,,799,,799,,,,799,,,,,,,,799,,,,,799,799,799,799,,799,799',
',,,799,799,,475,475,475,,475,799,,799,475,475,,,,475,,475,475,475,475',
'475,475,475,,,,,,475,475,475,475,475,475,475,,,475,,,,,,,475,,,475,475',
'475,475,475,475,475,475,,475,475,475,,475,475,,475,475,475,,,,,,,,,',
',,,,,,,,,,475,,,475,,,475,475,,,475,,,,,,475,,,,,,,,475,,,,,475,475',
'475,475,,475,475,,,,475,475,,479,479,479,479,479,475,,475,479,479,,',
',479,,479,479,479,479,479,479,479,,,,,,479,479,479,479,479,479,479,',
',479,,,,,,479,479,,479,479,479,479,479,479,479,479,479,,479,479,479',
',479,479,,479,479,479,264,264,264,264,264,264,264,264,264,264,264,,264',
'264,,,264,264,,479,,,479,,,479,479,,,479,,479,264,,264,479,264,264,264',
'264,264,264,264,479,264,,,,479,479,479,479,,479,479,,,,479,479,,264',
',,,479,479,,479,794,794,794,,794,,,,794,794,,,,794,,794,794,794,794',
'794,794,794,,,,,,794,794,794,794,794,794,794,,,794,,,,,,,794,,,794,794',
'794,794,794,794,794,794,,794,794,794,,794,794,,794,794,794,,,,,,,,,',
',,,,,,,,,,794,,,794,,,794,794,,,794,,,,,,794,,,,,,,,794,,,,,794,794',
'794,794,,794,794,,,,794,794,,328,328,328,,328,794,,794,328,328,,,,328',
',328,328,328,328,328,328,328,,,,,,328,328,328,328,328,328,328,,,328',
',,,,,,328,,,328,328,328,328,328,328,328,328,,328,328,328,,328,328,,328',
'328,328,,,,,,,,,,,,,,,,,,,,328,,,328,,,328,328,,,328,,,,,,328,,,,,,',
',328,,,,,328,328,328,328,,328,328,,,,328,328,,389,389,389,,389,328,',
'328,389,389,,,,389,,389,389,389,389,389,389,389,,,,,,389,389,389,389',
'389,389,389,,,389,,,,,,,389,,,389,389,389,389,389,389,389,389,,389,389',
'389,,389,389,,389,389,389,738,738,738,738,738,738,738,738,738,738,738',
',738,738,,,738,738,,389,,,389,,,389,389,,,389,,,738,,738,389,738,738',
'738,738,738,738,738,389,738,,,,389,389,389,389,,389,389,,,,389,389,',
'738,461,,,,389,,389,461,461,461,,,461,461,461,323,461,323,323,323,,323',
',,,,461,,,,,,,,,,461,461,,461,461,461,461,461,,,,,,,,,,323,323,,,,,',
',,323,323,323,323,,399,,,,,,,399,399,399,,461,399,399,399,,399,,461',
',,,,461,461,399,399,399,,,,,,,,,399,399,,399,399,399,399,399,,,461,',
',,,,,,,,,,,,461,,,,,461,,399,399,399,399,399,399,399,399,399,399,399',
'399,399,399,,,399,399,399,,,399,,399,399,,,399,399,,399,,399,,399,,399',
'399,399,399,399,399,399,26,399,399,399,,,,26,26,26,,,26,26,26,,26,399',
'399,,399,,399,,,26,26,26,,,,,,,,,26,26,,26,26,26,26,26,,,,,,,,,,,,,',
',,,,,,,,,,26,26,26,26,26,26,26,26,26,26,26,26,26,26,,,26,26,26,,,26',
',26,26,,,26,26,,26,,26,,26,,26,26,26,26,26,26,26,27,26,26,26,,,,27,27',
'27,,,27,27,27,,27,26,26,,26,,26,,,,27,27,,,,,,,,,27,27,,27,27,27,27',
'27,,,,,,,,,,,,,,,,,,,,,,,,27,27,27,27,27,27,27,27,27,27,27,27,27,27',
',,27,27,27,,,27,,27,27,,,27,27,,27,,27,,27,,27,27,27,27,27,27,27,458',
'27,,27,,,,458,458,458,,,458,458,458,,458,27,27,,27,,27,,,,458,,,,,,',
',,,458,458,,458,458,458,458,458,,,,,,424,424,,,424,,,,,,,,,424,424,',
'424,424,424,424,424,424,424,,,424,424,,,458,424,424,424,424,,,458,,',
'424,,458,458,,,,,424,424,,424,424,424,424,424,424,424,424,424,424,424',
',,424,458,,,,,,,,,,,,,,458,,,,,458,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9',
'9,9,9,9,9,9,9,,,,9,9,9,9,9,9,9,9,9,9,,,,,,9,9,9,9,9,9,9,9,9,,,9,,,,',
',,,,9,9,,9,9,9,9,9,9,9,,,9,9,,,,9,9,9,9,,,,,,,,,,,,,,9,9,,9,9,9,9,9',
'9,9,9,9,9,9,,,9,9,,,,,,,,,,,9,380,380,380,380,380,380,380,380,380,380',
'380,380,380,380,380,380,380,380,380,380,380,380,380,380,,,,380,380,380',
'380,380,380,380,380,380,380,,,,,,380,380,380,380,380,380,380,380,380',
',,380,,,,,,,,,380,380,,380,380,380,380,380,380,380,,,380,380,,,,380',
'380,380,380,,,,,,,,,,,,,,380,380,,380,380,380,380,380,380,380,380,380',
'380,380,,,380,380,,,,,,,,,,,380,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,,,,,,8,8,8,8,8,8,8,8,8,8,,8,,,,,',
',,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,,,,,,,8,8,,8,8,8,8,8,8',
'8,8,8,8,8,,,8,8,,,,,,,,,,,8,588,588,588,588,588,588,588,588,588,588',
'588,588,588,588,588,588,588,588,588,588,588,588,588,588,,,,588,588,588',
'588,588,588,588,588,588,588,,,,,,588,588,588,588,588,588,588,588,588',
',,588,,,,,,,,,588,588,,588,588,588,588,588,588,588,,,588,588,,,,588',
'588,588,588,,,,,,,,,,,,,,588,588,,588,588,588,588,588,588,588,588,588',
'588,588,,,588,588,,,,,,,,,,,588,711,711,711,711,711,711,711,711,711',
'711,711,711,711,711,711,711,711,711,711,711,711,711,711,711,,,,711,711',
'711,711,711,711,711,711,711,711,,,,,,711,711,711,711,711,711,711,711',
'711,,,711,,,,,,,,,711,711,,711,711,711,711,711,711,711,,,711,711,,,',
'711,711,711,711,,,,,,,,,,,,,,711,711,,711,711,711,711,711,711,711,711',
'711,711,711,,,711,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68',
'68,68,68,68,68,68,68,,,,68,68,68,68,68,68,68,68,68,68,,,,,,68,68,68',
'68,68,68,68,68,68,68,68,68,,68,,,,,,,68,68,,68,68,68,68,68,68,68,,,68',
'68,,,,68,68,68,68,,,,,,68,,,,,,,,68,68,,68,68,68,68,68,68,68,68,68,68',
'68,551,551,68,,551,,,,,,,,,551,551,,551,551,551,551,551,551,551,,,551',
'551,,,,551,551,551,551,,,,,,551,,,,,,,,551,551,,551,551,551,551,551',
'551,551,551,551,551,551,557,557,551,,557,,,,,,,,,557,557,,557,557,557',
'557,557,557,557,,,557,557,,,,557,557,557,557,,,,,,557,,,,,,,,557,557',
',557,557,557,557,557,557,557,557,557,557,557,558,558,557,,558,,,,,,',
',,558,558,,558,558,558,558,558,558,558,,,558,558,,,,558,558,558,558',
',,,,,558,,,,,,,,558,558,,558,558,558,558,558,558,558,558,558,558,558',
'425,425,558,,425,,,,,,,,,425,425,,425,425,425,425,425,425,425,,,425',
'425,,,,425,425,425,425,,,,,,425,,,,,,,,425,425,,425,425,425,425,425',
'425,425,425,425,425,425,502,502,425,,502,,,,,,,,,502,502,,502,502,502',
'502,502,502,502,,,502,502,,,,502,502,502,502,,,,,,502,,,,,,,,502,502',
',502,502,502,502,502,502,502,502,502,502,502,501,501,502,,501,,,,,,',
',,501,501,,501,501,501,501,501,501,501,,,501,501,,,,501,501,501,501',
',,,,,501,,,,,,,,501,501,,501,501,501,501,501,501,501,501,501,501,501',
'251,251,501,,251,,,,,,,,,251,251,,251,251,251,251,251,251,251,,,251',
'251,,,,251,251,251,251,,,,,,,,,,,,,,251,251,,251,251,251,251,251,251',
'251,251,251,251,251,250,250,251,,250,,,,,,,,,250,250,,250,250,250,250',
'250,250,250,,,250,250,,,,250,250,250,250,,,,,,,,,,,,,,250,250,,250,250',
'250,250,250,250,250,250,250,250,250,918,918,250,,918,,,,,,,,,918,918',
',918,918,918,918,918,918,918,,,918,918,,,,918,918,918,918,,,,,,918,',
',,,,,,918,918,,918,918,918,918,918,918,918,918,918,918,918,889,889,918',
',889,,,,,,,,,889,889,,889,889,889,889,889,889,889,,,889,889,,,,889,889',
'889,889,,,,,,889,,,,,,,,889,889,,889,889,889,889,889,889,889,889,889',
'889,889,490,490,889,,490,,,,,,,,,490,490,,490,490,490,490,490,490,490',
',,490,490,,,,490,490,490,490,,,,,,490,,,,,,,,490,490,,490,490,490,490',
'490,490,490,490,490,490,490,489,489,490,,489,,,,,,,,,489,489,,489,489',
'489,489,489,489,489,,,489,489,,,,489,489,489,489,,,,,,489,,,,,,,,489',
'489,,489,489,489,489,489,489,489,489,489,489,489,890,890,489,,890,,',
',,,,,,890,890,,890,890,890,890,890,890,890,,,890,890,,,,890,890,890',
'890,,,,,,890,,,,,,,,890,890,,890,890,890,890,890,890,890,890,890,890',
'890,202,202,890,,202,,,,,,,,,202,202,,202,202,202,202,202,202,202,,',
'202,202,,,,202,202,202,202,,,,,,202,,,,,,,,202,202,,202,202,202,202',
'202,202,202,202,202,202,202,201,201,202,,201,,,,,,,,,201,201,,201,201',
'201,201,201,201,201,,,201,201,,,,201,201,201,201,,,,,,201,,,,,,,,201',
'201,,201,201,201,201,201,201,201,201,201,201,201,550,550,201,,550,,',
',,,,,,550,550,,550,550,550,550,550,550,550,,,550,550,,,,550,550,550',
'550,,,,,,550,874,,874,874,874,,874,550,550,,550,550,550,550,550,550',
'550,550,550,550,550,,,550,818,818,818,818,818,818,818,818,818,818,818',
',818,818,874,874,818,818,,,,,,874,874,874,874,,,,,,818,,818,,818,818',
'818,818,818,818,818,,818,,726,726,726,726,726,726,726,726,726,726,726',
',726,726,,818,726,726,,,,,,,,,,,,,,,726,,726,,726,726,726,726,726,726',
'726,,726,,815,815,815,815,815,815,815,815,815,815,815,,815,815,,726',
'815,815,,,,,,,,,,,,,,,815,,815,,815,815,815,815,815,815,815,,815,,21',
'21,21,21,21,21,21,21,21,21,21,,21,21,,815,21,21,,,,,,,,,,,,,,,21,,21',
',21,21,21,21,21,21,21,,21,,650,650,650,650,650,650,650,650,650,650,650',
',650,650,,21,650,650,,,,,,,,,,,,,,,650,,650,,650,650,650,650,650,650',
'650,,650,,731,731,731,731,731,731,731,731,731,731,731,,731,731,,650',
'731,731,,,,,,,,,,,,,,,731,,731,,731,731,731,731,731,731,731,,731,,456',
'456,456,456,456,456,456,456,456,456,456,,456,456,,731,456,456,,,,,,',
',,,,,,,,456,,456,,456,456,456,456,456,456,456,,456,,411,411,411,411',
'411,411,411,411,411,411,411,,411,411,456,456,411,411,,,,,,,,,,,,,,,411',
',411,,411,411,411,411,411,411,411,,411,,736,736,736,736,736,736,736',
'736,736,736,736,,736,736,,411,736,736,,,,,,,,,,,,,,,736,,736,,736,736',
'736,736,736,736,736,,736,,,,,,,,,,,,,,,,,736' ]
        racc_action_check = arr = ::Array.new(23494, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  4661,  1356,   nil,   583,   nil,  9717,  1262,  1175, 21610, 21360,
  1174,   nil,  1145,  1193,  1396,   177,  1143,   658,   nil,    52,
 10473, 23135,  1234,   nil,   452,   291, 21009, 21119, 19939, 19561,
 17671,   nil,  3149, 16789, 16143,   nil,  1124,   532,   396,  1195,
   782,  6559,  6433,  4913,  1119,  1562,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,  1256,  4409,   nil,  5039,  5165,     0,   nil,
  5417,  5543,   nil,   nil,  5669,  5803,  5929,  6055, 21973,   nil,
   nil,   nil,   nil,   nil,   389,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   262,   nil,   nil,
   393,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,  1241,   nil,  6811,   nil,   nil,   nil,   nil,  6945,  7071,
  7197,  7323,  7449,  3779,   nil,   703,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,  1079,   nil,  3653,  8079,  8205,
  8331, 22888, 22827,  8709,  8835,  8961,  9087,  9213,  9339,   nil,
   nil,   474,   136,   207,  1135,   261,  1051,  1096,   nil, 10347,
  3527,  1078, 10725, 10851, 10977, 11103, 11229, 11355, 11481, 11607,
 11733, 11859, 11985, 12111, 12237, 12363, 12489, 12615, 12741, 12867,
 12993, 13119, 13245, 13371, 13497, 13623, 13749, 13875,   nil,   nil,
 22461, 22400,  1056, 14379, 14505,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 14631,   nil, 20317,   nil,   995,   984,   nil, 15135,
  1025, 15387,   nil, 15513,   nil,   nil,   464,  1336, 15891,   965,
  3401,   973,  1007,   965, 16655,  3275,  1173,  1127,   650,  1037,
   654,   nil,  1001,   962,   165,   nil,   nil,   nil,   991,   531,
   934, 18301,   nil,    97,   994,   990,  1130,   nil,   980,   nil,
 19057,  1031,  1028, 19435,   nil,   406,   194,   904,   876,   682,
   899,   nil,   nil, 20796,   115,   141,    48,  9843, 20577,   581,
   956,   837,    90,   165,  1288,   876,   193,   897,   nil,   nil,
   362,   333,   309,   nil,  1519,   nil,    55, 19183,   nil,   nil,
   nil,   453,   404,   450,   540,   558,   539,   430,   359,   346,
   nil,   456,   nil, 14127,   nil,   425,   260,   543,   535,    62,
   524,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   672,
 21485,   nil,   nil,   nil,   nil,   660,   nil,   633,   nil, 20703,
   612,   nil,  1516,   611,   nil,   593,   541,   420,   498, 20899,
   nil,   nil,   nil,   503,   613,   573,   nil,   nil,  1755,  1645,
   nil, 23319,   nil,   505,   nil,   nil,  1127,   nil,   nil,   nil,
   nil,   272,   nil,   532, 21227, 22217, 14883,   238, 15009, 16403,
 16915,  3149,  2141,   355,   311,   451,   426,   382,   372,  3653,
  1889,  3779,  2267,  2519,  1703,  2393,  3527,  2897,  2771,  3401,
  3275,  3023,   573,   728,  2645,  2015, 23273,   242, 21229,   nil,
   nil, 20832,   nil,   nil,   301,   nil,   235,   329,   289,   nil,
   nil, 19309,   nil, 19813,   nil, 20191,   nil,   nil,   nil, 20317,
  1001,   258,   232,   nil,   nil,   101, 18679,   -46, 18553, 22705,
 22644,  1589,  1159,   nil,   nil, 18175,   123,   nil, 18049, 17797,
 17545, 22339, 22278, 16655, 17419,   394, 17293,   nil,   803,   nil,
 17167,   nil,   nil, 17041,   nil,   nil,   nil,   132,  1317,   nil,
   515,   661,   699,   nil,   nil,   nil,   nil,   nil,   nil,   721,
   nil,  1260,   nil,   nil,   nil,   nil,   840,   nil,   nil,   860,
   749,   972,   nil,  2267,    97,   124,   972,  1006, 14757, 14253,
 22949, 22034,   117,   nil,   nil,  1561,   nil, 22095, 22156, 14001,
   nil,   nil, 10599,    -8,   118,  1889,  1609,   nil,   nil,   nil,
   245,   nil,   nil,   nil,   616,   nil,   nil,   nil,   991,   nil,
   nil,   320,   nil,   nil,  1108,   nil,   nil,   nil, 21735,   nil,
  1129,  9591,  9465,   192,  1171,  8583,  8457,  7953,  7827,  1191,
   nil,   nil,  7575,  6685,  1194,   nil,  6307,  5291,   nil,   nil,
   289,    61,   131,     0,  -103,  5669,  1217,   nil,   500,   nil,
  4283,   nil,   nil,   nil,   nil,   337,   nil,  4157,  2015,   nil,
  1037,   nil,  1053,  9969,   nil,   nil,  1390,    33, 10095,   979,
   nil,   941,    58,   157,   919,   401,  1516,   885,   787, 16277,
 23181,   816,   791,   156,   828,   nil,   875,   688,   728,   nil,
   nil,   678,   534,   nil,  1001,  1127,   473,  5982,   nil,  6108,
   nil,   nil,  1440, 18427,   nil,  1649,   nil,   -30,   507,   nil,
   114,   nil,   nil,   835,   nil,   286,   nil,   nil,   nil,   nil,
   345,   nil,    34,   250,   197,    66,   222,   225, 18805,   363,
  1200,   nil,   382,  1390,   579,   nil,   nil,   606,  1516,  5856,
   323, 21860,   nil,   nil,   nil,   nil,   nil,   nil,  2141,   nil,
   nil,   nil,   nil,   nil,   579,  7701, 23043,  6181,   nil,   617,
   nil, 23227,   nil,  6811,   nil,   nil, 23365,   nil, 20703,   nil,
 16143, 15261, 15639, 15765, 16017,    59, 16529,   731,   732,   733,
   nil,   759,   741,   735,   751,   nil,   880,     0,   788,   893,
   nil,   nil,   773,   301,   nil,   nil,   nil,  2393,   nil,   nil,
   179, 19687,   nil,   844,   nil,   825,   933,   817,   823,   825,
   nil,   nil,   827,   833,   nil,   835,   nil,   839,   648,   840,
   905,   nil,   965,   nil, 20451,   974,  2519,  2645,   nil, 20065,
  2771,   188,   187,   nil,  1004,   nil,  2897,   nil,  1008,   900,
   nil,   nil,   915,   899,   nil, 23089,  4787, 18931, 22997, 10148,
   nil,   676,   nil,   nil,  1412,   nil,   961,   949,   nil,   nil,
   nil, 17923,   nil,   970,   nil,   nil,   nil,  3023,   752,   566,
  1260,  1041,  1368,   nil,   nil,   nil,   nil,   nil,  1220,   nil,
   nil,   799,   nil,   925,   nil,  1023,   nil,   nil,   nil,   512,
   766,   985,   nil,    51,   nil,  1126,  1130,   nil,   720,   nil,
   nil,  1134,   nil,   nil, 22989,   nil,  1024,  1025,  1033,  1034,
   nil,  1036,   nil,   861,  1386,  1114,   nil,  1166, 10221, 22583,
 22766,  1222,  1084,  1087,  1088,  1092,  1097,  1031,  1110,  1018,
  4535,   nil,   nil,   nil,   nil,   nil,  4031,   nil,  3905, 16330,
   nil,   nil,  1051,   nil,  1911,   nil,   nil,   nil, 22522,   nil,
   nil,  1149,   165,   153,   164,  1383,   nil,   897,   nil,   nil,
   nil,   892,  1159,   744,  1297,  1299,  1180,  1182,  1192,  1207,
  1252,  1253,   125,  1218,  1222,   nil,   nil,   nil,   nil,   771,
   nil,   nil,   nil,   nil,  1250,   nil ]

racc_action_default = [
    -3,  -547,    -1,  -533,    -4,  -547,    -7,  -547,  -547,  -547,
  -547,   -27,  -547,  -547,  -547,  -274,  -547,   -39,   -42,  -535,
  -547,   -47,   -49,   -50,   -51,  -255,  -255,  -255,  -285,  -320,
  -321,   -67,   -11,   -71,   -79,   -81,  -547,  -462,  -463,  -547,
  -547,  -547,  -547,  -547,  -535,  -236,  -267,  -268,  -269,  -270,
  -271,  -272,  -273,  -523,   -11,  -277,  -546,  -515,  -293,  -375,
  -547,  -547,  -298,  -301,  -533,  -547,  -547,  -547,  -547,  -322,
  -323,  -411,  -412,  -413,  -414,  -415,  -430,  -418,  -419,  -432,
  -434,  -423,  -428,  -444,  -432,  -446,  -447,  -521,  -451,  -452,
  -522,  -454,  -455,  -456,  -457,  -458,  -459,  -460,  -461,  -466,
  -467,  -547,    -2,  -534,  -542,  -543,  -544,    -6,  -547,  -547,
  -547,  -547,  -547,    -3,   -15,  -547,  -110,  -111,  -112,  -113,
  -114,  -115,  -116,  -117,  -118,  -122,  -123,  -124,  -125,  -126,
  -127,  -128,  -129,  -130,  -131,  -132,  -133,  -134,  -135,  -136,
  -137,  -138,  -139,  -140,  -141,  -142,  -143,  -144,  -145,  -146,
  -147,  -148,  -149,  -150,  -151,  -152,  -153,  -154,  -155,  -156,
  -157,  -158,  -159,  -160,  -161,  -162,  -163,  -164,  -165,  -166,
  -167,  -168,  -169,  -170,  -171,  -172,  -173,  -174,  -175,  -176,
  -177,  -178,  -179,  -180,  -181,  -182,  -183,  -184,  -185,  -186,
  -187,  -188,  -189,  -190,  -191,   -20,  -119,   -11,  -547,  -547,
  -245,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -535,  -536,
   -46,  -547,  -462,  -463,  -547,  -274,  -547,  -547,  -228,  -547,
   -11,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,
  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,
  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -547,  -381,  -383,
  -547,  -547,   -56,  -245,  -547,  -292,  -386,  -395,  -397,   -62,
  -392,   -63,  -535,   -64,  -237,  -250,  -259,  -259,  -254,  -547,
  -260,  -547,  -517,  -547,   -65,   -66,  -533,   -12,  -547,   -69,
   -11,  -535,  -547,   -72,   -75,   -11,   -87,   -88,  -547,  -547,
   -95,  -285,  -288,  -535,  -547,  -320,  -321,  -324,  -393,  -547,
   -77,  -547,   -83,  -282,  -448,  -449,  -547,  -213,  -214,  -229,
  -547,  -403,  -547,  -547,  -238,  -539,  -539,  -547,  -547,  -539,
  -547,  -294,  -295,  -487,   -48,  -547,  -547,  -547,  -547,  -533,
  -547,  -534,  -462,  -463,  -547,  -547,  -274,  -547,  -334,  -335,
  -105,  -106,  -547,  -108,  -547,  -274,  -547,  -547,  -462,  -463,
  -313,  -110,  -111,  -151,  -152,  -153,  -169,  -174,  -181,  -184,
  -315,  -547,  -513,  -547,  -416,  -547,  -547,  -547,  -547,  -547,
  -547,   956,    -5,  -545,   -21,   -22,   -23,   -24,   -25,  -547,
  -547,   -17,   -18,   -19,  -120,  -547,   -28,   -37,   -38,  -547,
  -547,   -29,  -194,  -535,  -246,  -259,  -259,  -524,  -525,  -255,
  -390,  -526,  -527,  -525,  -524,  -255,  -389,  -391,  -526,  -527,
   -35,  -202,   -36,  -547,   -40,   -41,  -192,  -260,   -43,   -44,
   -45,  -535,  -291,  -547,  -547,  -547,  -245,  -282,  -547,  -547,
  -547,  -203,  -204,  -205,  -206,  -207,  -208,  -209,  -210,  -215,
  -216,  -217,  -218,  -219,  -220,  -221,  -222,  -223,  -224,  -225,
  -226,  -227,  -230,  -231,  -232,  -233,  -535,  -364,  -255,  -524,
  -525,  -255,   -54,   -57,  -535,  -256,  -364,  -364,  -535,  -287,
  -251,  -547,  -252,  -547,  -257,  -547,  -261,  -520,   -10,  -534,
   -14,  -535,   -68,  -280,   -84,   -73,  -547,  -535,  -245,  -547,
  -547,   -94,  -547,  -448,  -449,  -547,   -80,   -85,  -547,  -547,
  -547,  -547,  -547,  -234,  -547,  -546,  -546,  -276,  -278,  -239,
  -541,  -540,  -241,  -541,  -283,  -284,  -516,  -547,  -487,  -378,
  -512,  -512,  -512,  -486,  -488,  -489,  -490,  -491,  -492,  -493,
  -494,  -547,  -496,  -502,  -504,  -505,  -507,  -508,  -509,  -547,
   -11,  -325,  -326,   -11,  -547,  -547,  -547,  -547,  -547,  -245,
  -547,  -547,  -282,  -306,  -105,  -106,  -107,  -547,  -547,  -245,
  -309,  -468,  -547,  -547,  -547,   -11,  -487,  -317,  -531,  -532,
  -535,  -417,  -431,  -436,  -547,  -438,  -420,  -433,  -547,  -435,
  -422,  -547,  -425,  -427,  -547,  -445,    -8,   -16,  -547,   -26,
  -266,  -547,  -547,  -394,  -547,  -247,  -249,  -547,  -547,   -58,
  -244,  -387,  -547,  -547,   -60,  -388,  -547,  -547,  -290,  -537,
  -524,  -525,  -524,  -525,  -535,  -192,  -547,  -365,  -369,  -367,
   -11,   -52,  -384,   -53,  -385,  -364,  -242,   -11,   -11,  -286,
  -259,  -258,  -262,  -547,  -518,  -519,   -13,   -70,  -547,   -76,
   -82,  -535,  -524,  -525,  -243,   -91,   -93,  -547,   -78,  -547,
  -201,  -211,  -212,  -535,  -546,  -332,   -11,  -404,  -546,  -405,
  -406,  -535,  -539,  -376,   -11,   -11,  -369,  -547,  -479,  -547,
  -482,  -484,  -547,  -547,  -336,  -547,  -338,  -340,  -347,  -493,
  -535,  -506,  -510,  -546,  -327,  -546,  -299,  -328,  -329,  -302,
  -547,  -305,  -547,  -535,  -524,  -525,  -528,  -281,  -547,  -105,
  -106,  -109,  -535,   -11,  -547,  -470,  -311,  -547,   -11,  -487,
  -547,  -547,  -514,  -437,  -440,  -441,  -442,  -443,   -11,  -421,
  -424,  -426,  -429,  -121,  -264,  -547,  -195,  -547,  -538,  -259,
   -31,  -197,   -32,  -198,   -59,   -33,  -200,   -34,  -199,   -61,
  -193,  -547,  -547,  -547,  -547,  -394,  -547,  -512,  -512,  -512,
  -363,  -547,  -369,  -547,  -493,  -500,  -547,   -11,  -547,  -547,
  -253,  -263,   -74,   -89,   -86,  -289,    -9,   -11,  -410,  -333,
  -547,  -547,  -408,  -547,  -240,  -547,  -547,  -535,  -512,  -512,
  -497,  -511,  -512,  -512,  -503,  -512,  -498,  -535,  -547,  -345,
  -547,  -495,  -547,  -330,  -547,  -547,   -11,   -11,  -304,  -547,
   -11,  -394,  -547,  -394,  -547,  -469,   -11,  -314,  -547,  -535,
  -472,  -318,  -547,  -265,   -30,  -196,  -248,  -547,  -235,  -354,
  -356,  -547,  -359,  -361,  -547,  -366,  -547,  -370,  -371,  -373,
  -374,  -547,  -382,  -547,  -396,  -398,  -409,   -11,   -96,   -97,
  -547,  -547,  -104,  -407,  -279,  -379,  -380,  -377,  -547,  -475,
  -477,  -547,  -480,  -547,  -483,  -547,  -485,  -337,  -339,  -343,
  -547,  -348,  -296,  -547,  -297,  -547,  -547,  -262,  -546,  -307,
  -310,  -547,  -316,  -471,  -487,  -439,  -512,  -512,  -512,  -512,
  -501,  -512,  -368,  -547,  -499,  -547,   -55,  -403,  -245,  -547,
  -547,  -103,  -512,  -512,  -512,  -512,  -341,  -547,  -346,  -547,
   -11,  -300,  -303,  -399,  -400,  -401,   -11,  -312,   -11,  -547,
  -351,  -353,  -547,  -357,  -547,  -360,  -362,  -372,  -547,  -282,
  -402,  -535,  -524,  -525,  -528,  -102,  -473,  -547,  -476,  -478,
  -481,  -547,  -344,  -546,  -547,  -547,  -512,  -512,  -512,  -512,
  -281,  -528,  -394,  -512,  -342,  -331,  -308,  -319,  -349,  -547,
  -352,  -355,  -358,  -474,  -512,  -350 ]

clist = [
'119,119,505,312,360,415,393,14,114,196,283,6,14,103,124,124,6,122,122',
'314,265,265,265,267,267,267,547,211,654,252,259,261,463,519,523,211',
'211,211,300,14,288,288,593,792,540,543,686,689,102,388,472,316,319,13',
'207,412,556,279,13,464,119,14,784,708,281,509,512,211,211,516,828,211',
'334,344,344,263,274,275,748,310,2,467,325,326,107,13,329,496,620,751',
'572,680,579,582,366,297,297,627,628,370,399,405,634,880,346,350,631',
'13,631,330,14,282,780,830,6,211,211,211,211,14,14,37,328,378,6,858,37',
'297,297,297,374,375,376,377,797,256,260,777,698,906,622,106,634,624',
'703,806,565,566,711,458,461,874,327,37,286,286,13,339,661,313,752,195',
'567,766,361,13,13,380,324,324,560,827,324,337,625,37,517,663,323,472',
'322,249,372,457,466,796,332,348,348,348,903,880,265,379,409,861,658',
'770,210,364,917,365,106,321,14,211,211,211,795,367,211,211,211,211,211',
'211,324,324,324,324,266,266,266,826,37,634,368,14,666,523,631,631,614',
'37,37,787,858,581,318,369,713,784,690,830,718,265,265,749,315,267,13',
'778,362,317,265,588,757,267,1,,211,211,,745,780,898,,,,211,,701,639',
'13,,,385,523,497,876,,648,,,,14,479,14,485,480,763,288,14,945,641,,779',
',782,282,780,465,932,,869,279,721,,288,468,279,400,481,418,419,420,421',
'487,37,,211,478,,399,405,,,,492,750,,13,,13,211,211,944,,13,,,37,801',
',,,297,,,544,545,803,,,211,693,,659,,282,,16,,297,282,702,16,,,,211',
'908,119,,546,,386,391,,734,587,410,414,,739,,124,,644,122,390,904,,16',
',,390,,,37,644,37,,599,256,286,37,415,260,604,,800,774,760,106,16,,409',
'265,809,523,508,286,,762,,338,,594,,,,,211,,324,324,,,,,,,,,634,266',
',877,644,878,631,,,266,564,,644,,,,,621,497,16,623,630,106,,660,,570',
'497,16,16,,,892,,,265,,409,,561,,14,,,837,636,616,,288,409,211,,,,,',
',288,,,662,,,,600,,211,760,,707,605,,,,,,,,,,,,,,,,,13,,400,,,,936,',
',265,,409,,,,14,297,409,14,265,,,,,211,297,16,,,,,,905,413,211,,600',
'211,942,600,14,,,,,,920,,119,16,900,,704,523,,,723,,729,,,13,124,,13',
'122,,400,37,,,,211,211,,286,,211,211,400,653,211,,497,286,768,13,683',
',772,685,,,,764,14,,,,,,,14,14,,,,16,,16,320,,,288,16,811,,594,,,804',
',,,288,808,,,400,37,,14,37,,,,400,,324,14,14,13,,,594,,,,13,13,687,687',
',,37,,,,,,,,921,,773,,390,756,297,705,706,119,,211,758,759,,13,14,297',
',,,14,,13,13,,802,,,,,14,,,594,,,,,,211,769,,594,,674,692,37,,775,776',
',,,37,37,,,,,600,871,13,605,422,286,38,13,,,14,38,,,,,286,13,,,14,730',
'732,37,840,,735,737,,387,414,37,37,,644,417,,,38,287,287,,,812,,,,211',
',14,14,,324,14,,,13,,469,14,38,,863,747,,,13,,,,37,333,349,349,349,37',
',482,,297,,,833,,884,37,16,,805,,14,,836,,810,13,13,,,13,474,,476,935',
'477,13,,,,38,,15,,,783,,15,785,38,38,,865,866,,37,868,265,,409,674,',
',789,,37,,13,,838,297,,211,,15,290,290,,16,324,,16,814,,14,,,409,,,14',
',14,887,37,37,15,,37,,,,,16,37,,,336,345,345,,,,,,,,687,,,,,,,,,,,,348',
'13,,,594,38,37,13,,13,,,,,,413,15,,,608,,,590,,,15,15,933,38,16,,,,934',
',,16,16,,,,,,,674,,674,400,,,,,,,,,,,,,,,626,,,16,629,,879,37,,881,',
'16,16,37,,37,,637,,,,,,640,38,,38,,,,287,38,,893,,,894,,895,,,,632,',
'320,,635,287,15,,16,,,896,674,16,,,,,,,,,,16,,,,,,15,,,,,,657,,,,632',
',,320,,,,,,,674,,674,937,,,938,,939,,,,,16,,712,,,,,,943,,16,,,,843',
'417,,,,,,674,,,,15,,15,,,954,290,15,,,,,,,16,16,,,16,,,,,290,16,,,,',
',,,,724,,,,632,320,,,,,,,,,,,,,,,,,16,,,,,765,,,,,,,,,,,,,,,761,,,,',
',,,,,,,791,,,,,,,,,38,,,,,,,287,,,,,,,,25,287,,,786,25,,16,,,,,,16,',
'16,,,,,25,,,,,,,,25,25,25,,25,,,,,,,,,,,,,,38,,,38,,,,,25,,813,,,,25',
'25,,,25,,,,,,,38,,847,,,,,,,,,,857,,,,,,,15,,,,,,,290,,,,,,25,,873,290',
',25,25,25,25,25,25,,,,,,,,,,,,,38,,,,867,,,38,38,,,,,,,,,,287,,,320',
',,,15,,,15,287,,668,670,671,,,38,,,,,,,,38,38,,,,,15,,,,,,,,,717,,,',
',,,,,,,,25,25,25,25,,,25,25,25,25,25,25,38,,,,,38,,,,,,25,,,,38,,,,',
',,15,,,,,,,15,15,,,,,,,,,,290,,,,25,25,,,,,,290,,25,38,,,,15,,,,,,38',
',15,15,839,25,,25,,,,,25,,,,,,,,,,,,,,,,,38,38,,,38,,,,,,38,25,15,,',
',,15,,,,,,,,25,25,15,,,,,,,,349,,,,,,38,,,,25,,,,,,,,,,,,,,,,25,,,,',
'15,,,,,,,,,,15,,,,842,,820,822,823,,,,,,,,,,,,,,,,,,,,38,15,15,,,15',
'38,,38,849,850,15,,852,854,,856,,,,25,,,,,,,,,,,,,,,,345,,,,,,15,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,25,,,,,,,,,25,,,,,,,,,,,,,,,,25,,,,,,,15',
',910,911,913,915,15,916,15,,,,,,,,,,926,928,929,930,,,,,,,,25,,,25,',
',,,,25,,,,,,,,,,25,,,25,,,25,,,,,,,,948,950,951,952,,,,953,,,,,,,,,',
',955,,,,,,25,25,,,,25,25,,,25,,218,,,,,,,,264,264,264,,25,,,,,,,25,25',
'307,308,309,,,,,,,,,,,,,264,264,,,,,,,,,,,25,,,,,,,,25,25,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,25,,,,,25,,,,,25,,,,,,,,,,25,,,,,,,,,25,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,25,,,,,,,,,,25,,,,,,,,,,,,,,,,,,,264,392,264',
',,411,416,,25,,25,25,,,25,,,,,,25,218,,,431,432,433,434,435,436,437',
'438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454',
'455,456,,25,,,,264,264,,,,,,,,264,,,,,,,264,,264,,264,,,,,,,,,,,,,,',
',,,,,,,,,,,,25,,,,,,,,,,503,,25,,,,,,25,,25,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,264,,411,615,392,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,264,,264,,264,,,,,,,,,,,,,264,,,,,,,,,,650,651,652,,,,,,264,,,',
'264,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,264,,,,,,,,,,264,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,264,726,,,264,264,731,733,,,,736,738,,,615',
'740,,,,,,,,,,,,,,,,,,,,,,,,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,264,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264,,815',
',,,,,,,,,,,,,731,733,738,736,,818,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,264,,,,,,,,,,,,,,,,,264,815,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,264' ]
        racc_goto_table = arr = ::Array.new(2731, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'54,54,10,8,53,17,22,21,14,14,46,7,21,6,58,58,7,57,57,62,32,32,32,65',
'65,65,85,21,11,36,36,36,37,124,115,21,21,21,47,21,21,21,23,83,82,82',
'84,84,4,26,68,65,65,20,30,26,51,42,20,22,54,21,147,89,43,64,64,21,21',
'64,119,21,21,21,21,41,41,41,112,30,2,129,16,16,5,20,16,48,38,117,141',
'108,141,141,137,60,60,38,38,137,35,35,151,148,52,52,69,20,69,4,21,9',
'146,120,7,21,21,21,21,21,21,49,96,7,7,106,49,60,60,60,16,16,16,16,97',
'66,66,117,98,99,67,88,151,67,100,101,102,103,104,35,35,105,94,49,49',
'49,20,18,93,92,110,15,91,12,90,20,20,29,28,28,87,118,28,86,39,49,121',
'122,123,68,81,125,5,126,128,95,49,49,49,49,130,148,32,2,54,109,131,132',
'19,135,119,136,88,79,21,21,21,21,11,138,21,21,21,21,21,21,28,28,28,28',
'63,63,63,117,49,151,139,21,124,115,69,69,22,49,49,108,106,140,78,142',
'143,147,85,120,144,32,32,113,63,65,20,145,77,61,32,59,38,65,1,,21,21',
',23,146,109,,,,21,,51,48,20,,,9,115,46,112,,48,,,,21,6,21,47,7,23,21',
'21,83,22,,113,,113,9,146,41,109,,84,42,141,,21,41,42,66,43,28,28,28',
'28,43,49,,21,4,,35,35,,,,30,115,,20,,20,21,21,109,,20,,,49,23,,,,60',
',,16,16,23,,,21,22,,26,,9,,25,,60,9,22,25,,,,21,89,54,,4,,19,19,,37',
'14,19,19,,37,,58,,35,57,63,11,,25,,,63,,,49,35,49,,36,66,49,49,17,66',
'36,,82,64,68,88,25,,54,32,124,115,28,49,,48,,25,,30,,,,,21,,28,28,,',
',,,,,,151,63,,113,35,113,69,,,63,28,,35,,,,,36,46,25,36,65,88,,62,,28',
'46,25,25,,,113,,,32,,54,,88,,21,,,82,7,30,,21,54,21,,,,,,,21,,,65,,',
',66,,21,68,,8,66,,,,,,,,,,,,,,,,,20,,66,,,,113,,,32,,54,,,,21,60,54',
'21,32,,,,,21,60,25,,,,,,85,25,21,,66,21,23,66,21,,,,,,10,,54,25,82,',
'16,115,,,14,,65,,,20,58,,20,57,,66,49,,,,21,21,,49,,21,21,66,28,21,',
'46,49,62,20,9,,62,9,,,,46,21,,,,,,,21,21,,,,25,,25,27,,,21,25,53,,30',
',,8,,,,21,8,,,66,49,,21,49,,,,66,,28,21,21,20,,,30,,,,20,20,88,88,,',
'49,,,,,,,,22,,30,,63,9,60,88,88,54,,21,9,9,,20,21,60,,,,21,,20,20,,16',
',,,,21,,,30,,,,,,21,9,,30,,107,63,49,,9,9,,,,49,49,,,,,66,8,20,66,44',
'49,50,20,,,21,50,,,,,49,20,,,21,19,19,49,21,,19,19,,27,19,49,49,,35',
'27,,,50,50,50,,,9,,,,21,,21,21,,28,21,,,20,,44,21,50,,16,111,,,20,,',
',49,50,50,50,50,49,,44,,60,,,9,,21,49,25,,88,,21,,9,,88,20,20,,,20,27',
',27,8,27,20,,,,50,,24,,,111,,24,111,50,50,,9,9,,49,9,32,,54,107,,,107',
',49,,20,,49,60,,21,,24,24,24,,25,28,,25,19,,21,,,54,,,21,,21,9,49,49',
'24,,49,,,,,25,49,,,24,24,24,,,,,,,,88,,,,,,,,,,,,49,20,,,30,50,49,20',
',20,,,,,,25,24,,,44,,,27,,,24,24,9,50,25,,,,9,,,25,25,,,,,,,107,,107',
'66,,,,,,,,,,,,,,,44,,,25,44,,111,49,,111,,25,25,49,,49,,44,,,,,,44,50',
',50,,,,50,50,,111,,,111,,111,,,,27,,27,,27,50,24,,25,,,107,107,25,,',
',,,,,,,25,,,,,,24,,,,,,27,,,,27,,,27,,,,,,,107,,107,111,,,111,,111,',
',,,25,,44,,,,,,111,,25,,,,25,27,,,,,,107,,,,24,,24,,,111,24,24,,,,,',
',25,25,,,25,,,,,24,25,,,,,,,,,27,,,,27,27,,,,,,,,,,,,,,,,,25,,,,,44',
',,,,,,,,,,,,,,27,,,,,,,,,,,,44,,,,,,,,,50,,,,,,,50,,,,,,,,40,50,,,27',
'40,,25,,,,,,25,,25,,,,,40,,,,,,,,40,40,40,,40,,,,,,,,,,,,,,50,,,50,',
',,,40,,27,,,,40,40,,,40,,,,,,,50,,44,,,,,,,,,,44,,,,,,,24,,,,,,,24,',
',,,,40,,44,24,,40,40,40,40,40,40,,,,,,,,,,,,,50,,,,27,,,50,50,,,,,,',
',,,50,,,27,,,,24,,,24,50,,114,114,114,,,50,,,,,,,,50,50,,,,,24,,,,,',
',,,24,,,,,,,,,,,,40,40,40,40,,,40,40,40,40,40,40,50,,,,,50,,,,,,40,',
',,50,,,,,,,24,,,,,,,24,24,,,,,,,,,,24,,,,40,40,,,,,,24,,40,50,,,,24',
',,,,,50,,24,24,50,40,,40,,,,,40,,,,,,,,,,,,,,,,,50,50,,,50,,,,,,50,40',
'24,,,,,24,,,,,,,,40,40,24,,,,,,,,50,,,,,,50,,,,40,,,,,,,,,,,,,,,,40',
',,,,24,,,,,,,,,,24,,,,24,,114,114,114,,,,,,,,,,,,,,,,,,,,50,24,24,,',
'24,50,,50,114,114,24,,114,114,,114,,,,40,,,,,,,,,,,,,,,,24,,,,,,24,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,40,,,,,,,,,40,,,,,,,,,,,,,,,,40,,,,,,,24',
',114,114,114,114,24,114,24,,,,,,,,,,114,114,114,114,,,,,,,,40,,,40,',
',,,,40,,,,,,,,,,40,,,40,,,40,,,,,,,,114,114,114,114,,,,114,,,,,,,,,',
',114,,,,,,40,40,,,,40,40,,,40,,31,,,,,,,,31,31,31,,40,,,,,,,40,40,31',
'31,31,,,,,,,,,,,,,31,31,,,,,,,,,,,40,,,,,,,,40,40,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,40,,,,,40,,,,,40,,,,,,,,,,40,,,,,,,,,40,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,40,,,,,,,,,,40,,,,,,,,,,,,,,,,,,,31,31,31,,,31,31,,40',
',40,40,,,40,,,,,,40,31,,,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31',
'31,31,31,31,31,31,31,31,31,31,31,,40,,,,31,31,,,,,,,,31,,,,,,,31,,31',
',31,,,,,,,,,,,,,,,,,,,,,,,,,,,40,,,,,,,,,,31,,40,,,,,,40,,40,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31,,31,31,31,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,31,,31,,31,,,,,,,,,,,,,31,,,,,,,,,,31,31,31,,,,,,31',
',,,31,,,31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31,31,,,,,,,,,,31,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,31,31,,,31,31,31,31,,,,31,31,,,31,31,,,,,',
',,,,,,,,,,,,,,,,,,,,31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,31,,31,,,,,,,,,,,,,',
'31,31,31,31,,31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'31,,,,,,,,,,,,,,,,,31,31,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,31' ]
        racc_goto_check = arr = ::Array.new(2731, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   258,    80,   nil,    45,    79,    10,    11,   -51,    79,
  -309,  -477,  -491,   nil,     0,   152,    22,  -199,    92,   178,
    53,     7,  -194,  -351,   865,   361,  -149,   585,   108,    53,
    35,  1842,    -8,   nil,   nil,  -101,     4,  -220,  -369,  -288,
  1254,    47,    25,    32,   550,   nil,   -23,     4,  -214,   121,
   760,  -286,    38,   -64,    -8,   nil,   nil,     9,     6,  -129,
    62,   197,   -37,   192,  -250,    -5,   110,  -318,  -217,  -365,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   184,   181,   145,
   nil,   121,  -281,  -640,  -498,  -304,   108,  -176,   138,  -503,
    96,  -199,   104,  -350,    90,  -501,    59,  -555,  -415,  -730,
  -416,  -561,  -204,  -213,  -419,  -660,  -663,   208,  -440,  -595,
  -458,   199,  -540,  -371,   891,  -289,   nil,  -529,  -582,  -683,
  -640,  -147,  -340,   119,  -290,   159,   -65,   nil,   -73,  -177,
  -678,  -310,  -461,   nil,   nil,   125,   125,    15,   129,   145,
  -131,  -275,   157,  -334,  -331,  -416,  -555,  -607,  -718,   nil,
   nil,  -371 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   331,   277,   nil,   311,
   nil,   793,   nil,   276,   nil,   nil,   nil,    11,    12,    18,
   217,   306,   nil,   nil,   215,   216,   nil,   270,    17,   nil,
   423,    21,    22,    23,    24,   647,   nil,   nil,   nil,   nil,
   294,   394,    31,   nil,   nil,    33,    36,    35,   nil,   212,
   213,   343,   nil,   121,   402,   120,   123,    72,    73,   nil,
    45,   nil,   655,   395,   nil,   396,   407,   601,   470,   268,
   254,    46,    47,    48,    49,    50,    51,    52,   nil,   255,
    58,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   541,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   676,   530,   nil,   677,
   nil,   520,   nil,   522,   nil,   781,   617,   nil,   nil,   nil,
   528,   nil,   nil,   nil,   710,   nil,   nil,   406,   nil,   nil,
   nil,   nil,   nil,    71,    74,    75,   nil,   nil,   nil,   nil,
   nil,   577,   nil,   nil,   nil,   521,   532,   533,   755,   536,
   539,   272 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 139, :_reduce_none,
  2, 140, :_reduce_2,
  0, 141, :_reduce_3,
  1, 141, :_reduce_4,
  3, 141, :_reduce_5,
  2, 141, :_reduce_6,
  1, 143, :_reduce_none,
  4, 143, :_reduce_8,
  4, 146, :_reduce_9,
  2, 147, :_reduce_10,
  0, 151, :_reduce_11,
  1, 151, :_reduce_12,
  3, 151, :_reduce_13,
  2, 151, :_reduce_14,
  0, 167, :_reduce_15,
  4, 145, :_reduce_16,
  3, 145, :_reduce_17,
  3, 145, :_reduce_18,
  3, 145, :_reduce_19,
  2, 145, :_reduce_20,
  3, 145, :_reduce_21,
  3, 145, :_reduce_22,
  3, 145, :_reduce_23,
  3, 145, :_reduce_24,
  3, 145, :_reduce_25,
  4, 145, :_reduce_26,
  1, 145, :_reduce_none,
  3, 145, :_reduce_28,
  3, 145, :_reduce_29,
  6, 145, :_reduce_30,
  5, 145, :_reduce_31,
  5, 145, :_reduce_32,
  5, 145, :_reduce_33,
  5, 145, :_reduce_34,
  3, 145, :_reduce_35,
  3, 145, :_reduce_36,
  3, 145, :_reduce_37,
  3, 145, :_reduce_38,
  1, 145, :_reduce_none,
  3, 155, :_reduce_40,
  3, 155, :_reduce_41,
  1, 166, :_reduce_none,
  3, 166, :_reduce_43,
  3, 166, :_reduce_44,
  3, 166, :_reduce_45,
  2, 166, :_reduce_46,
  1, 166, :_reduce_none,
  1, 154, :_reduce_none,
  1, 157, :_reduce_none,
  1, 157, :_reduce_none,
  1, 171, :_reduce_none,
  4, 171, :_reduce_52,
  4, 171, :_reduce_53,
  0, 177, :_reduce_54,
  5, 175, :_reduce_55,
  2, 170, :_reduce_56,
  3, 170, :_reduce_57,
  4, 170, :_reduce_58,
  5, 170, :_reduce_59,
  4, 170, :_reduce_60,
  5, 170, :_reduce_61,
  2, 170, :_reduce_62,
  2, 170, :_reduce_63,
  2, 170, :_reduce_64,
  2, 170, :_reduce_65,
  2, 170, :_reduce_66,
  1, 156, :_reduce_67,
  3, 156, :_reduce_68,
  1, 181, :_reduce_69,
  3, 181, :_reduce_70,
  1, 180, :_reduce_none,
  2, 180, :_reduce_72,
  3, 180, :_reduce_73,
  5, 180, :_reduce_74,
  2, 180, :_reduce_75,
  4, 180, :_reduce_76,
  2, 180, :_reduce_77,
  4, 180, :_reduce_78,
  1, 180, :_reduce_79,
  3, 180, :_reduce_80,
  1, 184, :_reduce_none,
  3, 184, :_reduce_82,
  2, 183, :_reduce_83,
  3, 183, :_reduce_84,
  1, 186, :_reduce_85,
  3, 186, :_reduce_86,
  1, 185, :_reduce_87,
  1, 185, :_reduce_88,
  4, 185, :_reduce_89,
  3, 185, :_reduce_90,
  3, 185, :_reduce_91,
  3, 185, :_reduce_92,
  3, 185, :_reduce_93,
  2, 185, :_reduce_94,
  1, 185, :_reduce_95,
  1, 163, :_reduce_96,
  1, 163, :_reduce_97,
  4, 163, :_reduce_98,
  3, 163, :_reduce_99,
  3, 163, :_reduce_100,
  3, 163, :_reduce_101,
  3, 163, :_reduce_102,
  2, 163, :_reduce_103,
  1, 163, :_reduce_104,
  1, 189, :_reduce_105,
  1, 189, :_reduce_none,
  2, 190, :_reduce_107,
  1, 190, :_reduce_108,
  3, 190, :_reduce_109,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 191, :_reduce_none,
  1, 194, :_reduce_115,
  1, 194, :_reduce_none,
  1, 152, :_reduce_none,
  1, 152, :_reduce_none,
  1, 153, :_reduce_119,
  0, 197, :_reduce_120,
  4, 153, :_reduce_121,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 192, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  3, 169, :_reduce_192,
  5, 169, :_reduce_193,
  3, 169, :_reduce_194,
  5, 169, :_reduce_195,
  6, 169, :_reduce_196,
  5, 169, :_reduce_197,
  5, 169, :_reduce_198,
  5, 169, :_reduce_199,
  5, 169, :_reduce_200,
  4, 169, :_reduce_201,
  3, 169, :_reduce_202,
  3, 169, :_reduce_203,
  3, 169, :_reduce_204,
  3, 169, :_reduce_205,
  3, 169, :_reduce_206,
  3, 169, :_reduce_207,
  3, 169, :_reduce_208,
  3, 169, :_reduce_209,
  3, 169, :_reduce_210,
  4, 169, :_reduce_211,
  4, 169, :_reduce_212,
  2, 169, :_reduce_213,
  2, 169, :_reduce_214,
  3, 169, :_reduce_215,
  3, 169, :_reduce_216,
  3, 169, :_reduce_217,
  3, 169, :_reduce_218,
  3, 169, :_reduce_219,
  3, 169, :_reduce_220,
  3, 169, :_reduce_221,
  3, 169, :_reduce_222,
  3, 169, :_reduce_223,
  3, 169, :_reduce_224,
  3, 169, :_reduce_225,
  3, 169, :_reduce_226,
  3, 169, :_reduce_227,
  2, 169, :_reduce_228,
  2, 169, :_reduce_229,
  3, 169, :_reduce_230,
  3, 169, :_reduce_231,
  3, 169, :_reduce_232,
  3, 169, :_reduce_233,
  3, 169, :_reduce_234,
  6, 169, :_reduce_235,
  1, 169, :_reduce_none,
  1, 165, :_reduce_none,
  1, 199, :_reduce_none,
  2, 199, :_reduce_none,
  4, 199, :_reduce_240,
  2, 199, :_reduce_241,
  3, 204, :_reduce_242,
  0, 205, :_reduce_243,
  1, 205, :_reduce_none,
  0, 160, :_reduce_245,
  1, 160, :_reduce_none,
  2, 160, :_reduce_none,
  4, 160, :_reduce_248,
  2, 160, :_reduce_249,
  1, 179, :_reduce_250,
  2, 179, :_reduce_251,
  2, 179, :_reduce_252,
  4, 179, :_reduce_253,
  1, 179, :_reduce_254,
  0, 208, :_reduce_255,
  2, 174, :_reduce_256,
  2, 207, :_reduce_257,
  2, 206, :_reduce_258,
  0, 206, :_reduce_259,
  1, 201, :_reduce_260,
  2, 201, :_reduce_261,
  3, 201, :_reduce_262,
  4, 201, :_reduce_263,
  3, 164, :_reduce_264,
  4, 164, :_reduce_265,
  2, 164, :_reduce_266,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_none,
  1, 198, :_reduce_275,
  3, 198, :_reduce_276,
  0, 230, :_reduce_277,
  0, 231, :_reduce_278,
  6, 198, :_reduce_279,
  3, 198, :_reduce_280,
  3, 198, :_reduce_281,
  2, 198, :_reduce_282,
  3, 198, :_reduce_283,
  3, 198, :_reduce_284,
  1, 198, :_reduce_285,
  4, 198, :_reduce_286,
  3, 198, :_reduce_287,
  1, 198, :_reduce_288,
  5, 198, :_reduce_289,
  4, 198, :_reduce_290,
  3, 198, :_reduce_291,
  2, 198, :_reduce_292,
  1, 198, :_reduce_none,
  2, 198, :_reduce_294,
  2, 198, :_reduce_295,
  6, 198, :_reduce_296,
  6, 198, :_reduce_297,
  0, 232, :_reduce_298,
  0, 233, :_reduce_299,
  7, 198, :_reduce_300,
  0, 234, :_reduce_301,
  0, 235, :_reduce_302,
  7, 198, :_reduce_303,
  5, 198, :_reduce_304,
  4, 198, :_reduce_305,
  0, 236, :_reduce_306,
  0, 237, :_reduce_307,
  9, 198, :_reduce_308,
  0, 238, :_reduce_309,
  6, 198, :_reduce_310,
  0, 239, :_reduce_311,
  7, 198, :_reduce_312,
  0, 240, :_reduce_313,
  5, 198, :_reduce_314,
  0, 241, :_reduce_315,
  6, 198, :_reduce_316,
  0, 242, :_reduce_317,
  0, 243, :_reduce_318,
  9, 198, :_reduce_319,
  1, 198, :_reduce_320,
  1, 198, :_reduce_321,
  1, 198, :_reduce_322,
  1, 198, :_reduce_323,
  1, 159, :_reduce_none,
  1, 220, :_reduce_none,
  1, 220, :_reduce_none,
  2, 220, :_reduce_327,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  1, 221, :_reduce_none,
  5, 221, :_reduce_331,
  1, 149, :_reduce_none,
  2, 149, :_reduce_333,
  1, 224, :_reduce_none,
  1, 224, :_reduce_none,
  1, 244, :_reduce_336,
  3, 244, :_reduce_337,
  1, 247, :_reduce_338,
  3, 247, :_reduce_339,
  1, 246, :_reduce_none,
  4, 246, :_reduce_341,
  6, 246, :_reduce_342,
  3, 246, :_reduce_343,
  5, 246, :_reduce_344,
  2, 246, :_reduce_345,
  4, 246, :_reduce_346,
  1, 246, :_reduce_347,
  3, 246, :_reduce_348,
  6, 248, :_reduce_349,
  8, 248, :_reduce_350,
  4, 248, :_reduce_351,
  6, 248, :_reduce_352,
  4, 248, :_reduce_353,
  2, 248, :_reduce_none,
  6, 248, :_reduce_355,
  2, 248, :_reduce_356,
  4, 248, :_reduce_357,
  6, 248, :_reduce_358,
  2, 248, :_reduce_359,
  4, 248, :_reduce_360,
  2, 248, :_reduce_361,
  4, 248, :_reduce_362,
  1, 248, :_reduce_363,
  0, 176, :_reduce_364,
  1, 176, :_reduce_365,
  3, 254, :_reduce_366,
  1, 254, :_reduce_367,
  4, 254, :_reduce_368,
  0, 255, :_reduce_369,
  2, 255, :_reduce_370,
  1, 256, :_reduce_371,
  3, 256, :_reduce_372,
  1, 257, :_reduce_373,
  1, 257, :_reduce_none,
  0, 261, :_reduce_375,
  3, 219, :_reduce_376,
  4, 259, :_reduce_377,
  1, 259, :_reduce_378,
  3, 260, :_reduce_379,
  3, 260, :_reduce_380,
  0, 264, :_reduce_381,
  5, 263, :_reduce_382,
  2, 172, :_reduce_383,
  4, 172, :_reduce_384,
  4, 172, :_reduce_385,
  2, 218, :_reduce_386,
  4, 218, :_reduce_387,
  4, 218, :_reduce_388,
  3, 218, :_reduce_389,
  3, 218, :_reduce_390,
  3, 218, :_reduce_391,
  2, 218, :_reduce_392,
  1, 218, :_reduce_393,
  4, 218, :_reduce_394,
  0, 266, :_reduce_395,
  5, 217, :_reduce_396,
  0, 267, :_reduce_397,
  5, 217, :_reduce_398,
  5, 223, :_reduce_399,
  1, 268, :_reduce_400,
  1, 268, :_reduce_none,
  6, 148, :_reduce_402,
  0, 148, :_reduce_403,
  1, 269, :_reduce_404,
  1, 269, :_reduce_none,
  1, 269, :_reduce_none,
  2, 270, :_reduce_407,
  1, 270, :_reduce_none,
  2, 150, :_reduce_409,
  1, 150, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 209, :_reduce_none,
  1, 210, :_reduce_414,
  1, 272, :_reduce_415,
  2, 272, :_reduce_416,
  3, 273, :_reduce_417,
  1, 273, :_reduce_418,
  1, 273, :_reduce_419,
  3, 211, :_reduce_420,
  4, 212, :_reduce_421,
  3, 213, :_reduce_422,
  0, 277, :_reduce_423,
  3, 277, :_reduce_424,
  1, 278, :_reduce_425,
  2, 278, :_reduce_426,
  3, 214, :_reduce_427,
  0, 280, :_reduce_428,
  3, 280, :_reduce_429,
  0, 274, :_reduce_430,
  2, 274, :_reduce_431,
  0, 275, :_reduce_432,
  2, 275, :_reduce_433,
  0, 276, :_reduce_434,
  2, 276, :_reduce_435,
  1, 279, :_reduce_436,
  2, 279, :_reduce_437,
  0, 282, :_reduce_438,
  4, 279, :_reduce_439,
  1, 281, :_reduce_440,
  1, 281, :_reduce_441,
  1, 281, :_reduce_442,
  1, 281, :_reduce_none,
  1, 195, :_reduce_444,
  3, 196, :_reduce_445,
  1, 271, :_reduce_446,
  1, 271, :_reduce_447,
  2, 271, :_reduce_448,
  2, 271, :_reduce_449,
  1, 187, :_reduce_450,
  1, 187, :_reduce_451,
  1, 187, :_reduce_452,
  1, 187, :_reduce_453,
  1, 187, :_reduce_454,
  1, 188, :_reduce_455,
  1, 188, :_reduce_456,
  1, 188, :_reduce_457,
  1, 188, :_reduce_458,
  1, 188, :_reduce_459,
  1, 188, :_reduce_460,
  1, 188, :_reduce_461,
  1, 215, :_reduce_462,
  1, 215, :_reduce_463,
  1, 158, :_reduce_464,
  1, 158, :_reduce_465,
  1, 162, :_reduce_466,
  1, 162, :_reduce_467,
  1, 225, :_reduce_468,
  3, 225, :_reduce_469,
  2, 225, :_reduce_470,
  3, 227, :_reduce_471,
  2, 227, :_reduce_472,
  6, 262, :_reduce_473,
  8, 262, :_reduce_474,
  4, 262, :_reduce_475,
  6, 262, :_reduce_476,
  4, 262, :_reduce_477,
  6, 262, :_reduce_478,
  2, 262, :_reduce_479,
  4, 262, :_reduce_480,
  6, 262, :_reduce_481,
  2, 262, :_reduce_482,
  4, 262, :_reduce_483,
  2, 262, :_reduce_484,
  4, 262, :_reduce_485,
  1, 262, :_reduce_486,
  0, 262, :_reduce_487,
  1, 258, :_reduce_488,
  1, 258, :_reduce_489,
  1, 258, :_reduce_490,
  1, 258, :_reduce_491,
  1, 245, :_reduce_none,
  1, 245, :_reduce_none,
  1, 284, :_reduce_494,
  3, 284, :_reduce_495,
  1, 249, :_reduce_496,
  3, 249, :_reduce_497,
  3, 285, :_reduce_498,
  3, 286, :_reduce_499,
  1, 250, :_reduce_500,
  3, 250, :_reduce_501,
  1, 283, :_reduce_502,
  3, 283, :_reduce_503,
  1, 287, :_reduce_none,
  1, 287, :_reduce_none,
  2, 251, :_reduce_506,
  1, 251, :_reduce_507,
  1, 288, :_reduce_none,
  1, 288, :_reduce_none,
  2, 253, :_reduce_510,
  2, 252, :_reduce_511,
  0, 252, :_reduce_512,
  1, 228, :_reduce_none,
  3, 228, :_reduce_514,
  0, 216, :_reduce_515,
  2, 216, :_reduce_none,
  1, 203, :_reduce_517,
  3, 203, :_reduce_518,
  3, 289, :_reduce_519,
  2, 289, :_reduce_520,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 178, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 173, :_reduce_none,
  1, 265, :_reduce_none,
  1, 265, :_reduce_none,
  1, 265, :_reduce_none,
  1, 229, :_reduce_none,
  1, 229, :_reduce_none,
  0, 142, :_reduce_none,
  1, 142, :_reduce_none,
  0, 168, :_reduce_none,
  1, 168, :_reduce_none,
  2, 182, :_reduce_537,
  2, 161, :_reduce_538,
  0, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 226, :_reduce_542,
  1, 226, :_reduce_none,
  1, 144, :_reduce_none,
  2, 144, :_reduce_none,
  0, 200, :_reduce_546 ]

racc_reduce_n = 547

racc_shift_n = 956

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tREGEXP_END => 63,
  :tUPLUS => 64,
  :tUMINUS => 65,
  :tUMINUS_NUM => 66,
  :tPOW => 67,
  :tCMP => 68,
  :tEQ => 69,
  :tEQQ => 70,
  :tNEQ => 71,
  :tGEQ => 72,
  :tLEQ => 73,
  :tANDOP => 74,
  :tOROP => 75,
  :tMATCH => 76,
  :tNMATCH => 77,
  :tDOT => 78,
  :tDOT2 => 79,
  :tDOT3 => 80,
  :tAREF => 81,
  :tASET => 82,
  :tLSHFT => 83,
  :tRSHFT => 84,
  :tCOLON2 => 85,
  :tCOLON3 => 86,
  :tOP_ASGN => 87,
  :tASSOC => 88,
  :tLPAREN => 89,
  :tLPAREN2 => 90,
  :tRPAREN => 91,
  :tLPAREN_ARG => 92,
  :tLBRACK => 93,
  :tLBRACK2 => 94,
  :tRBRACK => 95,
  :tLBRACE => 96,
  :tLBRACE_ARG => 97,
  :tSTAR => 98,
  :tSTAR2 => 99,
  :tAMPER => 100,
  :tAMPER2 => 101,
  :tTILDE => 102,
  :tPERCENT => 103,
  :tDIVIDE => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tREGEXP_OPT => 119,
  :tWORDS_BEG => 120,
  :tQWORDS_BEG => 121,
  :tSTRING_DBEG => 122,
  :tSTRING_DVAR => 123,
  :tSTRING_END => 124,
  :tSTRING => 125,
  :tSYMBOL => 126,
  :tNL => 127,
  :tEH => 128,
  :tCOLON => 129,
  :tCOMMA => 130,
  :tSPACE => 131,
  :tSEMI => 132,
  :tLAMBDA => 133,
  :tLAMBEG => 134,
  :tCHARACTER => 135,
  :tEQL => 136,
  :tLOWEST => 137 }

racc_nt_base = 138

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tLBRACK",
  "tLBRACK2",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tREGEXP_OPT",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tCHARACTER",
  "tEQL",
  "tLOWEST",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "command_asgn",
  "mlhs",
  "command_call",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "lhs",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "@2",
  "operation",
  "call_args",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "user_variable",
  "keyword_variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "@3",
  "primary",
  "aref_args",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "@4",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "opt_f_block_arg",
  "f_block_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "@19",
  "f_args",
  "do_block",
  "@20",
  "operation3",
  "@21",
  "@22",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "regexp_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@23",
  "f_optarg",
  "f_arg_item",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'ruby19.y', 51)
  def _reduce_2(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 56)
  def _reduce_3(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 60)
  def _reduce_4(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 64)
  def _reduce_5(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 68)
  def _reduce_6(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'ruby19.y', 74)
  def _reduce_8(val, _values, result)
                          result = @builder.preexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 79)
  def _reduce_9(val, _values, result)
                          rescue_bodies     = val[1]
                      else_t,   else_   = val[2]
                      ensure_t, ensure_ = val[3]

                      if rescue_bodies.empty? && !else_.nil?
                        diagnostic :warning, :useless_else, nil, else_t
                      end

                      result = @builder.begin_body(val[0],
                                  rescue_bodies,
                                  else_t,   else_,
                                  ensure_t, ensure_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 95)
  def _reduce_10(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 100)
  def _reduce_11(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 104)
  def _reduce_12(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 108)
  def _reduce_13(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 112)
  def _reduce_14(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 117)
  def _reduce_15(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 121)
  def _reduce_16(val, _values, result)
                          result = @builder.alias(val[0], val[1], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 125)
  def _reduce_17(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.gvar(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 131)
  def _reduce_18(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.back_ref(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 137)
  def _reduce_19(val, _values, result)
                          diagnostic :error, :nth_ref_alias, nil, val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 141)
  def _reduce_20(val, _values, result)
                          result = @builder.undef_method(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 145)
  def _reduce_21(val, _values, result)
                          result = @builder.condition_mod(val[0], nil,
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 150)
  def _reduce_22(val, _values, result)
                          result = @builder.condition_mod(nil, val[0],
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 155)
  def _reduce_23(val, _values, result)
                          result = @builder.loop_mod(:while, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 159)
  def _reduce_24(val, _values, result)
                          result = @builder.loop_mod(:until, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 163)
  def _reduce_25(val, _values, result)
                          rescue_body = @builder.rescue_body(val[1],
                                        nil, nil, nil,
                                        nil, val[2])

                      result = @builder.begin_body(val[0], [ rescue_body ])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 171)
  def _reduce_26(val, _values, result)
                          result = @builder.postexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

# reduce 27 omitted

module_eval(<<'.,.,', 'ruby19.y', 176)
  def _reduce_28(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 180)
  def _reduce_29(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 184)
  def _reduce_30(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 191)
  def _reduce_31(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 198)
  def _reduce_32(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 205)
  def _reduce_33(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 212)
  def _reduce_34(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 219)
  def _reduce_35(val, _values, result)
                          @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 223)
  def _reduce_36(val, _values, result)
                          result = @builder.assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 228)
  def _reduce_37(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 232)
  def _reduce_38(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

# reduce 39 omitted

module_eval(<<'.,.,', 'ruby19.y', 239)
  def _reduce_40(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 243)
  def _reduce_41(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 42 omitted

module_eval(<<'.,.,', 'ruby19.y', 249)
  def _reduce_43(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 253)
  def _reduce_44(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 257)
  def _reduce_45(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 261)
  def _reduce_46(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

# reduce 47 omitted

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

module_eval(<<'.,.,', 'ruby19.y', 273)
  def _reduce_52(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 278)
  def _reduce_53(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 284)
  def _reduce_54(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 288)
  def _reduce_55(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 295)
  def _reduce_56(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 300)
  def _reduce_57(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0],
                                        nil, val[1], nil)

                      begin_t, args, body, end_t = val[2]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 309)
  def _reduce_58(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 314)
  def _reduce_59(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 323)
  def _reduce_60(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 328)
  def _reduce_61(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 337)
  def _reduce_62(val, _values, result)
                          result = @builder.keyword_cmd(:super, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 342)
  def _reduce_63(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 347)
  def _reduce_64(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 352)
  def _reduce_65(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 357)
  def _reduce_66(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 363)
  def _reduce_67(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 367)
  def _reduce_68(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 372)
  def _reduce_69(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 376)
  def _reduce_70(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 71 omitted

module_eval(<<'.,.,', 'ruby19.y', 382)
  def _reduce_72(val, _values, result)
                          result = val[0].
                                  push(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 387)
  def _reduce_73(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 392)
  def _reduce_74(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 398)
  def _reduce_75(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 403)
  def _reduce_76(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1])).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 409)
  def _reduce_77(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 413)
  def _reduce_78(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 418)
  def _reduce_79(val, _values, result)
                          result = [ @builder.splat(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 422)
  def _reduce_80(val, _values, result)
                          result = [ @builder.splat(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

# reduce 81 omitted

module_eval(<<'.,.,', 'ruby19.y', 429)
  def _reduce_82(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 434)
  def _reduce_83(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 438)
  def _reduce_84(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 443)
  def _reduce_85(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 447)
  def _reduce_86(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 452)
  def _reduce_87(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 456)
  def _reduce_88(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 460)
  def _reduce_89(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 464)
  def _reduce_90(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 468)
  def _reduce_91(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 472)
  def _reduce_92(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 476)
  def _reduce_93(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 481)
  def _reduce_94(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 486)
  def _reduce_95(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 491)
  def _reduce_96(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 495)
  def _reduce_97(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 499)
  def _reduce_98(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 503)
  def _reduce_99(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 507)
  def _reduce_100(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 511)
  def _reduce_101(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 515)
  def _reduce_102(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 520)
  def _reduce_103(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 525)
  def _reduce_104(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 530)
  def _reduce_105(val, _values, result)
                          diagnostic :error, :module_name_const, nil, val[0]
                    
    result
  end
.,.,

# reduce 106 omitted

module_eval(<<'.,.,', 'ruby19.y', 536)
  def _reduce_107(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 540)
  def _reduce_108(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 544)
  def _reduce_109(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

module_eval(<<'.,.,', 'ruby19.y', 553)
  def _reduce_115(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

module_eval(<<'.,.,', 'ruby19.y', 562)
  def _reduce_119(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 566)
  def _reduce_120(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 570)
  def _reduce_121(val, _values, result)
                          result = val[0] << val[3]
                    
    result
  end
.,.,

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

module_eval(<<'.,.,', 'ruby19.y', 591)
  def _reduce_192(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 595)
  def _reduce_193(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result  = @builder.assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 605)
  def _reduce_194(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 609)
  def _reduce_195(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result = @builder.op_assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 619)
  def _reduce_196(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 626)
  def _reduce_197(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 633)
  def _reduce_198(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 640)
  def _reduce_199(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 647)
  def _reduce_200(val, _values, result)
                          diagnostic :error, :dynamic_const, nil, val[2], [ val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 651)
  def _reduce_201(val, _values, result)
                          diagnostic :error, :dynamic_const, nil, val[1], [ val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 655)
  def _reduce_202(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 659)
  def _reduce_203(val, _values, result)
                          result = @builder.range_inclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 663)
  def _reduce_204(val, _values, result)
                          result = @builder.range_exclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 667)
  def _reduce_205(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 671)
  def _reduce_206(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 675)
  def _reduce_207(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 679)
  def _reduce_208(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 683)
  def _reduce_209(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 687)
  def _reduce_210(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 691)
  def _reduce_211(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    @builder.integer(val[1]),
                                      val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 698)
  def _reduce_212(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    @builder.float(val[1]),
                                      val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 705)
  def _reduce_213(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 709)
  def _reduce_214(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 713)
  def _reduce_215(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 717)
  def _reduce_216(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 721)
  def _reduce_217(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 725)
  def _reduce_218(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 729)
  def _reduce_219(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 733)
  def _reduce_220(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 737)
  def _reduce_221(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 741)
  def _reduce_222(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 745)
  def _reduce_223(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 749)
  def _reduce_224(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 753)
  def _reduce_225(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 757)
  def _reduce_226(val, _values, result)
                          result = @builder.match_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 761)
  def _reduce_227(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 765)
  def _reduce_228(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 769)
  def _reduce_229(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 773)
  def _reduce_230(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 777)
  def _reduce_231(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 781)
  def _reduce_232(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 785)
  def _reduce_233(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 789)
  def _reduce_234(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0], nil, [ val[2] ], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 794)
  def _reduce_235(val, _values, result)
                          result = @builder.ternary(val[0], val[1],
                                                val[2], val[4], val[5])
                    
    result
  end
.,.,

# reduce 236 omitted

# reduce 237 omitted

# reduce 238 omitted

# reduce 239 omitted

module_eval(<<'.,.,', 'ruby19.y', 805)
  def _reduce_240(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 809)
  def _reduce_241(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 814)
  def _reduce_242(val, _values, result)
                          result = val
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 819)
  def _reduce_243(val, _values, result)
                          result = [ nil, [], nil ]
                    
    result
  end
.,.,

# reduce 244 omitted

module_eval(<<'.,.,', 'ruby19.y', 825)
  def _reduce_245(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 246 omitted

# reduce 247 omitted

module_eval(<<'.,.,', 'ruby19.y', 831)
  def _reduce_248(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 835)
  def _reduce_249(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 840)
  def _reduce_250(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 844)
  def _reduce_251(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 848)
  def _reduce_252(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                      result.concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 853)
  def _reduce_253(val, _values, result)
                          assocs = @builder.associate(nil, val[2], nil)
                      result = val[0] << assocs
                      result.concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 859)
  def _reduce_254(val, _values, result)
                          result =  [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 863)
  def _reduce_255(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 868)
  def _reduce_256(val, _values, result)
                          @lexer.cmdarg = val[0]

                      result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 875)
  def _reduce_257(val, _values, result)
                          result = @builder.block_pass(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 880)
  def _reduce_258(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 884)
  def _reduce_259(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 889)
  def _reduce_260(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 893)
  def _reduce_261(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 897)
  def _reduce_262(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 901)
  def _reduce_263(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 906)
  def _reduce_264(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 910)
  def _reduce_265(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 914)
  def _reduce_266(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

# reduce 270 omitted

# reduce 271 omitted

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

module_eval(<<'.,.,', 'ruby19.y', 927)
  def _reduce_275(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 931)
  def _reduce_276(val, _values, result)
                          result = @builder.begin_keyword(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 935)
  def _reduce_277(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 940)
  def _reduce_278(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 944)
  def _reduce_279(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin(val[0], val[2], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 950)
  def _reduce_280(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 954)
  def _reduce_281(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 958)
  def _reduce_282(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 962)
  def _reduce_283(val, _values, result)
                          result = @builder.array(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 966)
  def _reduce_284(val, _values, result)
                          result = @builder.associate(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 970)
  def _reduce_285(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 974)
  def _reduce_286(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 978)
  def _reduce_287(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], [], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 982)
  def _reduce_288(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 986)
  def _reduce_289(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0],
                                                    val[2], [ val[3] ], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 991)
  def _reduce_290(val, _values, result)
                          result = @builder.not_op(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 995)
  def _reduce_291(val, _values, result)
                          result = @builder.not_op(val[0], val[1], nil, val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 999)
  def _reduce_292(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0])

                      begin_t, args, body, end_t = val[1]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

# reduce 293 omitted

module_eval(<<'.,.,', 'ruby19.y', 1008)
  def _reduce_294(val, _values, result)
                          begin_t, args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1014)
  def _reduce_295(val, _values, result)
                          lambda_call = @builder.call_lambda(val[0])

                      args, (begin_t, body, end_t) = val[1]
                      result      = @builder.block(lambda_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1022)
  def _reduce_296(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  val[3], else_t,
                                                  else_,  val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1029)
  def _reduce_297(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  else_,  else_t,
                                                  val[3], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1036)
  def _reduce_298(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1040)
  def _reduce_299(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1044)
  def _reduce_300(val, _values, result)
                          result = @builder.loop(:while, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1049)
  def _reduce_301(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1053)
  def _reduce_302(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1057)
  def _reduce_303(val, _values, result)
                          result = @builder.loop(:until, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1062)
  def _reduce_304(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[3]

                      result = @builder.case(val[0], val[1],
                                             when_bodies, else_t, else_body,
                                             val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1070)
  def _reduce_305(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[2]

                      result = @builder.case(val[0], nil,
                                             when_bodies, else_t, else_body,
                                             val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1078)
  def _reduce_306(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1082)
  def _reduce_307(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1086)
  def _reduce_308(val, _values, result)
                          result = @builder.for(val[0], val[1],
                                            val[2], val[4],
                                            val[5], val[7], val[8])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1092)
  def _reduce_309(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1097)
  def _reduce_310(val, _values, result)
                          if in_def?
                        diagnostic :error, :class_in_def, nil, val[0]
                      end

                      lt_t, superclass = val[2]
                      result = @builder.def_class(val[0], val[1],
                                                  lt_t, superclass,
                                                  val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1111)
  def _reduce_311(val, _values, result)
                          result = @def_level
                      @def_level = 0

                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1119)
  def _reduce_312(val, _values, result)
                          result = @builder.def_sclass(val[0], val[1], val[2],
                                                   val[5], val[6])

                      @lexer.pop_cmdarg
                      @static_env.unextend

                      @def_level = val[4]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1129)
  def _reduce_313(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1134)
  def _reduce_314(val, _values, result)
                          if in_def?
                        diagnostic :error, :module_in_def, nil, val[0]
                      end

                      result = @builder.def_module(val[0], val[1],
                                                   val[3], val[4])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1146)
  def _reduce_315(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1152)
  def _reduce_316(val, _values, result)
                          result = @builder.def_method(val[0], val[1],
                                  val[3], val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1161)
  def _reduce_317(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1165)
  def _reduce_318(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1171)
  def _reduce_319(val, _values, result)
                          result = @builder.def_singleton(val[0], val[1], val[2],
                                  val[4], val[6], val[7], val[8])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1180)
  def _reduce_320(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1184)
  def _reduce_321(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1188)
  def _reduce_322(val, _values, result)
                          result = @builder.keyword_cmd(:redo, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1192)
  def _reduce_323(val, _values, result)
                          result = @builder.keyword_cmd(:retry, val[0])
                    
    result
  end
.,.,

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

module_eval(<<'.,.,', 'ruby19.y', 1201)
  def _reduce_327(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 328 omitted

# reduce 329 omitted

# reduce 330 omitted

module_eval(<<'.,.,', 'ruby19.y', 1210)
  def _reduce_331(val, _values, result)
                          else_t, else_ = val[4]
                      result = [ val[0],
                                 @builder.condition(val[0], val[1], val[2],
                                                    val[3], else_t,
                                                    else_,  nil),
                               ]
                    
    result
  end
.,.,

# reduce 332 omitted

module_eval(<<'.,.,', 'ruby19.y', 1221)
  def _reduce_333(val, _values, result)
                          result = val
                    
    result
  end
.,.,

# reduce 334 omitted

# reduce 335 omitted

module_eval(<<'.,.,', 'ruby19.y', 1229)
  def _reduce_336(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1235)
  def _reduce_337(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1240)
  def _reduce_338(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1244)
  def _reduce_339(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 340 omitted

module_eval(<<'.,.,', 'ruby19.y', 1250)
  def _reduce_341(val, _values, result)
                          @static_env.declare val[3][0]

                      result = val[0].
                                  push(@builder.restarg(val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1257)
  def _reduce_342(val, _values, result)
                          @static_env.declare val[3][0]

                      result = val[0].
                                  push(@builder.restarg(val[2], val[3])).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1265)
  def _reduce_343(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1270)
  def _reduce_344(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1276)
  def _reduce_345(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1282)
  def _reduce_346(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1289)
  def _reduce_347(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1293)
  def _reduce_348(val, _values, result)
                          result = [ @builder.restarg(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1299)
  def _reduce_349(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1306)
  def _reduce_350(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1314)
  def _reduce_351(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1320)
  def _reduce_352(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1327)
  def _reduce_353(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 354 omitted

module_eval(<<'.,.,', 'ruby19.y', 1334)
  def _reduce_355(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1341)
  def _reduce_356(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1345)
  def _reduce_357(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1351)
  def _reduce_358(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1358)
  def _reduce_359(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1363)
  def _reduce_360(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1369)
  def _reduce_361(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1374)
  def _reduce_362(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1380)
  def _reduce_363(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1385)
  def _reduce_364(val, _values, result)
                          result = @builder.args(nil, [], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1389)
  def _reduce_365(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1394)
  def _reduce_366(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1398)
  def _reduce_367(val, _values, result)
                          result = @builder.args(val[0], [], val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1402)
  def _reduce_368(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1407)
  def _reduce_369(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1411)
  def _reduce_370(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1416)
  def _reduce_371(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1420)
  def _reduce_372(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1425)
  def _reduce_373(val, _values, result)
                          result = @builder.shadowarg(val[0])
                    
    result
  end
.,.,

# reduce 374 omitted

module_eval(<<'.,.,', 'ruby19.y', 1430)
  def _reduce_375(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1434)
  def _reduce_376(val, _values, result)
                          result = [ val[1], val[2] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1441)
  def _reduce_377(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1445)
  def _reduce_378(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1450)
  def _reduce_379(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1454)
  def _reduce_380(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1459)
  def _reduce_381(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1463)
  def _reduce_382(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1470)
  def _reduce_383(val, _values, result)
                          begin_t, block_args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, block_args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1476)
  def _reduce_384(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1482)
  def _reduce_385(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1489)
  def _reduce_386(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.call_method(nil, nil, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1495)
  def _reduce_387(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1501)
  def _reduce_388(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1507)
  def _reduce_389(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1511)
  def _reduce_390(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1517)
  def _reduce_391(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1523)
  def _reduce_392(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.keyword_cmd(:super, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1529)
  def _reduce_393(val, _values, result)
                          result = @builder.keyword_cmd(:zsuper, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1533)
  def _reduce_394(val, _values, result)
                          result = @builder.index(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1538)
  def _reduce_395(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1542)
  def _reduce_396(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1548)
  def _reduce_397(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1552)
  def _reduce_398(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1559)
  def _reduce_399(val, _values, result)
                          result = [ @builder.when(val[0], val[1], val[2], val[3]),
                                 *val[4] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1565)
  def _reduce_400(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 401 omitted

module_eval(<<'.,.,', 'ruby19.y', 1571)
  def _reduce_402(val, _values, result)
                          assoc_t, exc_var = val[2]

                      if val[1]
                        exc_list = @builder.array(nil, val[1], nil)
                      end

                      result = [ @builder.rescue_body(val[0],
                                      exc_list, assoc_t, exc_var,
                                      val[3], val[4]),
                                 *val[5] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1584)
  def _reduce_403(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1589)
  def _reduce_404(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 405 omitted

# reduce 406 omitted

module_eval(<<'.,.,', 'ruby19.y', 1596)
  def _reduce_407(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 408 omitted

module_eval(<<'.,.,', 'ruby19.y', 1602)
  def _reduce_409(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 410 omitted

# reduce 411 omitted

# reduce 412 omitted

# reduce 413 omitted

module_eval(<<'.,.,', 'ruby19.y', 1612)
  def _reduce_414(val, _values, result)
                          result = @builder.string_compose(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1617)
  def _reduce_415(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1621)
  def _reduce_416(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1626)
  def _reduce_417(val, _values, result)
                          result = @builder.string_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1630)
  def _reduce_418(val, _values, result)
                          result = @builder.string(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1634)
  def _reduce_419(val, _values, result)
                          result = @builder.character(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1639)
  def _reduce_420(val, _values, result)
                          result = @builder.xstring_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1644)
  def _reduce_421(val, _values, result)
                          opts   = @builder.regexp_options(val[3])
                      result = @builder.regexp_compose(val[0], val[1], val[2], opts)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1650)
  def _reduce_422(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1655)
  def _reduce_423(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1659)
  def _reduce_424(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1664)
  def _reduce_425(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1668)
  def _reduce_426(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1673)
  def _reduce_427(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1678)
  def _reduce_428(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1682)
  def _reduce_429(val, _values, result)
                          result = val[0] << @builder.string_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1687)
  def _reduce_430(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1691)
  def _reduce_431(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1696)
  def _reduce_432(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1700)
  def _reduce_433(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1705)
  def _reduce_434(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1709)
  def _reduce_435(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1714)
  def _reduce_436(val, _values, result)
                          result = @builder.string_internal(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1718)
  def _reduce_437(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1722)
  def _reduce_438(val, _values, result)
                          @lexer.cond.push(false)
                      @lexer.cmdarg.push(false)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1727)
  def _reduce_439(val, _values, result)
                          @lexer.cond.lexpop
                      @lexer.cmdarg.lexpop

                      result = @builder.begin(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1735)
  def _reduce_440(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1739)
  def _reduce_441(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1743)
  def _reduce_442(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

# reduce 443 omitted

module_eval(<<'.,.,', 'ruby19.y', 1750)
  def _reduce_444(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1755)
  def _reduce_445(val, _values, result)
                          result = @builder.symbol_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1760)
  def _reduce_446(val, _values, result)
                          result = @builder.integer(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1764)
  def _reduce_447(val, _values, result)
                          result = @builder.float(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1768)
  def _reduce_448(val, _values, result)
                          result = @builder.negate(val[0],
                                  @builder.integer(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1773)
  def _reduce_449(val, _values, result)
                          result = @builder.negate(val[0],
                                  @builder.float(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1779)
  def _reduce_450(val, _values, result)
                          result = @builder.ident(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1783)
  def _reduce_451(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1787)
  def _reduce_452(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1791)
  def _reduce_453(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1795)
  def _reduce_454(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1800)
  def _reduce_455(val, _values, result)
                          result = @builder.nil(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1804)
  def _reduce_456(val, _values, result)
                          result = @builder.self(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1808)
  def _reduce_457(val, _values, result)
                          result = @builder.true(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1812)
  def _reduce_458(val, _values, result)
                          result = @builder.false(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1816)
  def _reduce_459(val, _values, result)
                          result = @builder.__FILE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1820)
  def _reduce_460(val, _values, result)
                          result = @builder.__LINE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1824)
  def _reduce_461(val, _values, result)
                          result = @builder.__ENCODING__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1829)
  def _reduce_462(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1833)
  def _reduce_463(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1838)
  def _reduce_464(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1842)
  def _reduce_465(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1847)
  def _reduce_466(val, _values, result)
                          result = @builder.nth_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1851)
  def _reduce_467(val, _values, result)
                          result = @builder.back_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1856)
  def _reduce_468(val, _values, result)
                          result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1860)
  def _reduce_469(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1864)
  def _reduce_470(val, _values, result)
                          yyerrok
                      result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1870)
  def _reduce_471(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])

                      @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1876)
  def _reduce_472(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1881)
  def _reduce_473(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1888)
  def _reduce_474(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1896)
  def _reduce_475(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1902)
  def _reduce_476(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1909)
  def _reduce_477(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1915)
  def _reduce_478(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1922)
  def _reduce_479(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1927)
  def _reduce_480(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1933)
  def _reduce_481(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1940)
  def _reduce_482(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1945)
  def _reduce_483(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1951)
  def _reduce_484(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1956)
  def _reduce_485(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1962)
  def _reduce_486(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1966)
  def _reduce_487(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1971)
  def _reduce_488(val, _values, result)
                          diagnostic :error, :argument_const, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1975)
  def _reduce_489(val, _values, result)
                          diagnostic :error, :argument_ivar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1979)
  def _reduce_490(val, _values, result)
                          diagnostic :error, :argument_gvar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1983)
  def _reduce_491(val, _values, result)
                          diagnostic :error, :argument_cvar, nil, val[0]
                    
    result
  end
.,.,

# reduce 492 omitted

# reduce 493 omitted

module_eval(<<'.,.,', 'ruby19.y', 1991)
  def _reduce_494(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 1997)
  def _reduce_495(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2002)
  def _reduce_496(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2006)
  def _reduce_497(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2011)
  def _reduce_498(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2018)
  def _reduce_499(val, _values, result)
                          @static_env.declare val[0][0]

                      result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2025)
  def _reduce_500(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2029)
  def _reduce_501(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2034)
  def _reduce_502(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2038)
  def _reduce_503(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 504 omitted

# reduce 505 omitted

module_eval(<<'.,.,', 'ruby19.y', 2045)
  def _reduce_506(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2051)
  def _reduce_507(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

# reduce 508 omitted

# reduce 509 omitted

module_eval(<<'.,.,', 'ruby19.y', 2058)
  def _reduce_510(val, _values, result)
                          @static_env.declare val[1][0]

                      result = @builder.blockarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2065)
  def _reduce_511(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2069)
  def _reduce_512(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 513 omitted

module_eval(<<'.,.,', 'ruby19.y', 2075)
  def _reduce_514(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2080)
  def _reduce_515(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 516 omitted

module_eval(<<'.,.,', 'ruby19.y', 2086)
  def _reduce_517(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2090)
  def _reduce_518(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2095)
  def _reduce_519(val, _values, result)
                          result = @builder.pair(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2099)
  def _reduce_520(val, _values, result)
                          result = @builder.pair_keyword(val[0], val[1])
                    
    result
  end
.,.,

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

# reduce 527 omitted

# reduce 528 omitted

# reduce 529 omitted

# reduce 530 omitted

# reduce 531 omitted

# reduce 532 omitted

# reduce 533 omitted

# reduce 534 omitted

# reduce 535 omitted

# reduce 536 omitted

module_eval(<<'.,.,', 'ruby19.y', 2110)
  def _reduce_537(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby19.y', 2114)
  def _reduce_538(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 539 omitted

# reduce 540 omitted

# reduce 541 omitted

module_eval(<<'.,.,', 'ruby19.y', 2120)
  def _reduce_542(val, _values, result)
                        yyerrok
                  
    result
  end
.,.,

# reduce 543 omitted

# reduce 544 omitted

# reduce 545 omitted

module_eval(<<'.,.,', 'ruby19.y', 2129)
  def _reduce_546(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Ruby19
  end   # module Parser
