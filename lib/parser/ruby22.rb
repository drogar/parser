#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


if Kernel.respond_to? :require_relative
  require_relative './../parser'
else
  require 'parser'
end

Parser.check_for_encoding_support

module Parser
  class Ruby22 < Parser::Base

module_eval(<<'...end ruby22.y/module_eval...', 'ruby22.y', 2352)

  def version
    22
  end

  def default_encoding
    Encoding::UTF_8
  end
...end ruby22.y/module_eval...
##### State transition tables begin ###

clist = [
'-578,268,568,214,215,-105,-98,-578,-578,-578,589,-83,217,-578,-578,977',
'-578,268,-288,612,-69,610,568,-93,515,-578,647,647,113,527,647,806,526',
'112,-103,79,-578,-578,568,-578,-578,-578,-578,-578,568,-102,-97,80,-99',
'-483,715,-101,-100,218,214,215,-483,81,-288,647,841,646,646,-100,-102',
'646,-578,-578,-578,-578,-578,-578,-578,-578,-578,-578,-578,-578,-578',
'-578,-104,-104,-578,-578,-578,611,631,609,267,-93,-578,568,-101,-578',
'646,477,815,218,-578,-575,-578,218,-578,-578,267,-578,-578,-578,-578',
'-578,-476,-578,-578,-578,-96,-89,588,-476,-476,-476,113,715,-476,-476',
'-476,112,-476,-578,-574,-93,-578,-578,-93,-92,-476,-578,-476,-476,-476',
'113,113,-93,-101,-94,112,112,-476,-476,218,-476,-476,-476,-476,-476',
'113,-88,113,-574,-91,112,-99,112,113,-102,715,842,-99,112,-102,-101',
'-100,-99,-91,-93,-101,-100,-476,-476,-476,-476,-476,-476,-476,-476,-476',
'-476,-476,-476,-476,-476,-95,268,-476,-476,-476,-490,-476,-476,-491',
'502,-476,-92,860,-476,-476,814,-476,580,-476,113,-476,581,-476,-476',
'112,-476,-476,-476,-476,-476,-291,-476,501,-476,-91,113,396,-291,-291',
'-291,112,398,397,-291,-291,218,-291,-476,214,215,-476,-476,-476,-476',
'806,-476,574,-476,-578,-412,-68,-97,-476,770,-98,263,-291,-291,-99,-291',
'-291,-291,-291,-291,-91,214,215,-91,113,-90,91,92,-486,112,527,113,-91',
'529,267,-486,112,268,91,92,771,444,-291,-291,-291,-291,-291,-291,-291',
'-291,-291,-291,-291,-291,-291,-291,-578,-412,-291,-291,-291,498,630',
'-578,-412,-100,-291,388,-574,-291,597,578,-578,-412,-291,218,-291,597',
'-291,-291,-572,-291,-291,-291,-291,-291,-479,-291,218,-291,831,-578',
'-412,-479,-479,-479,-102,-105,-479,-479,-479,263,-479,-291,93,94,-291',
'-291,490,-94,-479,-291,-479,-479,-479,113,93,94,-103,625,112,850,-479',
'-479,267,-479,-479,-479,-479,-479,488,626,-479,584,599,598,595,597,-484',
'-479,939,599,598,604,-572,-484,579,527,-479,585,529,662,-479,-479,-479',
'-479,-479,-479,-479,-479,-479,-479,-479,-479,-479,-479,-91,-572,-479',
'-479,-479,574,-479,-479,584,-100,-479,486,-93,-479,-479,583,-479,757',
'-479,-265,-479,-102,-479,-479,585,-479,-479,-479,-479,-479,597,-479',
'-291,-479,477,599,598,613,113,-291,-291,-291,-481,112,-291,-291,-291',
'-479,-291,-481,-479,-479,-479,-479,-291,-479,-487,-479,-291,-291,-291',
'-291,-479,-487,218,-571,-575,981,-291,-291,-291,-291,-291,-291,-291',
'-291,548,477,545,544,543,-264,546,597,548,859,545,544,543,597,546,490',
'-578,751,599,598,595,750,-291,-291,-291,-291,-291,-291,-291,-291,-291',
'-291,-291,-291,-291,-291,746,260,-291,-291,-291,-476,773,-291,261,218',
'-291,597,-476,-291,-291,217,-291,-571,-291,446,-291,-476,-291,-291,597',
'-291,-291,-291,-291,-291,-491,-291,-578,-291,445,599,598,597,218,-578',
'-571,599,598,608,-574,747,957,-291,-578,736,-291,-291,-291,-291,833',
'-291,-578,-291,-490,756,515,212,-103,-578,-578,-578,-482,-578,-578,-578',
'-578,576,-578,-482,113,599,598,-89,577,112,861,-578,-578,-578,-578,749',
'-98,575,599,598,602,527,-578,-578,529,-578,-578,-578,-578,-578,862,599',
'598,600,-488,-88,-90,-95,-96,214,215,-488,-479,113,-97,-99,-104,-105',
'112,-479,-488,692,-578,-578,-578,-578,-578,-578,-578,-578,-578,-578',
'-578,-578,-578,-578,865,553,-578,-578,-578,-489,772,-578,-476,867,-578',
'556,-489,-578,-578,-476,-578,869,-578,871,-578,-489,-578,-578,238,-578',
'-578,-578,-578,-578,218,-578,-578,-578,548,260,545,544,543,-485,546',
'873,261,113,564,563,-485,-578,112,557,-578,-578,-578,-578,874,-578,235',
'-578,214,215,237,236,-101,290,69,70,71,9,57,214,215,701,63,64,564,563',
'443,67,877,65,66,68,30,31,72,73,116,117,118,119,120,29,28,27,101,100',
'102,103,741,742,19,509,743,107,108,635,8,45,292,10,105,104,106,95,56',
'97,96,98,879,99,107,108,880,91,92,42,43,41,238,242,247,248,249,244,246',
'254,255,250,251,-292,231,232,507,677,252,253,-292,40,218,508,294,837',
'806,58,59,-292,882,60,506,35,235,806,241,44,237,236,553,233,234,245',
'243,239,20,240,837,806,556,89,79,82,83,440,84,86,85,87,-263,886,441',
'888,80,88,272,256,238,-240,891,442,62,692,81,93,94,290,69,70,71,9,57',
'564,563,-292,63,64,557,893,895,67,-292,65,66,68,30,31,72,73,897,-292',
'899,899,218,29,28,27,101,100,102,103,531,905,19,218,907,399,909,635',
'8,45,292,10,105,104,106,95,56,97,96,98,677,99,107,108,386,91,92,42,43',
'41,238,242,247,248,249,244,246,254,255,250,251,-334,231,232,584,718',
'252,253,-334,40,574,939,33,263,218,58,59,-334,915,60,585,35,235,530',
'241,44,237,236,317,233,234,245,243,239,20,240,918,218,263,89,79,82,83',
'210,84,86,85,87,922,-266,211,711,80,88,709,256,708,707,699,209,62,697',
'81,93,94,290,69,70,71,9,57,695,933,-281,63,64,263,316,693,67,-281,65',
'66,68,30,31,72,73,940,-281,941,512,257,29,28,27,101,100,102,103,692',
'950,19,951,689,685,257,620,8,45,292,10,105,104,106,95,56,97,96,98,683',
'99,107,108,682,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250',
'251,-291,231,232,-281,614,252,253,-291,40,959,-281,33,-575,218,58,59',
'-291,961,60,-281,35,235,962,241,44,237,236,677,233,234,245,243,239,20',
'240,967,736,213,89,79,82,83,-489,84,86,85,87,692,971,-489,973,80,88',
'975,256,218,977,516,-489,62,677,81,93,94,290,69,70,71,9,57,617,520,-488',
'63,64,-263,218,619,67,-488,65,66,68,30,31,72,73,988,-488,666,989,899',
'29,28,27,101,100,102,103,899,936,19,545,544,543,899,546,8,45,292,10',
'105,104,106,95,56,97,96,98,994,99,107,108,-83,91,92,42,43,41,238,242',
'247,248,249,244,246,254,255,250,251,-291,231,232,-292,959,252,253,-291',
'40,218,-292,33,-575,218,58,59,-291,208,60,-292,35,235,207,241,44,237',
'236,799,233,234,245,243,239,20,240,623,624,263,89,79,82,83,517,84,86',
'85,87,218,238,518,-575,80,88,-574,256,682,206,218,442,62,634,81,93,94',
'290,69,70,71,9,57,238,238,986,63,64,238,959,490,67,987,65,66,68,30,31',
'72,73,1013,985,1014,1015,977,29,28,27,101,100,102,103,977,936,19,545',
'544,543,977,546,8,45,292,10,105,104,106,95,56,97,96,98,218,99,107,108',
'121,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,488,231',
'232,218,238,252,253,899,40,959,637,33,109,977,58,59,,,60,,35,235,,241',
'44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,,256,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65',
'66,68,30,31,72,73,116,117,118,119,120,29,28,27,101,100,102,103,,,19',
'116,117,118,119,120,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231,232',
',,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245',
'243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81',
'93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250',
'251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236',
',233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256',
',,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72',
'73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246',
'254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241',
'44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,,256,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248',
'249,244,246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60',
',35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,218,256,,,,,62,,81,93,94,290,69,70,71,9,57,,,',
'63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19',
',,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252,253,,40',
',,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290,69,70',
'71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252',
'253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239',
'20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231',
'232,,,252,253,,40,,,294,,,58,59,,,60,,35,235,,241,44,237,236,,233,234',
'245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62',
',81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,',
',,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246,254,255',
'250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237',
'236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',256,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244',
'246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59,,,60,,35,235',
',241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,256,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292',
'10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247',
'248,249,244,246,254,255,250,251,,231,232,,,252,253,,40,,,33,,,58,59',
',,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290,69,70,71,9,57,,',
',63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19',
',,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252,253,,40',
',,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290,69,70',
'71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,238,242,247,248,249,244,246,254,255,250,251,,231,232,,,252',
'253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239',
'20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,256,,,,,62,,81,93,94,290',
'69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,548,19,545,544,543,,546,8,45,292,10,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,548,,545,544,543,,546,,701,,548,,545',
'544,543,,546,704,,40,,,33,,,58,59,,,60,,35,,,,44,,701,,,,,,,20,,704',
'701,,89,79,82,83,,84,86,85,87,,,,,80,88,,548,,545,544,543,62,546,81',
'93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,701',
'29,28,27,101,100,102,103,,904,19,,,238,,,8,45,292,10,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,238,-597,-597,-597,-597,244',
'246,235,,-597,-597,237,236,,233,234,252,253,,40,,,33,,,58,59,,238,60',
',35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,',
'84,86,85,87,,,235,,80,88,237,236,,233,234,,62,,81,93,94,290,69,70,71',
'9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,238,548,19,545,544,543,,546,8,45,292,10,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,238,,235,,,,237,236,701,548,,545,544',
'543,,546,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44,237,236,,233',
'234,,,239,20,240,701,,,89,79,82,83,,84,86,85,87,,,,,80,88,,548,,545',
'544,543,62,546,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,701,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,,,,,,,,,,,,,',
',,252,253,,40,,,294,,,58,59,,,60,,35,235,,241,44,237,236,,233,234,,',
'239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94',
'290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,238,,,,,,,,,,,,,,,,252,253,,40,,,33,,,58,59',
',,60,,35,235,,241,44,237,236,,233,234,,,239,20,240,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45',
'292,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242',
'247,248,249,244,246,254,255,250,251,,-597,-597,,,252,253,,40,,,33,,',
'58,59,,,60,,35,235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,290,69,70,71,9,57',
',,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',19,,,,,,8,45,292,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,238,,,,,,,,,,,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241',
'44,237,236,,233,234,,,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-597,-597,-597,-597',
'244,246,,,-597,-597,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241',
'44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,,,,,,,62,,81,93,94,5,69,70,71,9,57,,,,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-597,-597,-597,-597',
'244,246,,,-597,-597,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241',
'44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,,,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-597,-597,-597',
'-597,244,246,,,-597,-597,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235',
',241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248',
'249,244,246,254,,250,251,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235',
',241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,,,,62,,81,93,94,5,69,70,71,9,57,,,,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7,10,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249',
'244,246,,,250,251,,,,,,252,253,,40,,,33,,,58,59,,,60,,35,235,,241,44',
'237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85,87,,,,',
'80,88,,,,,,,62,,81,93,94,5,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7,10,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,242,247,248,249,244,246',
'254,255,250,251,,-597,-597,,,252,253,,40,,,33,,,58,59,,,60,,35,235,',
'241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,,,,62,,81,93,94,290,69,70,71,9,57,,,,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,-597,-597',
'-597,-597,244,246,,,-597,-597,,,,,,252,253,,40,,,33,,,58,59,,,60,,35',
'235,,241,44,237,236,,233,234,245,243,239,20,240,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309',
'310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,238,-597,-597,-597',
'-597,244,246,,,-597,-597,,,,,,252,253,,223,,,229,,,58,59,,,60,,,235',
',241,44,237,236,285,233,234,245,243,239,228,240,,,,89,282,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,238,,,,,,,,,,,,,',
',,252,253,,223,,,229,,,58,59,,,60,,,235,,241,44,237,236,,233,234,,,',
'228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94',
'63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103',
',,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,238,,,,,,,,,,,,,,,,252,253,,223,,,229,,,58,59,,,60,,,235,,241,44',
'237,236,,233,234,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306',
'312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,238,,,,,,,,,,,,,,,,252,253,,223,,,229,,,58,59',
',,60,,,235,,,44,237,236,,233,234,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,281,,,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310',
'72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310',
'72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59',
',,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,',
',,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103',
',,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,113,,,,,112,62,,81,93,94,69,70,71',
',57,,,,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100',
'102,103,,,230,,,,,,,307,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,,,313,,,,,,,,,,,,,,,,,,,,348,,,33,,,58,59,,,60,,35,,,,,,,,,,,,,,',
',,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,307,,,105,104,106,353,56,97,96,354,,99,107,108,,91,92,,,313',
',,,,,,,,,,,,,,,,360,,,355,,,229,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',307,,,105,104,106,353,56,97,96,354,,99,107,108,,91,92,,,313,,,,,,,',
',,,,,,,,,,,,355,,,229,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309',
'310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,659,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310',
'72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,659,,279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87',
',,,,80,88,,,,,,,62,,81,93,94,69,70,71,9,57,,,,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,40',
',,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,,,388,62,,81,93,94,69,70,71,,57,,,,63,64,,,,67,,65,66,68',
'30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59',
',,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,',
',,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103',
',,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,,62,,81,93,94,69,70,71,9,57',
',,,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',19,,,,,,8,45,,10,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43',
'41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,',
'89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64',
',,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230',
',,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,279,,44,,,285,,,,,,228',
',,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,307,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,876',
',,229,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,',
',29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',404,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92',
'42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285',
',,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,307,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
',,313,,,,,,,,,,,,,,,,,,,,303,,,229,,,58,59,,,60,,,548,,545,544,543,553',
'546,,,,,,,,,556,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,315,,551,62,',
'81,93,94,69,70,71,,57,564,563,,63,64,557,,,67,,65,66,68,309,310,72,73',
',,,,,305,306,312,101,100,102,103,,,230,,,,,,,307,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,303,,,299,,,58',
'59,,,60,,298,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,',
'69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28',
'27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,404,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31',
'72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88',
',,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,',
',,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,218,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279',
',44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,279',
',44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279',
',44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,307,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,876,,,229,,,58,59,,,60,,,,,,,,,',
',,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,',
',,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89,282',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,',
'105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,',
',,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68',
'309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309',
'310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305',
'306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309',
'310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305',
'306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,',
'230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,',
',29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
'284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59',
',,60,,281,,279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,',
'80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,',
',,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96',
'98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,',
',,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87',
',,,,80,88,218,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310',
'72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,,,,62,,81,93,94,69,70,71,9,57,,,,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,292,10,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,40',
',,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,,,388,62,,81,93,94,69,70,71,9,57,,,,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,8,45,7,10,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,40,,,33,,,58,59,,,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310',
'72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96',
'98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59',
',,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69',
'70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306',
'312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,',
',,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91',
'92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,',
',,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,307,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
',,313,,,,,,,,,,,,,,,,,,,,303,,,299,,,58,59,,,60,,,548,,545,544,543,553',
'546,,,,,,,,,556,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,,551,62,,81',
'93,94,69,70,71,9,57,564,563,,63,64,557,,,67,,65,66,68,30,31,72,73,,',
',,,29,28,27,101,100,102,103,,,19,,,,,,8,45,,10,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,40,,,33,,,58,59',
',,60,,35,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,',
'69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305',
'306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98',
',99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60',
',,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,',
'91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,',
',,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103',
',,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285',
',,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81',
'93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102',
'103,,,230,,,,,,,307,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92',
',,313,,,,,,,,,,,,,,,,,,,,303,,,299,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,',
',,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,',
',,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85',
'87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310',
'72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,307,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,303,,,229',
',,58,59,,,60,,,548,,545,544,543,553,546,,,,,,,,,556,,89,79,82,83,,84',
'86,85,87,,,,,80,88,,,,504,,551,62,,81,93,94,69,70,71,,57,564,563,,63',
'64,557,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103',
',,230,,,,,,,307,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,313',
',,,,,,,,,,,,,,,,,,,947,,,229,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,',
',,,,,,,,,,,223,,,229,,,58,59,,,60,,659,,,,44,,,285,,,,,,228,,,,,89,282',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,',
',45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,',
',,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82',
'83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65',
'66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45',
',,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,',
',,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,19,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,',
',,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
',,58,59,,,60,,404,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73',
',,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56',
'97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,',
'58,59,,,60,,281,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80',
'88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,',
',,,305,306,312,101,100,102,103,,,230,,,,,,,307,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,303,,,299,,,58,59',
',,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279',
',44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279',
',44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101',
'100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108',
',91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279',
',44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,754,',
',,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,307,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,,,313,,,,,,,,,,,,,,,,,,,,303,,,299,,,58,59,,,60,,,,,,,,,',
',,,,,,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93',
'94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,',
',19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41',
',,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,20,,,,,89',
'79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,',
'67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,',
',,,,307,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,,,313,,,,,,',
',,,,,,,,,,,,,303,,,299,,,58,59,,,60,,,,,,,,,,,,,,,,,,,,89,79,82,83,',
'84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309',
'310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104',
'106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223',
',,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87',
',,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72',
'73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95',
'56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229',
'520,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,',
',80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,',
',,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312,101,100',
'102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107,108,',
'91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,659,,279,',
'44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,284,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,279',
',44,,,285,,,,,,228,,,,,89,282,82,83,,84,86,85,87,,,,,80,88,,,,69,70',
'71,62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57',
'81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102',
'103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42',
'43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228',
',,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63',
'64,,,,67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,',
',,,,,45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,',
',,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79',
'82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67',
',65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,',
',105,104,106,95,56,97,96,98,284,99,107,108,,91,92,42,43,41,,,,,,,,,',
',,,,,,,,,,223,,,229,,,58,59,,,60,,281,,279,,44,,,285,,,,,,228,,,,,89',
'282,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,',
',67,,65,66,68,30,31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,',
'45,,,105,104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,',
',,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83',
',84,86,85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66',
'68,309,310,72,73,,,,,,305,306,312,101,100,102,103,,,230,,,,,,,45,,,105',
'104,106,95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,',
',,223,,,229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86',
'85,87,,,,,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30',
'31,72,73,,,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106',
'95,56,97,96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,',
'229,,,58,59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,',
',,80,88,,,,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73',
',,,,,29,28,27,101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97',
'96,98,,99,107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58',
'59,,,60,,,,,,44,,,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,',
',,69,70,71,62,57,81,93,94,63,64,,,,67,,65,66,68,30,31,72,73,,,,,,29',
'28,27,101,100,102,103,,,19,,,,,,,45,,,105,104,106,95,56,97,96,98,,99',
'107,108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,',
',,,44,,,,,,,,,20,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,69,70,71',
'62,57,81,93,94,63,64,,,,67,,65,66,68,309,310,72,73,,,,,,305,306,312',
'101,100,102,103,,,230,,,,,,,45,,,105,104,106,95,56,97,96,98,,99,107',
'108,,91,92,42,43,41,,,,,,,,,,,,,,,,,,,,223,,,229,,,58,59,,,60,,,,,,44',
',,,,,,,,228,,,,,89,79,82,83,,84,86,85,87,,,,,80,88,,,,,-579,,62,,81',
'93,94,-579,-579,-579,,,-579,-579,-579,,-579,,,,,,,,,-579,-579,-579,-579',
',,,,,,,-579,-579,,-579,-579,-579,-579,-579,,,,,,,,,,,,,,,,,,,,,,,-579',
'-579,-579,-579,-579,-579,-579,-579,-579,-579,-579,-579,-579,-579,,,-579',
'-579,-579,,,-579,,,-579,,,-579,-579,,-579,,-579,,-579,,-579,-579,,-579',
'-579,-579,-579,-579,,-579,-579,-579,,,,,,,,,,,,,,-579,,,-579,-579,-579',
'-579,-282,-579,,-579,,,,-282,-282,-282,,,-282,-282,-282,,-282,,,,,,',
',,,-282,-282,-282,,,,,,,,-282,-282,,-282,-282,-282,-282,-282,,,,,,,',
',,,,,,,,,,,,,,,-282,-282,-282,-282,-282,-282,-282,-282,-282,-282,-282',
'-282,-282,-282,,,-282,-282,-282,,,-282,,,-282,,,-282,-282,,-282,,-282',
',-282,,-282,-282,,-282,-282,-282,-282,-282,,-282,,-282,,,,,,,,,,,,,',
'-282,,,-282,-282,-282,-282,-580,-282,,-282,,,,-580,-580,-580,,,-580',
'-580,-580,,-580,,,,,,,,,-580,-580,-580,-580,,,,,,,,-580,-580,,-580,-580',
'-580,-580,-580,,,,,,,,,,,,,,,,,,,,,,,-580,-580,-580,-580,-580,-580,-580',
'-580,-580,-580,-580,-580,-580,-580,,,-580,-580,-580,,,-580,,,-580,,',
'-580,-580,,-580,,-580,,-580,,-580,-580,,-580,-580,-580,-580,-580,,-580',
'-580,-580,548,,545,544,543,553,546,,,,,,,-580,,556,-580,-580,-580,-580',
'-411,-580,,-580,,,,-411,-411,-411,,,-411,-411,-411,,-411,551,,,,,,,',
'-411,-411,-411,564,563,,,,557,,,-411,-411,,-411,-411,-411,-411,-411',
',,,,,,,,,,,,,,,,,,,,,,-411,-411,-411,-411,-411,-411,-411,-411,-411,-411',
'-411,-411,-411,-411,,,-411,-411,-411,,,-411,,263,-411,,,-411,-411,,-411',
',-411,,-411,,-411,-411,,-411,-411,-411,-411,-411,-298,-411,-411,-411',
',,,-298,-298,-298,,,-298,-298,-298,,-298,-411,,,-411,-411,,-411,,-411',
'-298,-298,,,,,,,,,-298,-298,,-298,-298,-298,-298,-298,,,,,,,,,,,,,,',
',,,,,,,,-298,-298,-298,-298,-298,-298,-298,-298,-298,-298,-298,-298',
'-298,-298,,,-298,-298,-298,,,-298,,272,-298,,,-298,-298,,-298,,-298',
',-298,,-298,-298,,-298,-298,-298,-298,-298,,-298,-246,-298,,,,,,-246',
'-246,-246,,,-246,-246,-246,-298,-246,,-298,-298,,-298,,-298,,-246,-246',
'-246,,,,,,,,,-246,-246,,-246,-246,-246,-246,-246,,,,,,,,,,,,,,,,,,,',
',,,-246,-246,-246,-246,-246,-246,-246,-246,-246,-246,-246,-246,-246',
'-246,,,-246,-246,-246,,,-246,,263,-246,,,-246,-246,,-246,,-246,,-246',
',-246,-246,,-246,-246,-246,-246,-246,,-246,-246,-246,,,,,,,,,,,,,,-246',
',-246,-246,-246,,-246,,-246,-246,-246,-246,,,-246,-246,-246,548,-246',
'545,544,543,553,546,,,,-246,-246,,,,556,,,,,,-246,-246,,-246,-246,-246',
'-246,-246,,,,,,,,548,551,545,544,543,553,546,,,,561,560,564,563,,556',
',557,,548,,545,544,543,553,546,-246,,,,,,,-246,556,,,551,263,-246,,',
',218,,,561,560,564,563,,,,557,,,551,,,,,-246,-246,,,561,560,564,563',
',,,557,,,,-246,,,-246,,,,,-246,173,184,174,197,170,190,180,179,200,201',
'195,178,177,172,198,202,203,182,171,185,189,191,183,176,,,,192,199,194',
'193,186,196,181,169,188,187,,,,,,168,175,166,167,163,164,165,124,126',
',,125,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160',
'146,147,,,,,,,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133',
'155,134,,,162,89,,,,,,,,,,,,,,88,173,184,174,197,170,190,180,179,200',
'201,195,178,177,172,198,202,203,182,171,185,189,191,183,176,,,,192,199',
'194,193,186,196,181,169,188,187,,,,,,168,175,166,167,163,164,165,124',
'126,,,125,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159',
'160,146,147,,,,,,,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141',
'133,155,134,,,162,89,,,,,,,,,,,,,,88,173,184,174,197,170,190,180,179',
'200,201,195,178,177,172,198,202,203,182,171,185,189,191,183,176,,,,192',
'199,194,193,186,196,181,169,188,187,,,,,,168,175,166,167,163,164,165',
'124,126,,,125,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140',
',,,159,160,146,147,,,,,,,,,,,,,,151,150,,135,156,153,152,161,148,149',
'143,141,133,155,134,,,162,89,,,,,,,,,,,,,,88,173,184,174,197,170,190',
'180,179,200,201,195,178,177,172,198,202,203,182,171,185,189,191,183',
'176,,,,192,199,194,193,186,196,181,169,188,187,,,,,,168,175,166,167',
'163,164,165,124,126,123,,125,,,,,,,,157,158,,154,136,137,138,145,142',
'144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151,150,,135,156,153,152',
'161,148,149,143,141,133,155,134,,,162,89,,,,,,,,,,,,,,88,173,184,174',
'197,170,190,180,179,200,201,195,178,177,172,198,202,203,182,171,185',
'189,191,183,176,,,,192,199,194,193,186,196,181,169,188,187,,,,,,168',
'175,166,167,163,164,165,124,126,,,125,,,,,,,,157,158,,154,136,137,138',
'145,142,144,,,139,140,,,,159,160,146,147,,,,,,,,,,,,,,151,150,,135,156',
'153,152,161,148,149,143,141,133,155,134,,,162,173,184,174,197,170,190',
'180,179,200,201,195,178,177,172,198,202,203,182,171,185,189,191,183',
'176,,,,192,199,194,371,370,372,369,169,188,187,,,,,,168,175,166,167',
'366,367,368,364,126,97,96,365,,99,,,,,,157,158,,154,136,137,138,145',
'142,144,,,139,140,,,,159,160,146,147,,,,,,376,,,,,,,,151,150,,135,156',
'153,152,161,148,149,143,141,133,155,134,640,424,162,,641,,,,,,,,157',
'158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263',
',,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134,726',
'424,162,,727,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,',
',,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149',
'143,141,133,155,134,420,424,162,,419,,,,,,,,157,158,,154,136,137,138',
'145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135',
'156,153,152,161,148,149,143,141,133,155,134,723,424,162,,724,,,,,,,',
'157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,',
',,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155,134',
'721,417,162,,722,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140',
',,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148',
'149,143,141,133,155,134,1008,424,162,,1009,,,,,,,,157,158,,154,136,137',
'138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150',
',135,156,153,152,161,148,149,143,141,133,155,134,475,417,162,,476,,',
',,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146,147',
',,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155',
'134,983,424,162,,982,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139',
'140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161',
'148,149,143,141,133,155,134,1006,417,162,,1007,,,,,,,,157,158,,154,136',
'137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151',
'150,,135,156,153,152,161,148,149,143,141,133,155,134,475,417,162,,476',
',,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146',
'147,,,,,,,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133,155',
'134,638,417,162,,639,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139',
'140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161',
'148,149,143,141,133,155,134,670,417,162,,671,,,,,,,,157,158,,154,136',
'137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151',
'150,,135,156,153,152,161,148,149,143,141,133,155,134,673,424,162,,674',
',,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160,146',
'147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141,133',
'155,134,638,417,162,,639,,,,,,,,157,158,,154,136,137,138,145,142,144',
',,139,140,,,,159,160,146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152',
'161,148,149,143,141,133,155,134,640,424,162,,641,,,,,,,,157,158,,154',
'136,137,138,145,142,144,,,139,140,,,,159,160,146,147,,,,,,263,,,,,,',
',151,150,,135,156,153,152,161,148,149,143,141,133,155,134,413,417,162',
',414,,,,,,,,157,158,,154,136,137,138,145,142,144,,,139,140,,,,159,160',
'146,147,,,,,,263,,,,,,,,151,150,,135,156,153,152,161,148,149,143,141',
'133,155,134,,548,162,545,544,543,553,546,,548,,545,544,543,553,546,556',
',,,,,,,556,,548,,545,544,543,553,546,,,,,,551,,,556,,,,,551,561,560',
'564,563,,,,557,561,560,564,563,,,,557,551,,548,,545,544,543,553,546',
',,564,563,,,,557,556,,548,,545,544,543,553,546,548,,545,544,543,553',
'546,,556,,,,,551,,556,,548,,545,544,543,553,546,564,563,,,,557,551,',
'556,,,,,551,,,,564,563,,,,557,,564,563,,,,557,551,,548,,545,544,543',
'553,546,,,564,563,,,,557,556,,548,,545,544,543,553,546,,548,,545,544',
'543,553,546,556,,,,,551,,,556,,,,,,561,560,564,563,,,,557,551,,,,,,',
',551,561,560,564,563,,,,557,561,560,564,563,,,548,557,545,544,543,553',
'546,548,,545,544,543,553,546,,556,,,,,,548,556,545,544,543,553,546,',
',,,,,,,556,551,534,,,,,,551,,561,560,564,563,,,,557,,564,563,,551,,557',
',,,,,,561,560,564,563,,,548,557,545,544,543,553,546,,,,,,,,,556,,,,',
',,,,,,,,,,,,,,,,,551,,,,,,,,,561,560,564,563,,,,557' ]
        racc_action_table = arr = ::Array.new(25105, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'420,61,339,594,594,349,346,420,420,420,359,665,19,420,420,930,420,650',
'58,384,665,383,908,671,443,420,482,473,342,328,651,712,328,342,724,77',
'420,420,338,420,420,420,420,420,719,1007,345,77,1020,372,570,1008,1006',
'19,437,437,372,77,58,481,717,482,473,721,722,651,420,420,420,420,420',
'420,420,420,420,420,420,420,420,420,443,578,420,420,420,384,420,383',
'61,671,420,885,723,420,481,627,687,594,420,724,420,720,420,420,650,420',
'420,420,420,420,95,420,420,420,349,346,359,95,95,95,339,571,95,95,95',
'339,95,420,1008,671,420,420,671,420,95,420,95,95,95,359,908,671,420',
'724,359,908,95,95,437,95,95,95,95,95,570,345,338,723,670,570,844,338',
'719,1007,845,719,1020,719,1007,1008,1006,1020,721,722,1008,1006,95,95',
'95,95,95,95,95,95,95,95,95,95,95,95,578,308,95,95,95,221,95,95,222,297',
'95,723,774,95,95,687,95,355,95,885,95,355,95,95,885,95,95,95,95,95,419',
'95,296,95,670,571,123,419,419,419,571,123,123,419,419,295,419,95,680',
'680,95,95,95,95,913,95,913,95,673,801,293,221,95,638,222,308,419,419',
'774,419,419,419,419,419,670,590,590,670,845,844,41,41,366,845,332,848',
'670,332,308,366,848,26,313,313,639,224,419,419,419,419,419,419,419,419',
'419,419,419,419,419,419,673,801,419,419,419,292,419,673,801,638,419',
'344,673,419,492,348,673,801,419,729,419,381,419,419,354,419,419,419',
'419,419,98,419,680,419,703,673,801,98,98,98,639,224,98,98,98,26,98,419',
'41,41,419,419,280,419,98,419,98,98,98,590,313,313,419,413,590,734,98',
'98,26,98,98,98,98,98,277,414,354,938,492,492,492,385,369,354,938,381',
'381,381,354,369,350,686,354,938,686,492,98,98,98,98,98,98,98,98,98,98',
'98,98,98,98,413,354,98,98,98,343,98,98,357,413,98,276,414,98,98,357',
'98,622,98,753,98,414,98,98,357,98,98,98,98,98,378,98,641,98,262,385',
'385,385,288,641,641,641,370,288,641,641,641,98,641,370,98,98,98,98,727',
'98,368,98,641,641,641,727,98,368,934,353,727,934,641,641,727,641,641',
'641,641,641,904,632,904,904,904,618,904,605,704,758,704,704,704,382',
'704,333,726,612,378,378,378,610,641,641,641,641,641,641,641,641,641',
'641,641,641,641,641,602,374,641,641,641,353,641,641,374,642,641,607',
'353,641,641,230,641,353,641,226,641,353,641,641,380,641,641,641,641',
'641,39,641,726,641,225,605,605,379,688,726,353,382,382,382,726,605,904',
'641,726,592,641,641,641,641,704,641,640,641,38,621,317,15,641,640,640',
'640,371,726,640,640,640,347,640,371,853,607,607,39,347,853,775,640,640',
'640,640,607,39,347,380,380,380,329,640,640,329,640,640,640,640,640,776',
'379,379,379,300,38,621,317,15,17,17,300,365,3,38,621,317,15,3,365,300',
'777,640,640,640,640,640,640,640,640,640,640,640,640,640,640,779,689',
'640,640,640,301,640,640,364,780,640,689,301,640,640,364,640,781,640',
'783,640,301,640,640,450,640,640,640,640,640,784,640,640,640,957,24,957',
'957,957,367,957,785,24,589,689,689,367,640,589,689,640,640,640,640,786',
'640,450,640,337,337,450,450,640,294,294,294,294,294,294,523,523,957',
'294,294,692,692,223,294,790,294,294,294,294,294,294,294,291,291,291',
'291,291,294,294,294,294,294,294,294,598,598,294,303,598,598,598,432',
'294,294,294,294,294,294,294,294,294,294,294,294,794,294,294,294,795',
'294,294,294,294,294,432,432,432,432,432,432,432,432,432,432,432,988',
'432,432,302,800,432,432,988,294,684,302,294,996,996,294,294,988,804',
'294,302,294,432,681,432,294,432,432,862,432,432,432,432,432,294,432',
'710,710,862,294,294,294,294,220,294,294,294,294,807,808,220,811,294',
'294,306,432,679,432,816,220,294,817,294,294,294,569,569,569,569,569',
'569,862,862,581,569,569,862,821,822,569,581,569,569,569,569,569,569',
'569,824,581,825,827,830,569,569,569,569,569,569,569,331,832,569,307',
'835,204,838,643,569,569,569,569,569,569,569,569,569,569,569,569,676',
'569,569,569,109,569,569,569,569,569,643,643,643,643,643,643,643,643',
'643,643,643,46,643,643,875,573,643,643,46,569,572,875,569,675,45,569',
'569,46,847,569,875,569,643,330,643,569,643,643,40,643,643,643,643,643',
'569,643,851,852,312,569,569,569,569,14,569,569,569,569,855,856,14,567',
'569,569,565,643,562,558,550,14,569,541,569,569,569,566,566,566,566,566',
'566,540,872,948,566,566,672,37,539,566,948,566,566,566,566,566,566,566',
'876,948,878,314,22,566,566,566,566,566,566,566,537,889,566,890,536,524',
'649,408,566,566,566,566,566,566,566,566,566,566,566,566,522,566,566',
'566,521,566,566,566,566,566,408,408,408,408,408,408,408,408,408,408',
'408,1009,408,408,304,394,408,408,1009,566,906,304,566,1009,669,566,566',
'1009,910,566,304,566,408,911,408,566,408,408,667,408,408,408,408,408',
'566,408,917,921,16,566,566,566,566,945,566,566,566,566,924,927,945,928',
'566,566,929,408,705,932,318,945,566,513,566,566,566,968,968,968,968',
'968,968,400,510,944,968,968,403,505,405,968,944,968,968,968,968,968',
'968,968,947,944,503,952,953,968,968,968,968,968,968,968,954,873,968',
'873,873,873,955,873,968,968,968,968,968,968,968,968,968,968,968,968',
'956,968,968,968,500,968,968,968,968,968,755,755,755,755,755,755,755',
'755,755,755,755,674,755,755,509,958,755,755,674,968,499,509,968,674',
'409,968,968,674,13,968,509,968,755,12,755,968,755,755,664,755,755,755',
'755,755,968,755,411,412,421,968,968,968,968,319,968,968,968,968,483',
'321,319,982,968,968,983,755,984,10,479,319,968,429,968,968,968,966,966',
'966,966,966,966,454,453,946,966,966,452,995,658,966,946,966,966,966',
'966,966,966,966,997,946,998,999,1000,966,966,966,966,966,966,966,1001',
'981,966,981,981,981,1002,981,966,966,966,966,966,966,966,966,966,966',
'966,966,1005,966,966,966,7,966,966,966,966,966,858,858,858,858,858,858',
'858,858,858,858,858,656,858,858,326,451,858,858,1010,966,1011,439,966',
'1,1022,966,966,,,966,,966,858,,858,966,858,858,,858,858,858,858,858',
'966,858,,,,966,966,966,966,,966,966,966,966,,,,,966,966,,858,,,,,966',
',966,966,966,960,960,960,960,960,960,,,,960,960,,,,960,,960,960,960',
'960,960,960,960,6,6,6,6,6,960,960,960,960,960,960,960,,,960,497,497',
'497,497,497,960,960,960,960,960,960,960,960,960,960,960,960,,960,960',
'960,,960,960,960,960,960,274,274,274,274,274,274,274,274,274,274,274',
',274,274,,,274,274,,960,,,960,,,960,960,,,960,,960,274,,274,960,274',
'274,,274,274,274,274,274,960,274,,,,960,960,960,960,,960,960,960,960',
',,,,960,960,,274,,,,,960,,960,960,960,943,943,943,943,943,943,,,,943',
'943,,,,943,,943,943,943,943,943,943,943,,,,,,943,943,943,943,943,943',
'943,,,943,,,,,,943,943,943,943,943,943,943,943,943,943,943,943,,943',
'943,943,,943,943,943,943,943,762,762,762,762,762,762,762,762,762,762',
'762,,762,762,,,762,762,,943,,,943,,,943,943,,,943,,943,762,,762,943',
'762,762,,762,762,762,762,762,943,762,,,,943,943,943,943,,943,943,943',
'943,,,,,943,943,,762,,,,,943,,943,943,943,648,648,648,648,648,648,,',
',648,648,,,,648,,648,648,648,648,648,648,648,,,,,,648,648,648,648,648',
'648,648,,,648,,,,,,648,648,648,648,648,648,648,648,648,648,648,648,',
'648,648,648,,648,648,648,648,648,765,765,765,765,765,765,765,765,765',
'765,765,,765,765,,,765,765,,648,,,648,,,648,648,,,648,,648,765,,765',
'648,765,765,,765,765,765,765,765,648,765,,,,648,648,648,648,,648,648',
'648,648,,,,,648,648,,765,,,,,648,,648,648,648,653,653,653,653,653,653',
',,,653,653,,,,653,,653,653,653,653,653,653,653,,,,,,653,653,653,653',
'653,653,653,,,653,,,,,,653,653,653,653,653,653,653,653,653,653,653,653',
',653,653,653,,653,653,653,653,653,644,644,644,644,644,644,644,644,644',
'644,644,,644,644,,,644,644,,653,,,653,,,653,653,,,653,,653,644,,644',
'653,644,644,,644,644,644,644,644,653,644,,,,653,653,653,653,,653,653',
'653,653,,,,,653,653,644,644,,,,,653,,653,653,653,654,654,654,654,654',
'654,,,,654,654,,,,654,,654,654,654,654,654,654,654,,,,,,654,654,654',
'654,654,654,654,,,654,,,,,,654,654,654,654,654,654,654,654,654,654,654',
'654,,654,654,654,,654,654,654,654,654,678,678,678,678,678,678,678,678',
'678,678,678,,678,678,,,678,678,,654,,,654,,,654,654,,,654,,654,678,',
'678,654,678,678,,678,678,678,678,678,654,678,,,,654,654,654,654,,654',
'654,654,654,,,,,654,654,,678,,,,,654,,654,654,654,324,324,324,324,324',
'324,,,,324,324,,,,324,,324,324,324,324,324,324,324,,,,,,324,324,324',
'324,324,324,324,,,324,,,,,,324,324,324,324,324,324,324,324,324,324,324',
'324,,324,324,324,,324,324,324,324,324,767,767,767,767,767,767,767,767',
'767,767,767,,767,767,,,767,767,,324,,,324,,,324,324,,,324,,324,767,',
'767,324,767,767,,767,767,767,767,767,324,767,,,,324,324,324,324,,324',
'324,324,324,,,,,324,324,,767,,,,,324,,324,324,324,299,299,299,299,299',
'299,,,,299,299,,,,299,,299,299,299,299,299,299,299,,,,,,299,299,299',
'299,299,299,299,,,299,,,,,,299,299,299,299,299,299,299,299,299,299,299',
'299,,299,299,299,,299,299,299,299,299,769,769,769,769,769,769,769,769',
'769,769,769,,769,769,,,769,769,,299,,,299,,,299,299,,,299,,299,769,',
'769,299,769,769,,769,769,769,769,769,299,769,,,,299,299,299,299,,299',
'299,299,299,,,,,299,299,,769,,,,,299,,299,299,299,591,591,591,591,591',
'591,,,,591,591,,,,591,,591,591,591,591,591,591,591,,,,,,591,591,591',
'591,591,591,591,,,591,,,,,,591,591,591,591,591,591,591,591,591,591,591',
'591,,591,591,591,,591,591,591,591,591,427,427,427,427,427,427,427,427',
'427,427,427,,427,427,,,427,427,,591,,,591,,,591,591,,,591,,591,427,',
'427,591,427,427,,427,427,427,427,427,591,427,,,,591,591,591,591,,591',
'591,591,591,,,,,591,591,,427,,,,,591,,591,591,591,882,882,882,882,882',
'882,,,,882,882,,,,882,,882,882,882,882,882,882,882,,,,,,882,882,882',
'882,882,882,882,,,882,,,,,,882,882,882,882,882,882,882,882,882,882,882',
'882,,882,882,882,,882,882,882,882,882,21,21,21,21,21,21,21,21,21,21',
'21,,21,21,,,21,21,,882,,,882,,,882,882,,,882,,882,21,,21,882,21,21,',
'21,21,21,21,21,882,21,,,,882,882,882,882,,882,882,882,882,,,,,882,882',
',21,,,,,882,,882,882,882,730,730,730,730,730,730,,,,730,730,,,,730,',
'730,730,730,730,730,730,730,,,,,,730,730,730,730,730,730,730,,,730,',
',,,,730,730,730,730,730,730,730,730,730,730,730,730,,730,730,730,,730',
'730,730,730,730,519,519,519,519,519,519,519,519,519,519,519,,519,519',
',,519,519,,730,,,730,,,730,730,,,730,,730,519,,519,730,519,519,,519',
'519,519,519,519,730,519,,,,730,730,730,730,,730,730,730,730,,,,,730',
'730,,519,,,,,730,,730,730,730,735,735,735,735,735,735,,,,735,735,,,',
'735,,735,735,735,735,735,735,735,,,,,,735,735,735,735,735,735,735,,',
'735,,,,,,735,735,735,735,735,735,735,735,735,735,735,735,,735,735,735',
',735,735,735,735,735,969,969,969,969,969,969,969,969,969,969,969,,969',
'969,,,969,969,,735,,,735,,,735,735,,,735,,735,969,,969,735,969,969,',
'969,969,969,969,969,735,969,,,,735,735,735,735,,735,735,735,735,,,,',
'735,735,,969,,,,,735,,735,735,735,745,745,745,745,745,745,,,,745,745',
',,,745,,745,745,745,745,745,745,745,,,,,,745,745,745,745,745,745,745',
',,745,,,,,,745,745,745,745,745,745,745,745,745,745,745,745,,745,745',
'745,,745,745,745,745,745,760,760,760,760,760,760,760,760,760,760,760',
',760,760,,,760,760,,745,,,745,,,745,745,,,745,,745,760,,760,745,760',
'760,,760,760,760,760,760,745,760,,,,745,745,745,745,,745,745,745,745',
',,,,745,745,,760,,,,,745,,745,745,745,229,229,229,229,229,229,,,,229',
'229,,,,229,,229,229,229,229,229,229,229,,,,,,229,229,229,229,229,229',
'229,,551,229,551,551,551,,551,229,229,229,229,229,229,229,229,229,229',
'229,229,,229,229,229,,229,229,229,229,229,701,,701,701,701,,701,,551',
',994,,994,994,994,,994,551,,229,,,229,,,229,229,,,229,,229,,,,229,,701',
',,,,,,229,,701,994,,229,229,229,229,,229,229,229,229,,,,,229,229,,831',
',831,831,831,229,831,229,229,229,793,793,793,793,793,793,,,,793,793',
',,,793,,793,793,793,793,793,793,793,,,,,831,793,793,793,793,793,793',
'793,,831,793,,,468,,,793,793,793,793,793,793,793,793,793,793,793,793',
',793,793,793,,793,793,793,793,793,463,463,463,463,463,463,463,468,,463',
'463,468,468,,468,468,463,463,,793,,,793,,,793,793,,469,793,,793,463',
',463,793,463,463,,463,463,463,463,463,793,463,,,,793,793,793,793,,793',
'793,793,793,,,469,,793,793,469,469,,469,469,,793,,793,793,793,806,806',
'806,806,806,806,,,,806,806,,,,806,,806,806,806,806,806,806,806,,,,,',
'806,806,806,806,806,806,806,449,905,806,905,905,905,,905,806,806,806',
'806,806,806,806,806,806,806,806,806,,806,806,806,,806,806,806,806,806',
'460,,449,,,,449,449,905,959,,959,959,959,,959,460,460,,806,,,806,,,806',
'806,,,806,,806,460,,460,806,460,460,,460,460,,,460,806,460,959,,,806',
'806,806,806,,806,806,806,806,,,,,806,806,,833,,833,833,833,806,833,806',
'806,806,33,33,33,33,33,33,,,,33,33,,,,33,,33,33,33,33,33,33,33,,,,,833',
'33,33,33,33,33,33,33,,,33,,,,,,33,33,33,33,33,33,33,33,33,33,33,33,',
'33,33,33,,33,33,33,33,33,461,,,,,,,,,,,,,,,,461,461,,33,,,33,,,33,33',
',,33,,33,461,,461,33,461,461,,461,461,,,461,33,461,,,,33,33,33,33,,33',
'33,33,33,,,,,33,33,,,,,,,33,,33,33,33,814,814,814,814,814,814,,,,814',
'814,,,,814,,814,814,814,814,814,814,814,,,,,,814,814,814,814,814,814',
'814,,,814,,,,,,814,814,814,814,814,814,814,814,814,814,814,814,,814',
'814,814,,814,814,814,814,814,462,,,,,,,,,,,,,,,,462,462,,814,,,814,',
',814,814,,,814,,814,462,,462,814,462,462,,462,462,,,462,814,462,,,,814',
'814,814,814,,814,814,814,814,,,,,814,814,,,,,,,814,,814,814,814,815',
'815,815,815,815,815,,,,815,815,,,,815,,815,815,815,815,815,815,815,',
',,,,815,815,815,815,815,815,815,,,815,,,,,,815,815,815,815,815,815,815',
'815,815,815,815,815,,815,815,815,,815,815,815,815,815,447,447,447,447',
'447,447,447,447,447,447,447,,447,447,,,447,447,,815,,,815,,,815,815',
',,815,,815,447,,447,815,447,447,,447,447,447,447,447,815,447,,,,815',
'815,815,815,,815,815,815,815,,,,,815,815,,,,,,,815,,815,815,815,206',
'206,206,206,206,206,,,,206,206,,,,206,,206,206,206,206,206,206,206,',
',,,,206,206,206,206,206,206,206,,,206,,,,,,206,206,206,206,206,206,206',
'206,206,206,206,206,,206,206,206,,206,206,206,206,206,459,,,,,,,,,,',
',,,,,459,459,,206,,,206,,,206,206,,,206,,206,459,,459,206,459,459,,459',
'459,,,459,206,459,,,,206,206,206,206,,206,206,206,206,,,,,206,206,,',
',,,,206,,206,206,206,839,839,839,839,839,839,,,,839,839,,,,839,,839',
'839,839,839,839,839,839,,,,,,839,839,839,839,839,839,839,,,839,,,,,',
'839,839,839,839,839,839,839,839,839,839,839,839,,839,839,839,,839,839',
'839,839,839,464,464,464,464,464,464,464,,,464,464,,,,,,464,464,,839',
',,839,,,839,839,,,839,,839,464,,464,839,464,464,,464,464,464,464,464',
'839,464,,,,839,839,839,839,,839,839,839,839,,,,,839,839,,,,,,,839,,839',
'839,839,121,121,121,121,121,121,,,,121,121,,,,121,,121,121,121,121,121',
'121,121,,,,,,121,121,121,121,121,121,121,,,121,,,,,,121,121,121,121',
'121,121,121,121,121,121,121,121,,121,121,121,,121,121,121,121,121,465',
'465,465,465,465,465,465,,,465,465,,,,,,465,465,,121,,,121,,,121,121',
',,121,,121,465,,465,121,465,465,,465,465,465,465,465,121,465,,,,121',
'121,121,121,,121,121,121,121,,,,,121,121,,,,,,,121,,121,121,121,849',
'849,849,849,849,849,,,,849,849,,,,849,,849,849,849,849,849,849,849,',
',,,,849,849,849,849,849,849,849,,,849,,,,,,849,849,849,849,849,849,849',
'849,849,849,849,849,,849,849,849,,849,849,849,849,849,458,458,458,458',
'458,458,458,,,458,458,,,,,,458,458,,849,,,849,,,849,849,,,849,,849,458',
',458,849,458,458,,458,458,458,458,458,849,458,,,,849,849,849,849,,849',
'849,849,849,,,,,849,849,,,,,,,849,,849,849,849,840,840,840,840,840,840',
',,,840,840,,,,840,,840,840,840,840,840,840,840,,,,,,840,840,840,840',
'840,840,840,,,840,,,,,,840,840,840,840,840,840,840,840,840,840,840,840',
',840,840,840,,840,840,840,840,840,471,471,471,471,471,471,471,471,,471',
'471,,,,,,471,471,,840,,,840,,,840,840,,,840,,840,471,,471,840,471,471',
',471,471,471,471,471,840,471,,,,840,840,840,840,,840,840,840,840,,,',
',840,840,,,,,,,840,,840,840,840,498,498,498,498,498,498,,,,498,498,',
',,498,,498,498,498,498,498,498,498,,,,,,498,498,498,498,498,498,498',
',,498,,,,,,498,498,498,498,498,498,498,498,498,498,498,498,,498,498',
'498,,498,498,498,498,498,470,470,470,470,470,470,470,,,470,470,,,,,',
'470,470,,498,,,498,,,498,498,,,498,,498,470,,470,498,470,470,,470,470',
'470,470,470,498,470,,,,498,498,498,498,,498,498,498,498,,,,,498,498',
',,,,,,498,,498,498,498,0,0,0,0,0,0,,,,0,0,,,,0,,0,0,0,0,0,0,0,,,,,,0',
'0,0,0,0,0,0,,,0,,,,,,0,0,0,0,0,0,0,0,0,0,0,0,,0,0,0,,0,0,0,0,0,448,448',
'448,448,448,448,448,448,448,448,448,,448,448,,,448,448,,0,,,0,,,0,0',
',,0,,0,448,,448,0,448,448,,448,448,448,448,448,0,448,,,,0,0,0,0,,0,0',
'0,0,,,,,0,0,,,,,,,0,,0,0,0,843,843,843,843,843,843,,,,843,843,,,,843',
',843,843,843,843,843,843,843,,,,,,843,843,843,843,843,843,843,,,843',
',,,,,843,843,843,843,843,843,843,843,843,843,843,843,,843,843,843,,843',
'843,843,843,843,466,466,466,466,466,466,466,,,466,466,,,,,,466,466,',
'843,,,843,,,843,843,,,843,,843,466,,466,843,466,466,,466,466,466,466',
'466,843,466,,,,843,843,843,843,,843,843,843,843,,,,,843,843,,,,529,529',
'529,843,529,843,843,843,529,529,,,,529,,529,529,529,529,529,529,529',
',,,,,529,529,529,529,529,529,529,,,529,,,,,,,529,,,529,529,529,529,529',
'529,529,529,529,529,529,529,,529,529,529,529,529,467,467,467,467,467',
'467,467,,,467,467,,,,,,467,467,,529,,,529,,,529,529,,,529,,,467,,467',
'529,467,467,529,467,467,467,467,467,529,467,,,,529,529,529,529,,529',
'529,529,529,,,,,529,529,,,,444,444,444,529,444,529,529,529,444,444,',
',,444,,444,444,444,444,444,444,444,,,,,,444,444,444,444,444,444,444',
',,444,,,,,,,444,,,444,444,444,444,444,444,444,444,,444,444,444,,444',
'444,444,444,444,455,,,,,,,,,,,,,,,,455,455,,444,,,444,,,444,444,,,444',
',,455,,455,444,455,455,,455,455,,,,444,,,,,444,444,444,444,,444,444',
'444,444,,,,,444,444,,,,445,445,445,444,445,444,444,444,445,445,,,,445',
',445,445,445,445,445,445,445,,,,,,445,445,445,445,445,445,445,,,445',
',,,,,,445,,,445,445,445,445,445,445,445,445,,445,445,445,,445,445,445',
'445,445,456,,,,,,,,,,,,,,,,456,456,,445,,,445,,,445,445,,,445,,,456',
',456,445,456,456,,456,456,,,,445,,,,,445,445,445,445,,445,445,445,445',
',,,,445,445,,,,44,44,44,445,44,445,445,445,44,44,,,,44,,44,44,44,44',
'44,44,44,,,,,,44,44,44,44,44,44,44,,,44,,,,,,,44,,,44,44,44,44,44,44',
'44,44,,44,44,44,,44,44,44,44,44,457,,,,,,,,,,,,,,,,457,457,,44,,,44',
',,44,44,,,44,,,457,,,44,457,457,,457,457,,,,44,,,,,44,44,44,44,,44,44',
'44,44,,,,,44,44,,,,59,59,59,44,59,44,44,44,59,59,,,,59,,59,59,59,59',
'59,59,59,,,,,,59,59,59,59,59,59,59,,,59,,,,,,,59,,,59,59,59,59,59,59',
'59,59,59,59,59,59,,59,59,59,59,59,,,,,,,,,,,,,,,,,,,,59,,,59,,,59,59',
',,59,,59,,,,59,,,59,,,,,,59,,,,,59,59,59,59,,59,59,59,59,,,,,59,59,',
',,60,60,60,59,60,59,59,59,60,60,,,,60,,60,60,60,60,60,60,60,,,,,,60',
'60,60,60,60,60,60,,,60,,,,,,,60,,,60,60,60,60,60,60,60,60,60,60,60,60',
',60,60,60,60,60,,,,,,,,,,,,,,,,,,,,60,,,60,,,60,60,,,60,,,,,,60,,,60',
',,,,,60,,,,,60,60,60,60,,60,60,60,60,,,,,60,60,,,,446,446,446,60,446',
'60,60,60,446,446,,,,446,,446,446,446,446,446,446,446,,,,,,446,446,446',
'446,446,446,446,,,446,,,,,,,446,,,446,446,446,446,446,446,446,446,,446',
'446,446,,446,446,446,446,446,,,,,,,,,,,,,,,,,,,,446,,,446,,,446,446',
',,446,,,,,,446,,,,,,,,,446,,,,,446,446,446,446,,446,446,446,446,,,,',
'446,446,,,,63,63,63,446,63,446,446,446,63,63,,,,63,,63,63,63,63,63,63',
'63,,,,,,63,63,63,63,63,63,63,,,63,,,,,,,63,,,63,63,63,63,63,63,63,63',
',63,63,63,,63,63,63,63,63,,,,,,,,,,,,,,,,,,,,63,,,63,,,63,63,,,63,,',
',,,63,,,,,,,,,63,,,,,63,63,63,63,,63,63,63,63,,,,,63,63,,,,64,64,64',
'63,64,63,63,63,64,64,,,,64,,64,64,64,64,64,64,64,,,,,,64,64,64,64,64',
'64,64,,,64,,,,,,,64,,,64,64,64,64,64,64,64,64,,64,64,64,,64,64,64,64',
'64,,,,,,,,,,,,,,,,,,,,64,,,64,,,64,64,,,64,,,,,,64,,,,,,,,,64,,,,,64',
'64,64,64,,64,64,64,64,,,,,64,64,,,,67,67,67,64,67,64,64,64,67,67,,,',
'67,,67,67,67,67,67,67,67,,,,,,67,67,67,67,67,67,67,,,67,,,,,,,67,,,67',
'67,67,67,67,67,67,67,,67,67,67,,67,67,67,67,67,,,,,,,,,,,,,,,,,,,,67',
',,67,,,67,67,,,67,,,,,,67,,,,,,,,,67,,,,,67,67,67,67,,67,67,67,67,,',
',,67,67,67,,,,,67,67,,67,67,67,68,68,68,,68,,,,68,68,,,,68,,68,68,68',
'68,68,68,68,,,,,,68,68,68,68,68,68,68,,,68,,,,,,,68,,,68,68,68,68,68',
'68,68,68,,68,68,68,,68,68,,,68,,,,,,,,,,,,,,,,,,,,68,,,68,,,68,68,,',
'68,,68,,,,,,,,,,,,,,,,,,68,68,68,68,,68,68,68,68,,,,,68,68,,,,69,69',
'69,68,69,68,68,68,69,69,,,,69,,69,69,69,69,69,69,69,,,,,,69,69,69,69',
'69,69,69,,,69,,,,,,,69,,,69,69,69,69,69,69,69,69,,69,69,69,,69,69,,',
'69,,,,,,,,,,,,,,,,,69,,,69,,,69,,,69,69,,,69,,,,,,,,,,,,,,,,,,,,69,69',
'69,69,,69,69,69,69,,,,,69,69,,,,70,70,70,69,70,69,69,69,70,70,,,,70',
',70,70,70,70,70,70,70,,,,,,70,70,70,70,70,70,70,,,70,,,,,,,70,,,70,70',
'70,70,70,70,70,70,,70,70,70,,70,70,,,70,,,,,,,,,,,,,,,,,,,,70,,,70,',
',70,70,,,70,,,,,,,,,,,,,,,,,,,,70,70,70,70,,70,70,70,70,,,,,70,70,,',
',472,472,472,70,472,70,70,70,472,472,,,,472,,472,472,472,472,472,472',
'472,,,,,,472,472,472,472,472,472,472,,,472,,,,,,,472,,,472,472,472,472',
'472,472,472,472,,472,472,472,,472,472,472,472,472,,,,,,,,,,,,,,,,,,',
',472,,,472,,,472,472,,,472,,,,,,472,,,,,,,,,472,,,,,472,472,472,472',
',472,472,472,472,,,,,472,472,,,,842,842,842,472,842,472,472,472,842',
'842,,,,842,,842,842,842,842,842,842,842,,,,,,842,842,842,842,842,842',
'842,,,842,,,,,,,842,,,842,842,842,842,842,842,842,842,,842,842,842,',
'842,842,842,842,842,,,,,,,,,,,,,,,,,,,,842,,,842,,,842,842,,,842,,842',
',,,842,,,,,,,,,842,,,,,842,842,842,842,,842,842,842,842,,,,,842,842',
',,,43,43,43,842,43,842,842,842,43,43,,,,43,,43,43,43,43,43,43,43,,,',
',,43,43,43,43,43,43,43,,,43,,,,,,,43,,,43,43,43,43,43,43,43,43,,43,43',
'43,,43,43,43,43,43,,,,,,,,,,,,,,,,,,,,43,,,43,,,43,43,,,43,,,,,,43,',
',,,,,,,43,,,,,43,43,43,43,,43,43,43,43,,,,,43,43,,,,42,42,42,43,42,43',
'43,43,42,42,,,,42,,42,42,42,42,42,42,42,,,,,,42,42,42,42,42,42,42,,',
'42,,,,,,,42,,,42,42,42,42,42,42,42,42,,42,42,42,,42,42,42,42,42,,,,',
',,,,,,,,,,,,,,,42,,,42,,,42,42,,,42,,,,,,42,,,,,,,,,42,,,,,42,42,42',
'42,,42,42,42,42,,,,,42,42,,,,486,486,486,42,486,42,42,42,486,486,,,',
'486,,486,486,486,486,486,486,486,,,,,,486,486,486,486,486,486,486,,',
'486,,,,,,,486,,,486,486,486,486,486,486,486,486,486,486,486,486,,486',
'486,486,486,486,,,,,,,,,,,,,,,,,,,,486,,,486,,,486,486,,,486,,486,,486',
',486,,,486,,,,,,486,,,,,486,486,486,486,,486,486,486,486,,,,,486,486',
',,,,,,486,,486,486,486,111,111,111,111,111,,,,111,111,,,,111,,111,111',
'111,111,111,111,111,,,,,,111,111,111,111,111,111,111,,,111,,,,,,111',
'111,111,111,111,111,111,111,111,111,111,111,,111,111,111,,111,111,111',
'111,111,,,,,,,,,,,,,,,,,,,,111,,,111,,,111,111,,,111,,111,,,,111,,,',
',,,,,111,,,,,111,111,111,111,,111,111,111,111,,,,,111,111,,,,,,111,111',
',111,111,111,116,116,116,,116,,,,116,116,,,,116,,116,116,116,116,116',
'116,116,,,,,,116,116,116,116,116,116,116,,,116,,,,,,,116,,,116,116,116',
'116,116,116,116,116,,116,116,116,,116,116,116,116,116,,,,,,,,,,,,,,',
',,,,,116,,,116,,,116,116,,,116,,,,,,116,,,,,,,,,116,,,,,116,116,116',
'116,,116,116,116,116,,,,,116,116,,,,117,117,117,116,117,116,116,116',
'117,117,,,,117,,117,117,117,117,117,117,117,,,,,,117,117,117,117,117',
'117,117,,,117,,,,,,,117,,,117,117,117,117,117,117,117,117,,117,117,117',
',117,117,117,117,117,,,,,,,,,,,,,,,,,,,,117,,,117,,,117,117,,,117,,',
',,,117,,,,,,,,,117,,,,,117,117,117,117,,117,117,117,117,,,,,117,117',
',,,118,118,118,117,118,117,117,117,118,118,,,,118,,118,118,118,118,118',
'118,118,,,,,,118,118,118,118,118,118,118,,,118,,,,,,,118,,,118,118,118',
'118,118,118,118,118,,118,118,118,,118,118,118,118,118,,,,,,,,,,,,,,',
',,,,,118,,,118,,,118,118,,,118,,,,,,118,,,,,,,,,118,,,,,118,118,118',
'118,,118,118,118,118,,,,,118,118,,,,119,119,119,118,119,118,118,118',
'119,119,,,,119,,119,119,119,119,119,119,119,,,,,,119,119,119,119,119',
'119,119,,,119,,,,,,,119,,,119,119,119,119,119,119,119,119,,119,119,119',
',119,119,119,119,119,,,,,,,,,,,,,,,,,,,,119,,,119,,,119,119,,,119,,',
',,,119,,,,,,,,,119,,,,,119,119,119,119,,119,119,119,119,,,,,119,119',
',,,,,,119,,119,119,119,120,120,120,120,120,,,,120,120,,,,120,,120,120',
'120,120,120,120,120,,,,,,120,120,120,120,120,120,120,,,120,,,,,,120',
'120,,120,120,120,120,120,120,120,120,120,,120,120,120,,120,120,120,120',
'120,,,,,,,,,,,,,,,,,,,,120,,,120,,,120,120,,,120,,120,,,,120,,,,,,,',
',120,,,,,120,120,120,120,,120,120,120,120,,,,,120,120,,,,859,859,859',
'120,859,120,120,120,859,859,,,,859,,859,859,859,859,859,859,859,,,,',
',859,859,859,859,859,859,859,,,859,,,,,,,859,,,859,859,859,859,859,859',
'859,859,859,859,859,859,,859,859,859,859,859,,,,,,,,,,,,,,,,,,,,859',
',,859,,,859,859,,,859,,,,859,,859,,,859,,,,,,859,,,,,859,859,859,859',
',859,859,859,859,,,,,859,859,,,,860,860,860,859,860,859,859,859,860',
'860,,,,860,,860,860,860,860,860,860,860,,,,,,860,860,860,860,860,860',
'860,,,860,,,,,,,860,,,860,860,860,860,860,860,860,860,,860,860,860,',
'860,860,860,860,860,,,,,,,,,,,,,,,,,,,,860,,,860,,,860,860,,,860,,,',
',,860,,,,,,,,,860,,,,,860,860,860,860,,860,860,860,860,,,,,860,860,',
',,837,837,837,860,837,860,860,860,837,837,,,,837,,837,837,837,837,837',
'837,837,,,,,,837,837,837,837,837,837,837,,,837,,,,,,,837,,,837,837,837',
'837,837,837,837,837,,837,837,837,,837,837,837,837,837,,,,,,,,,,,,,,',
',,,,,837,,,837,,,837,837,,,837,,,,,,837,,,,,,,,,837,,,,,837,837,837',
'837,,837,837,837,837,,,,,837,837,,,,874,874,874,837,874,837,837,837',
'874,874,,,,874,,874,874,874,874,874,874,874,,,,,,874,874,874,874,874',
'874,874,,,874,,,,,,,874,,,874,874,874,874,874,874,874,874,,874,874,874',
',874,874,,,874,,,,,,,,,,,,,,,,,,,,874,,,874,,,874,874,,,874,,,,,,,,',
',,,,,,,,,,,874,874,874,874,,874,874,874,874,,,,,874,874,,,,207,207,207',
'874,207,874,874,874,207,207,,,,207,,207,207,207,207,207,207,207,,,,',
',207,207,207,207,207,207,207,,,207,,,,,,,207,,,207,207,207,207,207,207',
'207,207,,207,207,207,,207,207,207,207,207,,,,,,,,,,,,,,,,,,,,207,,,207',
',,207,207,,,207,,207,,,,207,,,,,,,,,207,,,,,207,207,207,207,,207,207',
'207,207,,,,,207,207,,,,208,208,208,207,208,207,207,207,208,208,,,,208',
',208,208,208,208,208,208,208,,,,,,208,208,208,208,208,208,208,,,208',
',,,,,,208,,,208,208,208,208,208,208,208,208,,208,208,208,,208,208,208',
'208,208,,,,,,,,,,,,,,,,,,,,208,,,208,,,208,208,,,208,,,,,,208,,,,,,',
',,208,,,,,208,208,208,208,,208,208,208,208,,,,,208,208,,,,209,209,209',
'208,209,208,208,208,209,209,,,,209,,209,209,209,209,209,209,209,,,,',
',209,209,209,209,209,209,209,,,209,,,,,,,209,,,209,209,209,209,209,209',
'209,209,209,209,209,209,,209,209,209,209,209,,,,,,,,,,,,,,,,,,,,209',
',,209,,,209,209,,,209,,209,,209,,209,,,209,,,,,,209,,,,,209,209,209',
'209,,209,209,209,209,,,,,209,209,,,,35,35,35,209,35,209,209,209,35,35',
',,,35,,35,35,35,35,35,35,35,,,,,,35,35,35,35,35,35,35,,,35,,,,,,,35',
',,35,35,35,35,35,35,35,35,,35,35,35,,35,35,,,35,,,,,,,,,,,,,,,,,,,,35',
',,35,,,35,35,,,35,,,1015,,1015,1015,1015,1015,1015,,,,,,,,,1015,,35',
'35,35,35,,35,35,35,35,,,,,35,35,,,,35,,1015,35,,35,35,35,34,34,34,,34',
'1015,1015,,34,34,1015,,,34,,34,34,34,34,34,34,34,,,,,,34,34,34,34,34',
'34,34,,,34,,,,,,,34,,,34,34,34,34,34,34,34,34,,34,34,34,,34,34,,,34',
',,,,,,,,,,,,,,,,,,,34,,,34,,,34,34,,,34,,34,,,,,,,,,,,,,,,,,,34,34,34',
'34,,34,34,34,34,,,,,34,34,,,,212,212,212,34,212,34,34,34,212,212,,,',
'212,,212,212,212,212,212,212,212,,,,,,212,212,212,212,212,212,212,,',
'212,,,,,,,212,,,212,212,212,212,212,212,212,212,,212,212,212,,212,212',
'212,212,212,,,,,,,,,,,,,,,,,,,,212,,,212,,,212,212,,,212,,,,,,212,,',
',,,,,,212,,,,,212,212,212,212,,212,212,212,212,,,,,212,212,,,,213,213',
'213,212,213,212,212,212,213,213,,,,213,,213,213,213,213,213,213,213',
',,,,,213,213,213,213,213,213,213,,,213,,,,,,,213,,,213,213,213,213,213',
'213,213,213,,213,213,213,,213,213,213,213,213,,,,,,,,,,,,,,,,,,,,213',
',,213,,,213,213,,,213,,213,,,,213,,,,,,,,,213,,,,,213,213,213,213,,213',
'213,213,213,,,,,213,213,,,,214,214,214,213,214,213,213,213,214,214,',
',,214,,214,214,214,214,214,214,214,,,,,,214,214,214,214,214,214,214',
',,214,,,,,,,214,,,214,214,214,214,214,214,214,214,,214,214,214,,214',
'214,214,214,214,,,,,,,,,,,,,,,,,,,,214,,,214,,,214,214,,,214,,,,,,214',
',,,,,,,,214,,,,,214,214,214,214,,214,214,214,214,,,,,214,214,,,,215',
'215,215,214,215,214,214,214,215,215,,,,215,,215,215,215,215,215,215',
'215,,,,,,215,215,215,215,215,215,215,,,215,,,,,,,215,,,215,215,215,215',
'215,215,215,215,,215,215,215,,215,215,215,215,215,,,,,,,,,,,,,,,,,,',
',215,,,215,,,215,215,,,215,,,,,,215,,,,,,,,,215,,,,,215,215,215,215',
',215,215,215,215,,,,,215,215,,,,216,216,216,215,216,215,215,215,216',
'216,,,,216,,216,216,216,216,216,216,216,,,,,,216,216,216,216,216,216',
'216,,,216,,,,,,,216,,,216,216,216,216,216,216,216,216,,216,216,216,',
'216,216,216,216,216,,,,,,,,,,,,,,,,,,,,216,,,216,,,216,216,,,216,,,',
',,216,,,,,,,,,216,,,,,216,216,216,216,,216,216,216,216,,,,,216,216,',
',,217,217,217,216,217,216,216,216,217,217,,,,217,,217,217,217,217,217',
'217,217,,,,,,217,217,217,217,217,217,217,,,217,,,,,,,217,,,217,217,217',
'217,217,217,217,217,,217,217,217,,217,217,217,217,217,,,,,,,,,,,,,,',
',,,,,217,,,217,,,217,217,,,217,,,,,,217,,,,,,,,,217,,,,,217,217,217',
'217,,217,217,217,217,,,,,217,217,217,,,31,31,31,217,31,217,217,217,31',
'31,,,,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31,31,31,31,,,31,,,,,,',
'31,,,31,31,31,31,31,31,31,31,31,31,31,31,,31,31,31,31,31,,,,,,,,,,,',
',,,,,,,,31,,,31,,,31,31,,,31,,31,,31,,31,,,31,,,,,,31,,,,,31,31,31,31',
',31,31,31,31,,,,,31,31,,,,488,488,488,31,488,31,31,31,488,488,,,,488',
',488,488,488,488,488,488,488,,,,,,488,488,488,488,488,488,488,,,488',
',,,,,,488,,,488,488,488,488,488,488,488,488,488,488,488,488,,488,488',
'488,488,488,,,,,,,,,,,,,,,,,,,,488,,,488,,,488,488,,,488,,,,488,,488',
',,488,,,,,,488,,,,,488,488,488,488,,488,488,488,488,,,,,488,488,,,,30',
'30,30,488,30,488,488,488,30,30,,,,30,,30,30,30,30,30,30,30,,,,,,30,30',
'30,30,30,30,30,,,30,,,,,,,30,,,30,30,30,30,30,30,30,30,30,30,30,30,',
'30,30,30,30,30,,,,,,,,,,,,,,,,,,,,30,,,30,,,30,30,,,30,,30,,30,,30,',
',30,,,,,,30,,,,,30,30,30,30,,30,30,30,30,,,,,30,30,,,,787,787,787,30',
'787,30,30,30,787,787,,,,787,,787,787,787,787,787,787,787,,,,,,787,787',
'787,787,787,787,787,,,787,,,,,,,787,,,787,787,787,787,787,787,787,787',
',787,787,787,,787,787,,,787,,,,,,,,,,,,,,,,,,,,787,,,787,,,787,787,',
',787,,,,,,,,,,,,,,,,,,,,787,787,787,787,,787,787,787,787,,,,,787,787',
',,,773,773,773,787,773,787,787,787,773,773,,,,773,,773,773,773,773,773',
'773,773,,,,,,773,773,773,773,773,773,773,,,773,,,,,,,773,,,773,773,773',
'773,773,773,773,773,,773,773,773,,773,773,773,773,773,,,,,,,,,,,,,,',
',,,,,773,,,773,,,773,773,,,773,,,,,,773,,,,,,,,,773,,,,,773,773,773',
'773,,773,773,773,773,,,,,773,773,,,,772,772,772,773,772,773,773,773',
'772,772,,,,772,,772,772,772,772,772,772,772,,,,,,772,772,772,772,772',
'772,772,,,772,,,,,,,772,,,772,772,772,772,772,772,772,772,,772,772,772',
',772,772,772,772,772,,,,,,,,,,,,,,,,,,,,772,,,772,,,772,772,,,772,,',
',,,772,,,,,,,,,772,,,,,772,772,772,772,,772,772,772,772,,,,,772,772',
',,,771,771,771,772,771,772,772,772,771,771,,,,771,,771,771,771,771,771',
'771,771,,,,,,771,771,771,771,771,771,771,,,771,,,,,,,771,,,771,771,771',
'771,771,771,771,771,,771,771,771,,771,771,771,771,771,,,,,,,,,,,,,,',
',,,,,771,,,771,,,771,771,,,771,,,,,,771,,,,,,,,,771,,,,,771,771,771',
'771,,771,771,771,771,,,,,771,771,,,,228,228,228,771,228,771,771,771',
'228,228,,,,228,,228,228,228,228,228,228,228,,,,,,228,228,228,228,228',
'228,228,,,228,,,,,,,228,,,228,228,228,228,228,228,228,228,,228,228,228',
',228,228,228,228,228,,,,,,,,,,,,,,,,,,,,228,,,228,,,228,228,,,228,,',
',,,228,,,,,,,,,228,,,,,228,228,228,228,,228,228,228,228,,,,,228,228',
',,,29,29,29,228,29,228,228,228,29,29,,,,29,,29,29,29,29,29,29,29,,,',
',,29,29,29,29,29,29,29,,,29,,,,,,,29,,,29,29,29,29,29,29,29,29,29,29',
'29,29,,29,29,29,29,29,,,,,,,,,,,,,,,,,,,,29,,,29,,,29,29,,,29,,29,,29',
',29,,,29,,,,,,29,,,,,29,29,29,29,,29,29,29,29,,,,,29,29,,,,341,341,341',
'29,341,29,29,29,341,341,,,,341,,341,341,341,341,341,341,341,,,,,,341',
'341,341,341,341,341,341,,,341,,,,,,,341,,,341,341,341,341,341,341,341',
'341,,341,341,341,,341,341,341,341,341,,,,,,,,,,,,,,,,,,,,341,,,341,',
',341,341,,,341,,,,,,341,,,,,,,,,341,,,,,341,341,341,341,,341,341,341',
'341,,,,,341,341,,,,231,231,231,341,231,341,341,341,231,231,,,,231,,231',
'231,231,231,231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,',
',231,,,231,231,231,231,231,231,231,231,,231,231,231,,231,231,231,231',
'231,,,,,,,,,,,,,,,,,,,,231,,,231,,,231,231,,,231,,,,,,231,,,,,,,,,231',
',,,,231,231,231,231,,231,231,231,231,,,,,231,231,,,,232,232,232,231',
'232,231,231,231,232,232,,,,232,,232,232,232,232,232,232,232,,,,,,232',
'232,232,232,232,232,232,,,232,,,,,,,232,,,232,232,232,232,232,232,232',
'232,,232,232,232,,232,232,232,232,232,,,,,,,,,,,,,,,,,,,,232,,,232,',
',232,232,,,232,,,,,,232,,,,,,,,,232,,,,,232,232,232,232,,232,232,232',
'232,,,,,232,232,,,,233,233,233,232,233,232,232,232,233,233,,,,233,,233',
'233,233,233,233,233,233,,,,,,233,233,233,233,233,233,233,,,233,,,,,',
',233,,,233,233,233,233,233,233,233,233,,233,233,233,,233,233,233,233',
'233,,,,,,,,,,,,,,,,,,,,233,,,233,,,233,233,,,233,,,,,,233,,,,,,,,,233',
',,,,233,233,233,233,,233,233,233,233,,,,,233,233,,,,234,234,234,233',
'234,233,233,233,234,234,,,,234,,234,234,234,234,234,234,234,,,,,,234',
'234,234,234,234,234,234,,,234,,,,,,,234,,,234,234,234,234,234,234,234',
'234,,234,234,234,,234,234,234,234,234,,,,,,,,,,,,,,,,,,,,234,,,234,',
',234,234,,,234,,,,,,234,,,,,,,,,234,,,,,234,234,234,234,,234,234,234',
'234,,,,,234,234,,,,235,235,235,234,235,234,234,234,235,235,,,,235,,235',
'235,235,235,235,235,235,,,,,,235,235,235,235,235,235,235,,,235,,,,,',
',235,,,235,235,235,235,235,235,235,235,,235,235,235,,235,235,235,235',
'235,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,235,,,235,,,,,,235,,,,,,,,,235',
',,,,235,235,235,235,,235,235,235,235,,,,,235,235,,,,236,236,236,235',
'236,235,235,235,236,236,,,,236,,236,236,236,236,236,236,236,,,,,,236',
'236,236,236,236,236,236,,,236,,,,,,,236,,,236,236,236,236,236,236,236',
'236,,236,236,236,,236,236,236,236,236,,,,,,,,,,,,,,,,,,,,236,,,236,',
',236,236,,,236,,,,,,236,,,,,,,,,236,,,,,236,236,236,236,,236,236,236',
'236,,,,,236,236,,,,237,237,237,236,237,236,236,236,237,237,,,,237,,237',
'237,237,237,237,237,237,,,,,,237,237,237,237,237,237,237,,,237,,,,,',
',237,,,237,237,237,237,237,237,237,237,,237,237,237,,237,237,237,237',
'237,,,,,,,,,,,,,,,,,,,,237,,,237,,,237,237,,,237,,,,,,237,,,,,,,,,237',
',,,,237,237,237,237,,237,237,237,237,,,,,237,237,,,,238,238,238,237',
'238,237,237,237,238,238,,,,238,,238,238,238,238,238,238,238,,,,,,238',
'238,238,238,238,238,238,,,238,,,,,,,238,,,238,238,238,238,238,238,238',
'238,,238,238,238,,238,238,238,238,238,,,,,,,,,,,,,,,,,,,,238,,,238,',
',238,238,,,238,,,,,,238,,,,,,,,,238,,,,,238,238,238,238,,238,238,238',
'238,,,,,238,238,,,,239,239,239,238,239,238,238,238,239,239,,,,239,,239',
'239,239,239,239,239,239,,,,,,239,239,239,239,239,239,239,,,239,,,,,',
',239,,,239,239,239,239,239,239,239,239,,239,239,239,,239,239,239,239',
'239,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,239,,,239,,,,,,239,,,,,,,,,239',
',,,,239,239,239,239,,239,239,239,239,,,,,239,239,,,,240,240,240,239',
'240,239,239,239,240,240,,,,240,,240,240,240,240,240,240,240,,,,,,240',
'240,240,240,240,240,240,,,240,,,,,,,240,,,240,240,240,240,240,240,240',
'240,,240,240,240,,240,240,240,240,240,,,,,,,,,,,,,,,,,,,,240,,,240,',
',240,240,,,240,,,,,,240,,,,,,,,,240,,,,,240,240,240,240,,240,240,240',
'240,,,,,240,240,,,,241,241,241,240,241,240,240,240,241,241,,,,241,,241',
'241,241,241,241,241,241,,,,,,241,241,241,241,241,241,241,,,241,,,,,',
',241,,,241,241,241,241,241,241,241,241,,241,241,241,,241,241,241,241',
'241,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,241,,,241,,,,,,241,,,,,,,,,241',
',,,,241,241,241,241,,241,241,241,241,,,,,241,241,,,,242,242,242,241',
'242,241,241,241,242,242,,,,242,,242,242,242,242,242,242,242,,,,,,242',
'242,242,242,242,242,242,,,242,,,,,,,242,,,242,242,242,242,242,242,242',
'242,,242,242,242,,242,242,242,242,242,,,,,,,,,,,,,,,,,,,,242,,,242,',
',242,242,,,242,,,,,,242,,,,,,,,,242,,,,,242,242,242,242,,242,242,242',
'242,,,,,242,242,,,,243,243,243,242,243,242,242,242,243,243,,,,243,,243',
'243,243,243,243,243,243,,,,,,243,243,243,243,243,243,243,,,243,,,,,',
',243,,,243,243,243,243,243,243,243,243,,243,243,243,,243,243,243,243',
'243,,,,,,,,,,,,,,,,,,,,243,,,243,,,243,243,,,243,,,,,,243,,,,,,,,,243',
',,,,243,243,243,243,,243,243,243,243,,,,,243,243,,,,244,244,244,243',
'244,243,243,243,244,244,,,,244,,244,244,244,244,244,244,244,,,,,,244',
'244,244,244,244,244,244,,,244,,,,,,,244,,,244,244,244,244,244,244,244',
'244,,244,244,244,,244,244,244,244,244,,,,,,,,,,,,,,,,,,,,244,,,244,',
',244,244,,,244,,,,,,244,,,,,,,,,244,,,,,244,244,244,244,,244,244,244',
'244,,,,,244,244,,,,245,245,245,244,245,244,244,244,245,245,,,,245,,245',
'245,245,245,245,245,245,,,,,,245,245,245,245,245,245,245,,,245,,,,,',
',245,,,245,245,245,245,245,245,245,245,,245,245,245,,245,245,245,245',
'245,,,,,,,,,,,,,,,,,,,,245,,,245,,,245,245,,,245,,,,,,245,,,,,,,,,245',
',,,,245,245,245,245,,245,245,245,245,,,,,245,245,,,,246,246,246,245',
'246,245,245,245,246,246,,,,246,,246,246,246,246,246,246,246,,,,,,246',
'246,246,246,246,246,246,,,246,,,,,,,246,,,246,246,246,246,246,246,246',
'246,,246,246,246,,246,246,246,246,246,,,,,,,,,,,,,,,,,,,,246,,,246,',
',246,246,,,246,,,,,,246,,,,,,,,,246,,,,,246,246,246,246,,246,246,246',
'246,,,,,246,246,,,,247,247,247,246,247,246,246,246,247,247,,,,247,,247',
'247,247,247,247,247,247,,,,,,247,247,247,247,247,247,247,,,247,,,,,',
',247,,,247,247,247,247,247,247,247,247,,247,247,247,,247,247,247,247',
'247,,,,,,,,,,,,,,,,,,,,247,,,247,,,247,247,,,247,,,,,,247,,,,,,,,,247',
',,,,247,247,247,247,,247,247,247,247,,,,,247,247,,,,248,248,248,247',
'248,247,247,247,248,248,,,,248,,248,248,248,248,248,248,248,,,,,,248',
'248,248,248,248,248,248,,,248,,,,,,,248,,,248,248,248,248,248,248,248',
'248,,248,248,248,,248,248,248,248,248,,,,,,,,,,,,,,,,,,,,248,,,248,',
',248,248,,,248,,,,,,248,,,,,,,,,248,,,,,248,248,248,248,,248,248,248',
'248,,,,,248,248,,,,249,249,249,248,249,248,248,248,249,249,,,,249,,249',
'249,249,249,249,249,249,,,,,,249,249,249,249,249,249,249,,,249,,,,,',
',249,,,249,249,249,249,249,249,249,249,,249,249,249,,249,249,249,249',
'249,,,,,,,,,,,,,,,,,,,,249,,,249,,,249,249,,,249,,,,,,249,,,,,,,,,249',
',,,,249,249,249,249,,249,249,249,249,,,,,249,249,,,,250,250,250,249',
'250,249,249,249,250,250,,,,250,,250,250,250,250,250,250,250,,,,,,250',
'250,250,250,250,250,250,,,250,,,,,,,250,,,250,250,250,250,250,250,250',
'250,,250,250,250,,250,250,250,250,250,,,,,,,,,,,,,,,,,,,,250,,,250,',
',250,250,,,250,,,,,,250,,,,,,,,,250,,,,,250,250,250,250,,250,250,250',
'250,,,,,250,250,,,,251,251,251,250,251,250,250,250,251,251,,,,251,,251',
'251,251,251,251,251,251,,,,,,251,251,251,251,251,251,251,,,251,,,,,',
',251,,,251,251,251,251,251,251,251,251,,251,251,251,,251,251,251,251',
'251,,,,,,,,,,,,,,,,,,,,251,,,251,,,251,251,,,251,,,,,,251,,,,,,,,,251',
',,,,251,251,251,251,,251,251,251,251,,,,,251,251,,,,252,252,252,251',
'252,251,251,251,252,252,,,,252,,252,252,252,252,252,252,252,,,,,,252',
'252,252,252,252,252,252,,,252,,,,,,,252,,,252,252,252,252,252,252,252',
'252,,252,252,252,,252,252,252,252,252,,,,,,,,,,,,,,,,,,,,252,,,252,',
',252,252,,,252,,,,,,252,,,,,,,,,252,,,,,252,252,252,252,,252,252,252',
'252,,,,,252,252,,,,253,253,253,252,253,252,252,252,253,253,,,,253,,253',
'253,253,253,253,253,253,,,,,,253,253,253,253,253,253,253,,,253,,,,,',
',253,,,253,253,253,253,253,253,253,253,,253,253,253,,253,253,253,253',
'253,,,,,,,,,,,,,,,,,,,,253,,,253,,,253,253,,,253,,,,,,253,,,,,,,,,253',
',,,,253,253,253,253,,253,253,253,253,,,,,253,253,,,,254,254,254,253',
'254,253,253,253,254,254,,,,254,,254,254,254,254,254,254,254,,,,,,254',
'254,254,254,254,254,254,,,254,,,,,,,254,,,254,254,254,254,254,254,254',
'254,,254,254,254,,254,254,254,254,254,,,,,,,,,,,,,,,,,,,,254,,,254,',
',254,254,,,254,,,,,,254,,,,,,,,,254,,,,,254,254,254,254,,254,254,254',
'254,,,,,254,254,,,,255,255,255,254,255,254,254,254,255,255,,,,255,,255',
'255,255,255,255,255,255,,,,,,255,255,255,255,255,255,255,,,255,,,,,',
',255,,,255,255,255,255,255,255,255,255,,255,255,255,,255,255,255,255',
'255,,,,,,,,,,,,,,,,,,,,255,,,255,,,255,255,,,255,,,,,,255,,,,,,,,,255',
',,,,255,255,255,255,,255,255,255,255,,,,,255,255,,,,756,756,756,255',
'756,255,255,255,756,756,,,,756,,756,756,756,756,756,756,756,,,,,,756',
'756,756,756,756,756,756,,,756,,,,,,,756,,,756,756,756,756,756,756,756',
'756,,756,756,756,,756,756,756,756,756,,,,,,,,,,,,,,,,,,,,756,,,756,',
',756,756,,,756,,,,,,756,,,,,,,,,756,,,,,756,756,756,756,,756,756,756',
'756,,,,,756,756,,,,754,754,754,756,754,756,756,756,754,754,,,,754,,754',
'754,754,754,754,754,754,,,,,,754,754,754,754,754,754,754,,,754,,,,,',
',754,,,754,754,754,754,754,754,754,754,,754,754,754,,754,754,754,754',
'754,,,,,,,,,,,,,,,,,,,,754,,,754,,,754,754,,,754,,,,,,754,,,,,,,,,754',
',,,,754,754,754,754,,754,754,754,754,,,,,754,754,,,,263,263,263,754',
'263,754,754,754,263,263,,,,263,,263,263,263,263,263,263,263,,,,,,263',
'263,263,263,263,263,263,,,263,,,,,,,263,,,263,263,263,263,263,263,263',
'263,263,263,263,263,,263,263,263,263,263,,,,,,,,,,,,,,,,,,,,263,,,263',
',,263,263,,,263,,263,,263,,263,,,263,,,,,,263,,,,,263,263,263,263,,263',
'263,263,263,,,,,263,263,,,,264,264,264,263,264,263,263,263,264,264,',
',,264,,264,264,264,264,264,264,264,,,,,,264,264,264,264,264,264,264',
',,264,,,,,,,264,,,264,264,264,264,264,264,264,264,264,264,264,264,,264',
'264,264,264,264,,,,,,,,,,,,,,,,,,,,264,,,264,,,264,264,,,264,,264,,264',
',264,,,264,,,,,,264,,,,,264,264,264,264,,264,264,264,264,,,,,264,264',
',,,272,272,272,264,272,264,264,264,272,272,,,,272,,272,272,272,272,272',
'272,272,,,,,,272,272,272,272,272,272,272,,,272,,,,,,,272,,,272,272,272',
'272,272,272,272,272,272,272,272,272,,272,272,272,272,272,,,,,,,,,,,',
',,,,,,,,272,,,272,,,272,272,,,272,,272,,272,,272,,,272,,,,,,272,,,,',
'272,272,272,272,,272,272,272,272,,,,,272,272,272,,,490,490,490,272,490',
'272,272,272,490,490,,,,490,,490,490,490,490,490,490,490,,,,,,490,490',
'490,490,490,490,490,,,490,,,,,,,490,,,490,490,490,490,490,490,490,490',
',490,490,490,,490,490,490,490,490,,,,,,,,,,,,,,,,,,,,490,,,490,,,490',
'490,,,490,,,,,,490,,,,,,,,,490,,,,,490,490,490,490,,490,490,490,490',
',,,,490,490,,,,,,,490,,490,490,490,496,496,496,496,496,,,,496,496,,',
',496,,496,496,496,496,496,496,496,,,,,,496,496,496,496,496,496,496,',
',496,,,,,,496,496,496,496,496,496,496,496,496,496,496,496,,496,496,496',
',496,496,496,496,496,,,,,,,,,,,,,,,,,,,,496,,,496,,,496,496,,,496,,496',
',,,496,,,,,,,,,496,,,,,496,496,496,496,,496,496,496,496,,,,,496,496',
',,,,,496,496,,496,496,496,5,5,5,5,5,,,,5,5,,,,5,,5,5,5,5,5,5,5,,,,,',
'5,5,5,5,5,5,5,,,5,,,,,,5,5,5,5,5,5,5,5,5,5,5,5,,5,5,5,,5,5,5,5,5,,,',
',,,,,,,,,,,,,,,,5,,,5,,,5,5,,,5,,5,,,,5,,,,,,,,,5,,,,,5,5,5,5,,5,5,5',
'5,,,,,5,5,,,,279,279,279,5,279,5,5,5,279,279,,,,279,,279,279,279,279',
'279,279,279,,,,,,279,279,279,279,279,279,279,,,279,,,,,,,279,,,279,279',
'279,279,279,279,279,279,,279,279,279,,279,279,279,279,279,,,,,,,,,,',
',,,,,,,,,279,,,279,,,279,279,,,279,,,,,,279,,,,,,,,,279,,,,,279,279',
'279,279,,279,279,279,279,,,,,279,279,,,,731,731,731,279,731,279,279',
'279,731,731,,,,731,,731,731,731,731,731,731,731,,,,,,731,731,731,731',
'731,731,731,,,731,,,,,,,731,,,731,731,731,731,731,731,731,731,,731,731',
'731,,731,731,731,731,731,,,,,,,,,,,,,,,,,,,,731,,,731,,,731,731,,,731',
',,,,,731,,,,,,,,,731,,,,,731,731,731,731,,731,731,731,731,,,,,731,731',
',,,281,281,281,731,281,731,731,731,281,281,,,,281,,281,281,281,281,281',
'281,281,,,,,,281,281,281,281,281,281,281,,,281,,,,,,,281,,,281,281,281',
'281,281,281,281,281,,281,281,281,,281,281,281,281,281,,,,,,,,,,,,,,',
',,,,,281,,,281,,,281,281,,,281,,,,,,281,,,,,,,,,281,,,,,281,281,281',
'281,,281,281,281,281,,,,,281,281,,,,284,284,284,281,284,281,281,281',
'284,284,,,,284,,284,284,284,284,284,284,284,,,,,,284,284,284,284,284',
'284,284,,,284,,,,,,,284,,,284,284,284,284,284,284,284,284,,284,284,284',
',284,284,284,284,284,,,,,,,,,,,,,,,,,,,,284,,,284,,,284,284,,,284,,',
',,,284,,,,,,,,,284,,,,,284,284,284,284,,284,284,284,284,,,,,284,284',
',,,285,285,285,284,285,284,284,284,285,285,,,,285,,285,285,285,285,285',
'285,285,,,,,,285,285,285,285,285,285,285,,,285,,,,,,,285,,,285,285,285',
'285,285,285,285,285,,285,285,285,,285,285,285,285,285,,,,,,,,,,,,,,',
',,,,,285,,,285,,,285,285,,,285,,,,,,285,,,,,,,,,285,,,,,285,285,285',
'285,,285,285,285,285,,,,,285,285,,,,504,504,504,285,504,285,285,285',
'504,504,,,,504,,504,504,504,504,504,504,504,,,,,,504,504,504,504,504',
'504,504,,,504,,,,,,,504,,,504,504,504,504,504,504,504,504,,504,504,504',
',504,504,,,504,,,,,,,,,,,,,,,,,,,,504,,,504,,,504,504,,,504,,,989,,989',
'989,989,989,989,,,,,,,,,989,,504,504,504,504,,504,504,504,504,,,,,504',
'504,,,,,,989,504,,504,504,504,290,290,290,290,290,989,989,,290,290,989',
',,290,,290,290,290,290,290,290,290,,,,,,290,290,290,290,290,290,290',
',,290,,,,,,290,290,,290,290,290,290,290,290,290,290,290,,290,290,290',
',290,290,290,290,290,,,,,,,,,,,,,,,,,,,,290,,,290,,,290,290,,,290,,290',
',,,290,,,,,,,,,290,,,,,290,290,290,290,,290,290,290,290,,,,,290,290',
',,,404,404,404,290,404,290,290,290,404,404,,,,404,,404,404,404,404,404',
'404,404,,,,,,404,404,404,404,404,404,404,,,404,,,,,,,404,,,404,404,404',
'404,404,404,404,404,,404,404,404,,404,404,404,404,404,,,,,,,,,,,,,,',
',,,,,404,,,404,,,404,404,,,404,,,,,,404,,,,,,,,,404,,,,,404,404,404',
'404,,404,404,404,404,,,,,404,404,,,,725,725,725,404,725,404,404,404',
'725,725,,,,725,,725,725,725,725,725,725,725,,,,,,725,725,725,725,725',
'725,725,,,725,,,,,,,725,,,725,725,725,725,725,725,725,725,,725,725,725',
',725,725,725,725,725,,,,,,,,,,,,,,,,,,,,725,,,725,,,725,725,,,725,,',
',,,725,,,,,,,,,725,,,,,725,725,725,725,,725,725,725,725,,,,,725,725',
',,,506,506,506,725,506,725,725,725,506,506,,,,506,,506,506,506,506,506',
'506,506,,,,,,506,506,506,506,506,506,506,,,506,,,,,,,506,,,506,506,506',
'506,506,506,506,506,506,506,506,506,,506,506,506,506,506,,,,,,,,,,,',
',,,,,,,,506,,,506,,,506,506,,,506,,506,,506,,506,,,506,,,,,,506,,,,',
'506,506,506,506,,506,506,506,506,,,,,506,506,,,,512,512,512,506,512',
'506,506,506,512,512,,,,512,,512,512,512,512,512,512,512,,,,,,512,512',
'512,512,512,512,512,,,512,,,,,,,512,,,512,512,512,512,512,512,512,512',
',512,512,512,,512,512,,,512,,,,,,,,,,,,,,,,,,,,512,,,512,,,512,512,',
',512,,,,,,,,,,,,,,,,,,,,512,512,512,512,,512,512,512,512,,,,,512,512',
',,,515,515,515,512,515,512,512,512,515,515,,,,515,,515,515,515,515,515',
'515,515,,,,,,515,515,515,515,515,515,515,,,515,,,,,,,515,,,515,515,515',
'515,515,515,515,515,,515,515,515,,515,515,515,515,515,,,,,,,,,,,,,,',
',,,,,515,,,515,,,515,515,,,515,,,,,,515,,,,,,,,,515,,,,,515,515,515',
'515,,515,515,515,515,,,,,515,515,,,,516,516,516,515,516,515,515,515',
'516,516,,,,516,,516,516,516,516,516,516,516,,,,,,516,516,516,516,516',
'516,516,,,516,,,,,,,516,,,516,516,516,516,516,516,516,516,,516,516,516',
',516,516,516,516,516,,,,,,,,,,,,,,,,,,,,516,,,516,,,516,516,,,516,,',
',,,516,,,,,,,,,516,,,,,516,516,516,516,,516,516,516,516,,,,,516,516',
',,,520,520,520,516,520,516,516,516,520,520,,,,520,,520,520,520,520,520',
'520,520,,,,,,520,520,520,520,520,520,520,,,520,,,,,,,520,,,520,520,520',
'520,520,520,520,520,,520,520,520,,520,520,520,520,520,,,,,,,,,,,,,,',
',,,,,520,,,520,,,520,520,,,520,,,,,,520,,,,,,,,,520,,,,,520,520,520',
'520,,520,520,520,520,,,,,520,520,,,,298,298,298,520,298,520,520,520',
'298,298,,,,298,,298,298,298,298,298,298,298,,,,,,298,298,298,298,298',
'298,298,,,298,,,,,,,298,,,298,298,298,298,298,298,298,298,,298,298,298',
',298,298,,,298,,,,,,,,,,,,,,,,,,,,298,,,298,,,298,298,,,298,,,697,,697',
'697,697,697,697,,,,,,,,,697,,298,298,298,298,,298,298,298,298,,,,,298',
'298,,,,298,,697,298,,298,298,298,886,886,886,,886,697,697,,886,886,697',
',,886,,886,886,886,886,886,886,886,,,,,,886,886,886,886,886,886,886',
',,886,,,,,,,886,,,886,886,886,886,886,886,886,886,,886,886,886,,886',
'886,,,886,,,,,,,,,,,,,,,,,,,,886,,,886,,,886,886,,,886,,,,,,,,,,,,,',
',,,,,,886,886,886,886,,886,886,886,886,,,,,886,886,,,,526,526,526,886',
'526,886,886,886,526,526,,,,526,,526,526,526,526,526,526,526,,,,,,526',
'526,526,526,526,526,526,,,526,,,,,,,526,,,526,526,526,526,526,526,526',
'526,526,526,526,526,,526,526,526,526,526,,,,,,,,,,,,,,,,,,,,526,,,526',
',,526,526,,,526,,526,,,,526,,,526,,,,,,526,,,,,526,526,526,526,,526',
'526,526,526,,,,,526,526,,,,554,554,554,526,554,526,526,526,554,554,',
',,554,,554,554,554,554,554,554,554,,,,,,554,554,554,554,554,554,554',
',,554,,,,,,,554,,,554,554,554,554,554,554,554,554,,554,554,554,,554',
'554,554,554,554,,,,,,,,,,,,,,,,,,,,554,,,554,,,554,554,,,554,,,,,,554',
',,,,,,,,554,,,,,554,554,554,554,,554,554,554,554,,,,,554,554,,,,699',
'699,699,554,699,554,554,554,699,699,,,,699,,699,699,699,699,699,699',
'699,,,,,,699,699,699,699,699,699,699,,,699,,,,,,,699,,,699,699,699,699',
'699,699,699,699,,699,699,699,,699,699,699,699,699,,,,,,,,,,,,,,,,,,',
',699,,,699,,,699,699,,,699,,,,,,699,,,,,,,,,699,,,,,699,699,699,699',
',699,699,699,699,,,,,699,699,,,,376,376,376,699,376,699,699,699,376',
'376,,,,376,,376,376,376,376,376,376,376,,,,,,376,376,376,376,376,376',
'376,,,376,,,,,,,376,,,376,376,376,376,376,376,376,376,,376,376,376,',
'376,376,376,376,376,,,,,,,,,,,,,,,,,,,,376,,,376,,,376,376,,,376,,,',
',,376,,,,,,,,,376,,,,,376,376,376,376,,376,376,376,376,,,,,376,376,',
',,682,682,682,376,682,376,376,376,682,682,,,,682,,682,682,682,682,682',
'682,682,,,,,,682,682,682,682,682,682,682,,,682,,,,,,,682,,,682,682,682',
'682,682,682,682,682,,682,682,682,,682,682,682,682,682,,,,,,,,,,,,,,',
',,,,,682,,,682,,,682,682,,,682,,682,,,,682,,,,,,,,,682,,,,,682,682,682',
'682,,682,682,682,682,,,,,682,682,,,,574,574,574,682,574,682,682,682',
'574,574,,,,574,,574,574,574,574,574,574,574,,,,,,574,574,574,574,574',
'574,574,,,574,,,,,,,574,,,574,574,574,574,574,574,574,574,,574,574,574',
',574,574,574,574,574,,,,,,,,,,,,,,,,,,,,574,,,574,,,574,574,,,574,,574',
',,,574,,,,,,,,,574,,,,,574,574,574,574,,574,574,574,574,,,,,574,574',
',,,677,677,677,574,677,574,574,574,677,677,,,,677,,677,677,677,677,677',
'677,677,,,,,,677,677,677,677,677,677,677,,,677,,,,,,,677,,,677,677,677',
'677,677,677,677,677,,677,677,677,,677,677,,,677,,,,,,,,,,,,,,,,,,,,677',
',,677,,,677,677,,,677,,,,,,,,,,,,,,,,,,,,677,677,677,677,,677,677,677',
'677,,,,,677,677,,,,575,575,575,677,575,677,677,677,575,575,,,,575,,575',
'575,575,575,575,575,575,,,,,,575,575,575,575,575,575,575,,,575,,,,,',
',575,,,575,575,575,575,575,575,575,575,575,575,575,575,,575,575,575',
'575,575,,,,,,,,,,,,,,,,,,,,575,,,575,,,575,575,,,575,,575,,575,,575',
',,575,,,,,,575,,,,,575,575,575,575,,575,575,575,575,,,,,575,575,,,,585',
'585,585,575,585,575,575,575,585,585,,,,585,,585,585,585,585,585,585',
'585,,,,,,585,585,585,585,585,585,585,,,585,,,,,,,585,,,585,585,585,585',
'585,585,585,585,585,585,585,585,,585,585,585,585,585,,,,,,,,,,,,,,,',
',,,,585,,,585,,,585,585,,,585,,585,,585,,585,,,585,,,,,,585,,,,,585',
'585,585,585,,585,585,585,585,,,,,585,585,,,,442,442,442,585,442,585',
'585,585,442,442,,,,442,,442,442,442,442,442,442,442,,,,,,442,442,442',
'442,442,442,442,,,442,,,,,,,442,,,442,442,442,442,442,442,442,442,442',
'442,442,442,,442,442,442,442,442,,,,,,,,,,,,,,,,,,,,442,,,442,,,442',
'442,,,442,,442,,442,,442,,,442,,,,,,442,,,,,442,442,442,442,,442,442',
'442,442,,,,,442,442,,,,619,619,619,442,619,442,442,442,619,619,,,,619',
',619,619,619,619,619,619,619,,,,,,619,619,619,619,619,619,619,,,619',
',,,,,,619,,,619,619,619,619,619,619,619,619,,619,619,619,,619,619,619',
'619,619,,,,,,,,,,,,,,,,,,,,619,,,619,,,619,619,,,619,,619,,,,619,,,',
',,,,,619,,,,,619,619,619,619,,619,619,619,619,,,,,619,619,,,,315,315',
'315,619,315,619,619,619,315,315,,,,315,,315,315,315,315,315,315,315',
',,,,,315,315,315,315,315,315,315,,,315,,,,,,,315,,,315,315,315,315,315',
'315,315,315,,315,315,315,,315,315,,,315,,,,,,,,,,,,,,,,,,,,315,,,315',
',,315,315,,,315,,,,,,,,,,,,,,,,,,,,315,315,315,315,,315,315,315,315',
',,,,315,315,,,,360,360,360,315,360,315,315,315,360,360,,,,360,,360,360',
'360,360,360,360,360,,,,,,360,360,360,360,360,360,360,,,360,,,,,,,360',
',,360,360,360,360,360,360,360,360,,360,360,360,,360,360,360,360,360',
',,,,,,,,,,,,,,,,,,,360,,,360,,,360,360,,,360,,,,,,360,,,,,,,,,360,,',
',,360,360,360,360,,360,360,360,360,,,,,360,360,,,,666,666,666,360,666',
'360,360,360,666,666,,,,666,,666,666,666,666,666,666,666,,,,,,666,666',
'666,666,666,666,666,,,666,,,,,,,666,,,666,666,666,666,666,666,666,666',
',666,666,666,,666,666,,,666,,,,,,,,,,,,,,,,,,,,666,,,666,,,666,666,',
',666,,,,,,,,,,,,,,,,,,,,666,666,666,666,,666,666,666,666,,,,,666,666',
',,,662,662,662,666,662,666,666,666,662,662,,,,662,,662,662,662,662,662',
'662,662,,,,,,662,662,662,662,662,662,662,,,662,,,,,,,662,,,662,662,662',
'662,662,662,662,662,,662,662,662,,662,662,662,662,662,,,,,,,,,,,,,,',
',,,,,662,,,662,,,662,662,,,662,,,,,,662,,,,,,,,,662,,,,,662,662,662',
'662,,662,662,662,662,,,,,662,662,,,,659,659,659,662,659,662,662,662',
'659,659,,,,659,,659,659,659,659,659,659,659,,,,,,659,659,659,659,659',
'659,659,,,659,,,,,,,659,,,659,659,659,659,659,659,659,659,,659,659,659',
',659,659,659,659,659,,,,,,,,,,,,,,,,,,,,659,,,659,,,659,659,,,659,,',
',,,659,,,,,,,,,659,,,,,659,659,659,659,,659,659,659,659,,,,,659,659',
',,,323,323,323,659,323,659,659,659,323,323,,,,323,,323,323,323,323,323',
'323,323,,,,,,323,323,323,323,323,323,323,,,323,,,,,,,323,,,323,323,323',
'323,323,323,323,323,,323,323,323,,323,323,323,323,323,,,,,,,,,,,,,,',
',,,,,323,,,323,323,,323,323,,,323,,,,,,323,,,,,,,,,323,,,,,323,323,323',
'323,,323,323,323,323,,,,,323,323,,,,20,20,20,323,20,323,323,323,20,20',
',,,20,,20,20,20,20,20,20,20,,,,,,20,20,20,20,20,20,20,,,20,,,,,,,20',
',,20,20,20,20,20,20,20,20,,20,20,20,,20,20,20,20,20,,,,,,,,,,,,,,,,',
',,,20,,,20,,,20,20,,,20,,,,,,20,,,,,,,,,20,,,,,20,20,20,20,,20,20,20',
'20,,,,,20,20,,,,325,325,325,20,325,20,20,20,325,325,,,,325,,325,325',
'325,325,325,325,325,,,,,,325,325,325,325,325,325,325,,,325,,,,,,,325',
',,325,325,325,325,325,325,325,325,,325,325,325,,325,325,325,325,325',
',,,,,,,,,,,,,,,,,,,325,,,325,,,325,325,,,325,,,,,,325,,,,,,,,,325,,',
',,325,325,325,325,,325,325,325,325,,,,,325,325,,,,620,620,620,325,620',
'325,325,325,620,620,,,,620,,620,620,620,620,620,620,620,,,,,,620,620',
'620,620,620,620,620,,,620,,,,,,,620,,,620,620,620,620,620,620,620,620',
',620,620,620,,620,620,620,620,620,,,,,,,,,,,,,,,,,,,,620,,,620,,,620',
'620,,,620,,,,,,620,,,,,,,,,620,,,,,620,620,620,620,,620,620,620,620',
',,,,620,620,,,,623,623,623,620,623,620,620,620,623,623,,,,623,,623,623',
'623,623,623,623,623,,,,,,623,623,623,623,623,623,623,,,623,,,,,,,623',
',,623,623,623,623,623,623,623,623,623,623,623,623,,623,623,623,623,623',
',,,,,,,,,,,,,,,,,,,623,,,623,,,623,623,,,623,,623,,623,,623,,,623,,',
',,,623,,,,,623,623,623,623,,623,623,623,623,,,,,623,623,,,,624,624,624',
'623,624,623,623,623,624,624,,,,624,,624,624,624,624,624,624,624,,,,',
',624,624,624,624,624,624,624,,,624,,,,,,,624,,,624,624,624,624,624,624',
'624,624,624,624,624,624,,624,624,624,624,624,,,,,,,,,,,,,,,,,,,,624',
',,624,,,624,624,,,624,,,,624,,624,,,624,,,,,,624,,,,,624,624,624,624',
',624,624,624,624,,,,,624,624,,,,923,923,923,624,923,624,624,624,923',
'923,,,,923,,923,923,923,923,923,923,923,,,,,,923,923,923,923,923,923',
'923,,,923,,,,,,,923,,,923,923,923,923,923,923,923,923,,923,923,923,',
'923,923,923,923,923,,,,,,,,,,,,,,,,,,,,923,,,923,,,923,923,,,923,,,',
',,923,,,,,,,,,923,,,,,923,923,923,923,,923,923,923,923,,,,,923,923,',
',,625,625,625,923,625,923,923,923,625,625,,,,625,,625,625,625,625,625',
'625,625,,,,,,625,625,625,625,625,625,625,,,625,,,,,,,625,,,625,625,625',
'625,625,625,625,625,,625,625,625,,625,625,625,625,625,,,,,,,,,,,,,,',
',,,,,625,,,625,,,625,625,,,625,,,,,,625,,,,,,,,,625,,,,,625,625,625',
'625,,625,625,625,625,,,,,625,625,,,,626,626,626,625,626,625,625,625',
'626,626,,,,626,,626,626,626,626,626,626,626,,,,,,626,626,626,626,626',
'626,626,,,626,,,,,,,626,,,626,626,626,626,626,626,626,626,,626,626,626',
',626,626,626,626,626,,,,,,,,,,,,,,,,,,,,626,,,626,,,626,626,,,626,,',
',,,626,,,,,,,,,626,,,,,626,626,626,626,,626,626,626,626,,,,,626,626',
',,,985,985,985,626,985,626,626,626,985,985,,,,985,,985,985,985,985,985',
'985,985,,,,,,985,985,985,985,985,985,985,,,985,,,,,,,985,,,985,985,985',
'985,985,985,985,985,985,985,985,985,,985,985,985,985,985,,,,,,,,,,,',
',,,,,,,,985,,,985,,,985,985,,,985,,985,,985,,985,,,985,,,,,,985,,,,',
'985,985,985,985,,985,985,985,985,,,,,985,985,,,,630,630,630,985,630',
'985,985,985,630,630,,,,630,,630,630,630,630,630,630,630,,,,,,630,630',
'630,630,630,630,630,,,630,,,,,,,630,,,630,630,630,630,630,630,630,630',
',630,630,630,,630,630,630,630,630,,,,,,,,,,,,,,,,,,,,630,,,630,,,630',
'630,,,630,,,,,,630,,,,,,,,,630,,,,,630,630,630,630,,630,630,630,630',
',,,,630,630,,,,635,635,635,630,635,630,630,630,635,635,,,,635,,635,635',
'635,635,635,635,635,,,,,,635,635,635,635,635,635,635,,,635,,,,,,,635',
',,635,635,635,635,635,635,635,635,,635,635,635,,635,635,635,635,635',
',,,,,,,,,,,,,,,,,,,635,,,635,,,635,635,,,635,,,,,,635,,,,,,,,,635,,',
',,635,635,635,635,,635,635,635,635,,,,,635,635,,,,631,631,631,635,631',
'635,635,635,631,631,,,,631,,631,631,631,631,631,631,631,,,,,,631,631',
'631,631,631,631,631,,,631,,,,,,,631,,,631,631,631,631,631,631,631,631',
',631,631,631,,631,631,631,631,631,,,,,,,,,,,,,,,,,,,,631,,,631,,,631',
'631,,,631,,,,,,631,,,,,,,,,631,,,,,631,631,631,631,,631,631,631,631',
',,,,631,631,,,,634,634,634,631,634,631,631,631,634,634,,,,634,,634,634',
'634,634,634,634,634,,,,,,634,634,634,634,634,634,634,,,634,,,,,,,634',
',,634,634,634,634,634,634,634,634,,634,634,634,,634,634,634,634,634',
',,,,,,,,,,,,,,,,,,,634,,,634,,,634,634,,,634,,,,,,634,,,,,,,,,634,,',
',,634,634,634,634,,634,634,634,634,,,,,634,634,,,,340,340,340,634,340',
'634,634,634,340,340,,,,340,,340,340,340,340,340,340,340,,,,,,340,340',
'340,340,340,340,340,,,340,,,,,,,340,,,340,340,340,340,340,340,340,340',
',340,340,340,,340,340,340,340,340,,,,,,,,,,,,,,,,,,,,340,,,340,,,340',
'340,,,340,,,,,,340,,,,,,,,,340,,,,,340,340,340,340,,340,340,340,340',
',,,,340,340,,,,770,770,770,340,770,340,340,340,770,770,,,,770,,770,770',
'770,770,770,770,770,,,,,,770,770,770,770,770,770,770,,,770,,,,,,,770',
',,770,770,770,770,770,770,770,770,,770,770,770,,770,770,770,770,770',
',,,,,,,,,,,,,,,,,,,770,,,770,,,770,770,,,770,,,,,,770,,,,,,,,,770,,',
',,770,770,770,770,,770,770,770,770,,,,,770,770,,,,,424,,770,,770,770',
'770,424,424,424,,,424,424,424,,424,,,,,,,,,424,424,424,424,,,,,,,,424',
'424,,424,424,424,424,424,,,,,,,,,,,,,,,,,,,,,,,424,424,424,424,424,424',
'424,424,424,424,424,424,424,424,,,424,424,424,,,424,,,424,,,424,424',
',424,,424,,424,,424,424,,424,424,424,424,424,,424,424,424,,,,,,,,,,',
',,,424,,,424,424,424,424,56,424,,424,,,,56,56,56,,,56,56,56,,56,,,,',
',,,,,56,56,56,,,,,,,,56,56,,56,56,56,56,56,,,,,,,,,,,,,,,,,,,,,,,56',
'56,56,56,56,56,56,56,56,56,56,56,56,56,,,56,56,56,,,56,,,56,,,56,56',
',56,,56,,56,,56,56,,56,56,56,56,56,,56,,56,,,,,,,,,,,,,,56,,,56,56,56',
'56,425,56,,56,,,,425,425,425,,,425,425,425,,425,,,,,,,,,425,425,425',
'425,,,,,,,,425,425,,425,425,425,425,425,,,,,,,,,,,,,,,,,,,,,,,425,425',
'425,425,425,425,425,425,425,425,425,425,425,425,,,425,425,425,,,425',
',,425,,,425,425,,425,,425,,425,,425,425,,425,425,425,425,425,,425,425',
'425,977,,977,977,977,977,977,,,,,,,425,,977,425,425,425,425,27,425,',
'425,,,,27,27,27,,,27,27,27,,27,977,,,,,,,,27,27,27,977,977,,,,977,,',
'27,27,,27,27,27,27,27,,,,,,,,,,,,,,,,,,,,,,,27,27,27,27,27,27,27,27',
'27,27,27,27,27,27,,,27,27,27,,,27,,27,27,,,27,27,,27,,27,,27,,27,27',
',27,27,27,27,27,28,27,27,27,,,,28,28,28,,,28,28,28,,28,27,,,27,27,,27',
',27,28,28,,,,,,,,,28,28,,28,28,28,28,28,,,,,,,,,,,,,,,,,,,,,,,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,,,28,28,28,,,28,,28,28,,,28,28,',
'28,,28,,28,,28,28,,28,28,28,28,28,,28,415,28,,,,,,415,415,415,,,415',
'415,415,28,415,,28,28,,28,,28,,415,415,415,,,,,,,,,415,415,,415,415',
'415,415,415,,,,,,,,,,,,,,,,,,,,,,,415,415,415,415,415,415,415,415,415',
'415,415,415,415,415,,,415,415,415,,,415,,415,415,,,415,415,,415,,415',
',415,,415,415,,415,415,415,415,415,,415,415,415,,,,,,,,,,,,,,415,,474',
'415,415,,415,,415,474,474,474,,,474,474,474,646,474,646,646,646,646',
'646,,,,474,474,,,,646,,,,,,474,474,,474,474,474,474,474,,,,,,,,865,646',
'865,865,865,865,865,,,,646,646,646,646,,865,,646,,736,,736,736,736,736',
'736,474,,,,,,,474,736,,,865,474,474,,,,646,,,865,865,865,865,,,,865',
',,736,,,,,474,474,,,736,736,736,736,,,,736,,,,474,,,474,,,,,474,616',
'616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616,616',
'616,616,616,616,616,616,,,,616,616,616,616,616,616,616,616,616,616,',
',,,,616,616,616,616,616,616,616,616,616,,,616,,,,,,,,616,616,,616,616',
'616,616,616,616,616,,,616,616,,,,616,616,616,616,,,,,,,,,,,,,,616,616',
',616,616,616,616,616,616,616,616,616,616,616,616,,,616,616,,,,,,,,,',
',,,,616,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,,,,9,9,9,9,9',
'9,9,9,9,9,,,,,,9,9,9,9,9,9,9,9,9,,,9,,,,,,,,9,9,,9,9,9,9,9,9,9,,,9,9',
',,,9,9,9,9,,,,,,,,,,,,,,9,9,,9,9,9,9,9,9,9,9,9,9,9,9,,,9,9,,,,,,,,,',
',,,,9,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395,395',
'395,395,395,395,395,395,395,395,,,,395,395,395,395,395,395,395,395,395',
'395,,,,,,395,395,395,395,395,395,395,395,395,,,395,,,,,,,,395,395,,395',
'395,395,395,395,395,395,,,395,395,,,,395,395,395,395,,,,,,,,,,,,,,395',
'395,,395,395,395,395,395,395,395,395,395,395,395,395,,,395,395,,,,,',
',,,,,,,,395,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8',
'8,8,8,8,8,8,8,,,,,,8,8,8,8,8,8,8,8,8,8,,8,,,,,,,,8,8,,8,8,8,8,8,8,8',
',,8,8,,,,8,8,8,8,,,,,,,,,,,,,,8,8,,8,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,',
',,,,,,,,,,8,738,738,738,738,738,738,738,738,738,738,738,738,738,738',
'738,738,738,738,738,738,738,738,738,738,,,,738,738,738,738,738,738,738',
'738,738,738,,,,,,738,738,738,738,738,738,738,738,738,,,738,,,,,,,,738',
'738,,738,738,738,738,738,738,738,,,738,738,,,,738,738,738,738,,,,,,',
',,,,,,,738,738,,738,738,738,738,738,738,738,738,738,738,738,738,,,738',
'71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71',
'71,,,,71,71,71,71,71,71,71,71,71,71,,,,,,71,71,71,71,71,71,71,71,71',
'71,71,71,,71,,,,,,71,71,,71,71,71,71,71,71,71,,,71,71,,,,71,71,71,71',
',,,,,71,,,,,,,,71,71,,71,71,71,71,71,71,71,71,71,71,71,71,518,518,71',
',518,,,,,,,,518,518,,518,518,518,518,518,518,518,,,518,518,,,,518,518',
'518,518,,,,,,518,,,,,,,,518,518,,518,518,518,518,518,518,518,518,518',
'518,518,518,583,583,518,,583,,,,,,,,583,583,,583,583,583,583,583,583',
'583,,,583,583,,,,583,583,583,583,,,,,,583,,,,,,,,583,583,,583,583,583',
'583,583,583,583,583,583,583,583,583,211,211,583,,211,,,,,,,,211,211',
',211,211,211,211,211,211,211,,,211,211,,,,211,211,211,211,,,,,,211,',
',,,,,,211,211,,211,211,211,211,211,211,211,211,211,211,211,211,577,577',
'211,,577,,,,,,,,577,577,,577,577,577,577,577,577,577,,,577,577,,,,577',
'577,577,577,,,,,,577,,,,,,,,577,577,,577,577,577,577,577,577,577,577',
'577,577,577,577,576,576,577,,576,,,,,,,,576,576,,576,576,576,576,576',
'576,576,,,576,576,,,,576,576,576,576,,,,,,576,,,,,,,,576,576,,576,576',
'576,576,576,576,576,576,576,576,576,576,987,987,576,,987,,,,,,,,987',
'987,,987,987,987,987,987,987,987,,,987,987,,,,987,987,987,987,,,,,,987',
',,,,,,,987,987,,987,987,987,987,987,987,987,987,987,987,987,987,584',
'584,987,,584,,,,,,,,584,584,,584,584,584,584,584,584,584,,,584,584,',
',,584,584,584,584,,,,,,584,,,,,,,,584,584,,584,584,584,584,584,584,584',
'584,584,584,584,584,939,939,584,,939,,,,,,,,939,939,,939,939,939,939',
'939,939,939,,,939,939,,,,939,939,939,939,,,,,,939,,,,,,,,939,939,,939',
'939,939,939,939,939,939,939,939,939,939,939,986,986,939,,986,,,,,,,',
'986,986,,986,986,986,986,986,986,986,,,986,986,,,,986,986,986,986,,',
',,,986,,,,,,,,986,986,,986,986,986,986,986,986,986,986,986,986,986,986',
'259,259,986,,259,,,,,,,,259,259,,259,259,259,259,259,259,259,,,259,259',
',,,259,259,259,259,,,,,,,,,,,,,,259,259,,259,259,259,259,259,259,259',
'259,259,259,259,259,517,517,259,,517,,,,,,,,517,517,,517,517,517,517',
'517,517,517,,,517,517,,,,517,517,517,517,,,,,,517,,,,,,,,517,517,,517',
'517,517,517,517,517,517,517,517,517,517,517,507,507,517,,507,,,,,,,',
'507,507,,507,507,507,507,507,507,507,,,507,507,,,,507,507,507,507,,',
',,,507,,,,,,,,507,507,,507,507,507,507,507,507,507,507,507,507,507,507',
'508,508,507,,508,,,,,,,,508,508,,508,508,508,508,508,508,508,,,508,508',
',,,508,508,508,508,,,,,,508,,,,,,,,508,508,,508,508,508,508,508,508',
'508,508,508,508,508,508,440,440,508,,440,,,,,,,,440,440,,440,440,440',
'440,440,440,440,,,440,440,,,,440,440,440,440,,,,,,440,,,,,,,,440,440',
',440,440,440,440,440,440,440,440,440,440,440,440,441,441,440,,441,,',
',,,,,441,441,,441,441,441,441,441,441,441,,,441,441,,,,441,441,441,441',
',,,,,441,,,,,,,,441,441,,441,441,441,441,441,441,441,441,441,441,441',
'441,210,210,441,,210,,,,,,,,210,210,,210,210,210,210,210,210,210,,,210',
'210,,,,210,210,210,210,,,,,,210,,,,,,,,210,210,,210,210,210,210,210',
'210,210,210,210,210,210,210,,695,210,695,695,695,695,695,,971,,971,971',
'971,971,971,695,,,,,,,,971,,899,,899,899,899,899,899,,,,,,695,,,899',
',,,,971,695,695,695,695,,,,695,971,971,971,971,,,,971,899,,897,,897',
'897,897,897,897,,,899,899,,,,899,897,,895,,895,895,895,895,895,975,',
'975,975,975,975,975,,895,,,,,897,,975,,973,,973,973,973,973,973,897',
'897,,,,897,895,,973,,,,,975,,,,895,895,,,,895,,975,975,,,,975,973,,534',
',534,534,534,534,534,,,973,973,,,,973,534,,893,,893,893,893,893,893',
',693,,693,693,693,693,693,893,,,,,534,,,693,,,,,,534,534,534,534,,,',
'534,893,,,,,,,,693,893,893,893,893,,,,893,693,693,693,693,,,336,693',
'336,336,336,336,336,869,,869,869,869,869,869,,336,,,,,,867,869,867,867',
'867,867,867,,,,,,,,,867,336,336,,,,,,869,,336,336,336,336,,,,336,,869',
'869,,867,,869,,,,,,,867,867,867,867,,,737,867,737,737,737,737,737,,',
',,,,,,737,,,,,,,,,,,,,,,,,,,,,,737,,,,,,,,,737,737,737,737,,,,737' ]
        racc_action_check = arr = ::Array.new(25105, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
  4780,  1369,   nil,   505,   nil, 15718,  1405,  1228, 23427, 23171,
  1161,   nil,  1097,  1148,   902,   497,   972,   595,   nil,   -77,
 20188,  2540,  1001,   nil,   616,   nil,   256, 22558, 22668, 11248,
 10462, 10200,   nil,  3520,  9283,  9144,   nil,   880,   494,   466,
   909,   209,  7155,  7024,  5444,   820,   860,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil, 22290,   nil,   -72,  5575,
  5706,   -24,   nil,  5968,  6099,   nil,   nil,  6230,  6369,  6500,
  6631, 23668,   nil,   nil,   nil,   nil,   nil,   -81,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   110,   nil,   nil,   330,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   920,
   nil,  7425,   nil,   nil,   nil,   nil,  7564,  7695,  7826,  7957,
  8096,  4220,   nil,   173,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   768,   nil,  3940,  8751,  8882,  9013,
 24644, 23851,  9414,  9545,  9676,  9807,  9938, 10069,   nil,   nil,
   762,   109,   112,   679,   199,   414,   455,   nil, 11117,  3100,
   448, 11510, 11641, 11772, 11903, 12034, 12165, 12296, 12427, 12558,
 12689, 12820, 12951, 13082, 13213, 13344, 13475, 13606, 13737, 13868,
 13999, 14130, 14261, 14392, 14523, 14654,   nil,   nil,   nil, 24278,
   nil,   nil,   348, 15047, 15178,   nil,   nil,   nil,   nil,   nil,
   nil,   nil, 15309,   nil,  1420,   nil,   288,   241,   nil, 15849,
   265, 16111,   nil,   nil, 16242, 16373,   nil,   nil,   318,   nil,
 16643,   705,   193,   108,   720,   105,   132,    66, 17691,  2260,
   549,   586,   723,   704,  1003,   nil,   761,   769,   166,   nil,
   nil,   nil,   885,   221,   894, 19402,   nil,   496,  1068,  1182,
   nil,  1199,   nil, 20057,  2120, 20319,  1230,   nil,  -101,   483,
   865,   783,   144,   414,   nil,   nil, 24927,   680,    26,   -10,
 21891, 11379,  -102,   399,   176,    22,   -18,   516,   260,   -19,
   366,   nil,   nil,   450,   299,   156,   nil,   341,   nil,     9,
 19533,   nil,   nil,   nil,   589,   557,   195,   620,   389,   305,
   375,   511,   -28,   nil,   446,   nil, 18354,   nil,   380,   499,
   486,   261,   439,   -39,   -41,   321,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   968, 23299,   nil,   nil,   nil,   nil,
  1034,   nil,   nil,  1019, 16774,  1021,   nil,   nil,  1000,  1100,
   nil,  1119,  1120,   277,   289, 22780,   nil,   nil,   nil,   220,
     0,  1165,   nil,   nil, 22156, 22424,   nil,  2400,   nil,  1135,
   nil,   nil,   720,   nil,   nil,   nil,   nil,    18,   nil,  1277,
 24522, 24583, 19140,   -62,  5182,  5313,  5837,  3800,  4780,  3350,
   616,  1295,  1226,  1222,  1221,  5182,  5313,  5444,  4360,  3940,
  3380,  3520,  3660,  3240,  4080,  4220,  4920,  5051,  3215,  3268,
  4640,  4500,  6762,   -47, 22909,   nil,   nil,   nil,   nil,  1144,
   nil,   -15,   -48,  1134,   nil,   nil,  7286,   nil, 10331,   nil,
 15440,   nil,   254,   nil,   nil,   nil, 15579,  1420,  4640,  1096,
  1067,   nil,   nil,  1033, 16504,  1023, 17036, 24400, 24461,  1143,
  1059,   nil, 17167,  1004,   nil, 17298, 17429, 24339, 23729,  2680,
 17560,  1053,  1047,   691,   951,   nil, 17961,   nil,   nil,  5051,
   nil,   nil,   nil,   nil, 24850,   nil,   907,   903,   nil,   881,
   874,   864,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   852,  3086,   nil,   nil, 18092,   nil,   nil,   nil,   942,   nil,
   nil,   nil,   941,   nil,   nil,   939,  1000,   975,   nil,   860,
    24,    95,   930,   932, 18616, 18878, 23973, 23912,    57,   nil,
   nil,   792,   nil, 23790, 24095, 19009,   nil,   nil,   nil,   571,
   229,  2400,   482,   nil,   -33,   nil,   nil,   nil,   703,   nil,
   nil,   nil,   403,   nil,   nil,   433,   nil,   473,   nil,   nil,
   373,   nil,   369,   nil,   nil,   nil, 23043,   nil,   358, 19271,
 20450,   495,   333, 20581, 20712, 20974, 21105,    -1,   nil,   nil,
 21367, 21629,   391,   nil, 21760, 21498,   nil,   nil,   167,   198,
   578,   442,   401,   860,  1840,   nil, 22873,   nil,  1700,  1015,
    -8,   -44,   nil,  1840,  1980,   nil,  1224,   nil,  1207, 19926,
   nil,   nil, 19795,   nil,  1131,  -122, 19664,   971,   nil,   960,
   134,    -1,   923,   223,  1140,   860,   783, 18747,  1980,   786,
   202,   805, 18485,   nil,   676,   nil,   261,    68,   430,   603,
   nil,   nil,   633, 24875,   nil, 24706,   nil, 17738,   nil, 18223,
   nil,  3115,   nil,   201,   443,  1002,   nil,   nil,   nil,   nil,
   819,   nil,    17,   nil,   nil,   nil,   nil,    51,   nil,    32,
   -29,    39,    40,    68,    10, 16905,   477,   387,   nil,   189,
  2680, 15980,   nil,   nil,   356,  2820, 22928, 25000, 23555,   nil,
   nil,   nil,   nil,   nil,   nil,  2960,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   296, 14916,  1140, 14785,   nil,   362,   nil,
  2960,   nil,  1560,   nil,   nil,  1700,   nil,  2120,   nil,  2260,
 22022, 10986, 10855, 10724,   116,   470,   489,   510,   nil,   525,
   534,   542,   nil,   568,   558,   564,   570, 10593,   nil,   nil,
   727,   nil,   nil,  3240,   663,   771,   nil,   nil,   nil,   nil,
   668,   224,   nil,   nil,   806,   nil,  3380,   711,   758,   nil,
   nil,   757,   nil,   nil,  3660,  3800,   764,   724,   nil,   nil,
   nil,   740,   741,   nil,   751,   753,   nil,   754,   nil,   nil,
   758,  3180,   764,  3460,   nil,   891,   nil,  8489,   893,  4080,
  4500,   nil,  6893,  4920,   136,   138,   nil,   945,   145,  4360,
   nil,   963,   843,   466,   nil,   857,   852,   nil,  1280,  8227,
  8358,   nil,   768,   nil,   nil, 22909,   nil, 24948,   nil, 24934,
   nil,   nil,   899,  1126,  8620,   863,   969,   nil,   913,   nil,
   nil,   nil,  2540,   nil,   nil,    79, 17830,   nil,   nil,   924,
  1030,   nil,   nil, 24867,   nil, 24787,   nil, 24770,   nil, 24731,
   nil,   nil,   nil,   nil,   435,  3366,   953,   nil,    10,   nil,
  1085,  1090,   nil,   230,   nil,   nil,   nil,  1103,   nil,   nil,
   nil,  1024,   nil, 20843,   991,   nil,   nil,   992,   994,   997,
  -118,   nil,  1000,   nil,   344,   nil,   nil,   nil,   300, 24156,
   nil,   nil,   nil,  1560,  1072,  1042,  1212,  1109,   932,   nil,
   nil,   nil,  1034,  1035,  1043,  1049,  1063,   641,  1088,  3404,
  1420,   nil,   nil,   nil,   nil,   nil,  1280,   nil,  1140,  2820,
   nil, 24714,   nil, 24811,   nil, 24794,   nil, 22487,   nil,   nil,
   nil,  1266,  1178,  1181,  1265, 21236, 24217, 24034,   720, 16551,
   nil,   nil,   nil,   nil,  3125,  1160,   796,  1295,  1297,  1174,
  1175,  1183,  1189,   nil,   nil,  1206,    40,    33,    39,  1000,
  1231,  1233,   nil,   nil,   nil,  9191,   nil,   nil,   nil,   nil,
    36,   nil,  1237,   nil ]

racc_action_default = [
    -3,  -597,    -1,  -583,    -4,  -597,    -7,  -597,  -597,  -597,
  -597,   -29,  -597,  -597,  -597,  -281,  -597,   -40,   -43,  -585,
  -597,   -48,   -50,   -51,   -52,   -56,  -258,  -258,  -258,  -295,
  -330,  -331,   -68,   -11,   -72,   -80,   -82,  -597,  -488,  -489,
  -597,  -597,  -597,  -597,  -597,  -585,  -239,  -272,  -273,  -274,
  -275,  -276,  -277,  -278,  -279,  -280,  -573,  -283,  -285,  -596,
  -563,  -303,  -391,  -597,  -597,  -308,  -311,  -583,  -597,  -597,
  -597,  -597,  -332,  -333,  -429,  -430,  -431,  -432,  -433,  -454,
  -436,  -437,  -456,  -458,  -441,  -446,  -450,  -452,  -468,  -456,
  -470,  -472,  -473,  -474,  -475,  -571,  -477,  -478,  -572,  -480,
  -481,  -482,  -483,  -484,  -485,  -486,  -487,  -492,  -493,  -597,
    -2,  -584,  -592,  -593,  -594,    -6,  -597,  -597,  -597,  -597,
  -597,    -3,   -17,  -597,  -111,  -112,  -113,  -114,  -115,  -116,
  -117,  -118,  -119,  -123,  -124,  -125,  -126,  -127,  -128,  -129,
  -130,  -131,  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,
  -140,  -141,  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,
  -150,  -151,  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,
  -160,  -161,  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,
  -170,  -171,  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,
  -180,  -181,  -182,  -183,  -184,  -185,  -186,  -187,  -188,  -189,
  -190,  -191,  -192,  -193,   -22,  -120,   -11,  -597,  -597,  -248,
  -597,  -597,  -597,  -597,  -597,  -597,  -597,  -585,  -586,   -47,
  -597,  -488,  -489,  -597,  -281,  -597,  -597,  -229,  -597,   -11,
  -597,  -597,  -597,  -597,  -597,  -597,  -597,  -597,  -597,  -597,
  -597,  -597,  -597,  -597,  -597,  -597,  -597,  -597,  -597,  -597,
  -597,  -597,  -597,  -597,  -597,  -597,  -236,  -398,  -400,  -597,
  -581,  -582,   -57,  -248,  -597,  -302,  -404,  -413,  -415,   -63,
  -410,   -64,  -585,   -65,  -240,  -253,  -262,  -262,  -257,  -597,
  -263,  -597,  -454,  -565,  -597,  -597,   -66,   -67,  -583,   -12,
  -597,   -15,  -597,   -70,   -11,  -585,  -597,   -73,   -76,   -11,
   -88,   -89,  -597,  -597,   -96,  -295,  -298,  -585,  -597,  -330,
  -331,  -334,  -411,  -597,   -78,  -597,   -84,  -292,  -471,  -597,
  -214,  -215,  -230,  -597,   -11,  -597,  -585,  -241,  -589,  -589,
  -597,  -597,  -589,  -597,  -304,  -305,  -521,   -49,  -597,  -597,
  -597,  -597,  -583,  -597,  -584,  -488,  -489,  -597,  -597,  -281,
  -597,  -344,  -345,  -106,  -107,  -597,  -109,  -597,  -281,  -597,
  -597,  -488,  -489,  -323,  -111,  -112,  -153,  -154,  -155,  -171,
  -176,  -183,  -186,  -325,  -597,  -561,  -597,  -434,  -597,  -597,
  -597,  -597,  -597,  -597,  -597,  -597,  1024,    -5,  -595,   -23,
   -24,   -25,   -26,   -27,  -597,  -597,   -19,   -20,   -21,  -121,
  -597,   -30,   -39,  -268,  -597,  -597,  -267,   -31,  -196,  -585,
  -249,  -262,  -262,  -574,  -575,  -258,  -408,  -576,  -577,  -575,
  -574,  -258,  -407,  -409,  -576,  -577,   -37,  -204,   -38,  -597,
   -41,   -42,  -194,  -263,   -44,   -45,   -46,  -585,  -301,  -597,
  -597,  -597,  -248,  -292,  -597,  -597,  -597,  -205,  -206,  -207,
  -208,  -209,  -210,  -211,  -212,  -216,  -217,  -218,  -219,  -220,
  -221,  -222,  -223,  -224,  -225,  -226,  -227,  -228,  -231,  -232,
  -233,  -234,  -597,  -380,  -258,  -574,  -575,   -54,   -58,  -585,
  -259,  -380,  -380,  -585,  -297,  -254,  -597,  -255,  -597,  -260,
  -597,  -264,  -597,  -568,  -570,   -10,  -584,   -14,    -3,  -585,
   -69,  -290,   -85,   -74,  -597,  -585,  -248,  -597,  -597,   -95,
  -597,  -471,  -597,   -81,   -86,  -597,  -597,  -597,  -597,  -235,
  -597,  -421,  -597,  -286,  -597,  -242,  -591,  -590,  -244,  -591,
  -293,  -294,  -564,  -392,  -521,  -395,  -560,  -560,  -504,  -506,
  -506,  -506,  -520,  -522,  -523,  -524,  -525,  -526,  -527,  -528,
  -529,  -597,  -531,  -533,  -535,  -540,  -542,  -543,  -545,  -550,
  -552,  -553,  -555,  -556,  -557,  -597,   -11,  -335,  -336,   -11,
  -597,  -597,  -597,  -597,  -597,  -248,  -597,  -597,  -292,  -316,
  -106,  -107,  -108,  -597,  -597,  -248,  -319,  -494,  -495,  -597,
  -597,   -11,  -499,  -327,  -585,  -435,  -455,  -460,  -597,  -462,
  -438,  -457,  -597,  -459,  -440,  -597,  -443,  -597,  -445,  -448,
  -597,  -449,  -597,  -469,    -8,   -18,  -597,   -28,  -271,  -597,
  -597,  -412,  -597,  -250,  -252,  -597,  -597,   -59,  -247,  -405,
  -597,  -597,   -61,  -406,  -597,  -597,  -300,  -587,  -574,  -575,
  -574,  -575,  -585,  -194,  -585,  -381,  -585,  -383,   -11,   -53,
  -401,  -380,  -245,   -11,   -11,  -296,  -262,  -261,  -265,  -597,
  -566,  -567,  -597,   -13,  -597,   -71,  -597,   -77,   -83,  -585,
  -574,  -575,  -246,   -92,   -94,  -597,   -79,  -597,  -203,  -213,
  -585,  -596,  -596,  -284,  -585,  -289,  -589,  -597,  -585,  -597,
  -502,  -503,  -597,  -597,  -513,  -597,  -516,  -597,  -518,  -597,
  -346,  -597,  -348,  -350,  -357,  -585,  -534,  -544,  -554,  -558,
  -596,  -337,  -596,  -309,  -338,  -339,  -312,  -597,  -315,  -597,
  -585,  -574,  -575,  -578,  -291,  -597,  -106,  -107,  -110,  -585,
   -11,  -597,  -497,  -321,  -597,   -11,  -521,  -521,  -597,  -562,
  -461,  -464,  -465,  -466,  -467,   -11,  -439,  -442,  -444,  -447,
  -451,  -453,  -122,  -269,  -597,  -197,  -597,  -588,  -262,   -33,
  -199,   -34,  -200,   -60,   -35,  -202,   -36,  -201,   -62,  -195,
  -597,  -597,  -597,  -597,  -412,  -597,  -560,  -560,  -362,  -364,
  -364,  -364,  -379,  -597,  -585,  -385,  -529,  -537,  -538,  -548,
  -597,  -403,  -402,   -11,  -597,  -597,  -256,  -266,  -569,   -16,
   -75,   -90,   -87,  -299,  -596,  -342,   -11,  -422,  -596,  -423,
  -424,  -597,  -243,  -393,   -11,   -11,  -597,  -560,  -541,  -559,
  -505,  -506,  -506,  -532,  -506,  -506,  -551,  -506,  -529,  -546,
  -585,  -597,  -355,  -597,  -530,  -597,  -340,  -597,  -597,   -11,
   -11,  -314,  -597,   -11,  -412,  -597,  -412,  -597,  -597,   -11,
  -324,  -597,  -585,  -597,  -328,  -597,  -270,   -32,  -198,  -251,
  -597,  -237,  -597,  -360,  -361,  -370,  -372,  -597,  -375,  -597,
  -377,  -382,  -597,  -597,  -597,  -536,  -597,  -399,  -597,  -414,
  -416,    -9,   -11,  -428,  -343,  -597,  -597,  -426,  -287,  -597,
  -597,  -394,  -501,  -597,  -509,  -597,  -511,  -597,  -514,  -597,
  -517,  -519,  -347,  -349,  -353,  -597,  -358,  -306,  -597,  -307,
  -597,  -597,  -265,  -596,  -317,  -320,  -496,  -597,  -326,  -498,
  -500,  -499,  -463,  -597,  -560,  -539,  -363,  -364,  -364,  -364,
  -364,  -549,  -364,  -384,  -585,  -387,  -389,  -390,  -547,  -597,
  -292,   -55,  -427,   -11,   -97,   -98,  -597,  -597,  -105,  -425,
  -396,  -397,  -506,  -506,  -506,  -506,  -351,  -597,  -356,  -597,
   -11,  -310,  -313,  -417,  -418,  -419,   -11,  -322,   -11,  -238,
  -359,  -597,  -367,  -597,  -369,  -597,  -373,  -597,  -376,  -378,
  -386,  -597,  -291,  -578,  -421,  -248,  -597,  -597,  -104,  -597,
  -507,  -510,  -512,  -515,  -597,  -354,  -596,  -597,  -597,  -364,
  -364,  -364,  -364,  -388,  -420,  -585,  -574,  -575,  -578,  -103,
  -506,  -352,  -341,  -318,  -329,  -597,  -365,  -368,  -371,  -374,
  -412,  -508,  -364,  -366 ]

clist = [
'216,327,621,26,373,127,127,409,26,522,275,275,275,258,114,334,2,573',
'337,337,311,311,337,26,132,132,323,122,205,406,297,487,26,26,26,428',
'26,478,415,421,130,130,431,681,6,513,835,266,270,6,259,660,566,569,311',
'311,311,111,314,535,735,479,262,269,271,542,26,26,127,318,26,337,337',
'337,337,582,823,13,114,338,339,826,13,342,690,691,700,474,293,657,110',
'657,660,781,903,277,277,277,525,528,780,705,532,713,716,804,378,115',
'295,906,13,783,382,937,26,935,276,276,276,26,26,26,26,26,26,329,332',
'605,607,273,286,287,389,390,391,392,838,394,379,648,822,730,824,931',
'849,385,328,653,654,694,696,698,591,816,343,6,359,363,592,738,921,326',
'684,325,393,6,487,324,782,434,435,436,437,374,586,350,335,601,603,606',
'606,958,784,601,331,375,650,660,13,330,275,934,923,472,219,533,813,13',
'13,336,687,616,340,473,481,482,963,808,425,26,26,26,26,387,885,26,26',
'26,26,26,26,937,903,1003,377,651,657,657,725,380,381,416,26,995,667',
'774,700,840,395,832,642,966,676,383,275,275,717,931,823,872,384,830',
'740,275,745,731,402,688,352,821,204,663,801,542,881,818,26,26,415,421',
'1011,925,341,839,1,26,734,,,826,523,,823,13,311,,,,510,,,,,26,405,337',
'337,26,,114,405,311,26,728,669,,13,524,,492,,514,928,844,929,590,,793',
',927,,503,846,,863,864,,26,26,266,277,594,1012,270,497,672,,964,277',
',952,511,496,26,26,672,,,,293,,276,,114,293,,570,571,,276,823,,,26,480',
'892,700,13,700,499,587,13,483,720,505,495,13,,914,26,,401,407,729,,',
'426,430,,968,622,,127,,,,800,,,,593,13,763,748,672,748,,768,,,796,132',
'672,,615,847,,,999,550,851,,660,275,,16,,130,,572,16,894,896,843,898',
'900,628,901,425,956,700,,633,,,26,,,,,,627,,,,,812,632,16,852,853,416',
'657,431,,542,542,,,,,,970,,,680,,,,,,,,,,,,275,,,311,14,700,351,700',
'628,14,,311,26,514,26,,,809,425,1004,,514,26,649,220,796,,664,425,,',
',,220,220,220,26,14,302,302,,416,700,,,,,917,,16,,416,,,,6,,,16,16,',
',,,,656,,220,220,275,,220,347,357,357,990,991,992,993,275,,,26,,,26',
'13,425,13,,,26,,425,714,714,,,,,965,26,,,,686,,26,,,416,1020,943,732',
'733,14,,792,416,,220,220,220,220,14,14,127,,,,550,,,1021,,960,622,810',
'775,,785,26,26,,16,132,26,26,752,,26,429,,791,,,13,,,13,,130,,622,26',
'311,998,16,,26,26,,,,719,514,311,,811,,,13,785,,854,,802,,,,,,,337,',
',,,,337,,,758,,,,628,,,633,14,220,220,220,622,,220,220,220,220,220,220',
',622,,,,,16,,,,16,14,,,,16,13,,,26,786,13,13,,26,26,127,,,26,,,845,',
',,,883,848,26,16,887,,,,220,220,,,,26,,,,220,,785,,,,405,,,,311,,,550',
'787,550,,,14,,1005,,14,,,,302,14,,337,,,,26,,,759,761,,,,764,766,302',
'13,430,26,,,13,,672,14,220,26,26,550,550,,13,778,,,,,,,,220,220,,,,',
',,,26,,26,26,,,26,438,779,,,220,26,908,296,,714,,,916,311,,,,920,,819',
'220,777,819,13,,311,,,,,,,,,,,13,,26,,,,,,13,13,,,,,825,,827,,,484,',
'38,,,,,38,,817,,,,980,13,13,,,13,16,,16,,500,13,,,,857,,,220,,,425,38',
'300,300,,,,,,,26,,786,,786,,,,,,,,,13,,,,26,,,275,,,26,,26,345,361,361',
'361,550,,,,,,,,425,,622,14,26,14,,16,,787,16,302,787,220,787,,787,,',
'302,,,,416,,,,220,,,,38,16,,,,13,,,,38,38,,400,,,866,868,870,,,,,13',
',819,,,778,13,778,13,778,,,,296,,,,786,,,14,,429,14,,,,,,220,636,,930',
',932,,16,,,220,,16,16,,,14,,924,,,777,,777,,777,,,,953,,954,,955,,,787',
',787,,787,,787,652,38,,,655,,296,220,220,,,296,220,220,,,220,,,,665',
',,,38,,668,,,,14,,,,,14,14,787,,778,,778,,778,,778,16,,302,,,16,,,,',
',,,302,,16,,,1000,,1001,,1002,972,974,976,978,,979,,,,,,,,1010,778,777',
'38,777,,777,38,777,,,300,38,,,,,,,,,,,,,220,1022,16,300,,14,220,,739',
'39,14,,38,,39,16,,,,,14,777,,16,16,,,,,,,220,,,1016,1017,1018,1019,',
',,,39,301,301,,,,16,16,,,16,,,,,1023,16,,,,875,,,,,,14,,,,,,,,,346,362',
'362,362,14,,,,,,,,14,14,16,,,803,949,,,,,,,,,,,,,,,,15,220,,14,14,15',
',14,834,39,,,,14,,,,333,39,39,,,,,,,,,,,,,,15,304,304,,,938,,,16,,,',
',14,,,,946,,,,,,,,16,,710,,,712,16,,16,,349,358,358,,,38,,38,,,,,,300',
',,,,,,,300,,,,,,,,,,,,,,,39,,,14,,,,15,,,,,,,,,15,15,,,14,,,39,,,14',
',14,902,,,,,,,,,790,38,,,38,794,795,220,,,,,,919,,,,,,,,,403,,,,38,',
'433,,,,,,,,,,,,,,,,,,39,,,,39,,,,301,39,,,,,,,,,15,,,,,,,301,,,,,,,',
',39,,,38,,,,15,38,38,,,,,489,,491,855,,493,494,300,,,,,,,,,,,300,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,878,,,15,,,,15,,,,304,15,884,,,,,,,38,889',
'890,,,38,,,304,,,,,,,38,,15,,,,,,,,,910,911,,,913,,,,,,,,,,,,,,,,,,',
',,,,,618,,,361,,,,,,38,,,,,,942,,,,,,,38,,,,,,,,38,38,,39,,39,,,,,,301',
',,,,,,,301,,,,,,38,38,,,38,,,,,,38,,,,,,,,,,,984,,,,,,658,,333,,661',
',,,361,,,996,,,,,38,997,,,944,39,,,39,,,,,,,,,,,,,,,,658,,,333,,,39',
',,,,,,15,,15,,,,,,304,,,,,,,706,304,,,,,,,,38,,,,,,,,,,,433,,,,,,38',
',,,,,38,,38,39,,,,,39,39,,,,,,,,,,,,301,,15,,,15,,,,,,301,753,,,,658',
'333,,,,,,,,,,15,,,,,,,744,,,,,,,,,,,,,,,,,,797,,,798,,,,,,,,,39,,,,',
'39,,,,,,807,,,,39,,,,,15,,,,,15,15,,829,,,,,,,,,,304,,,,,,,,,,,304,',
',,,,227,,362,,,,,,39,274,274,274,,,,,,,,,,39,320,321,322,,,,856,39,39',
',,,,,,,,274,274,,,,,,,15,,,,,15,,39,39,,,39,,,,15,,39,,,,,,,,,,,,,,',
',,,,,,,,,,362,,,,,,,,39,,,,945,,,358,,,,,,15,,,,,,912,,,,,,,15,,,,,',
',,15,15,333,,,,,,,,,,,,,,,,,,,,,,,15,15,39,,15,,,,,,15,,,,,,,,,39,,',
',,,39,,39,,,,274,408,274,,358,427,432,,,,,,15,,,,948,,,,,227,,,447,448',
'449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465',
'466,467,468,469,470,471,,,,,,,,274,274,,,,,,,,274,,,,,,,274,15,274,',
',274,274,,,,,,,,,,,,15,,,,,,15,,15,,,,,,,,,,,,,,,,,,519,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
'274,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,,427,643,408,,,,,,,,,,',
',,,,,,,,,,,,,,,644,,,,,,,,,,,,,,274,,274,,274,,,,,,,,,,,,,,,,274,,,',
',,,,,678,679,,,,,,,,,,274,,,274,,,,,,,,,,,,,,,,,,,,,,,,,274,,,,,,,,',
',,,,,,,,,,,274,274,,,,,,,,,,274,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274',
'755,,,274,274,760,762,,,,765,767,,,643,769,,,,,,,,,,,,,,,,,,,,,,,,274',
',,274,,,,,,,,,,,,,,,,,,,,274,,,,,,,,,,,,,,,,,274,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,274,,858,,,,,,,,,,,,,,760,762,767',
'765,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,274,,,,,,,,,,,,,,,,,274,858,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,969,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,274' ]
        racc_goto_table = arr = ::Array.new(2976, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'31,69,24,41,56,57,57,23,41,8,33,33,33,140,97,88,2,94,29,29,64,64,29',
'41,61,61,31,15,15,27,49,75,41,41,41,27,41,39,37,37,60,60,18,10,7,51',
'92,73,73,7,36,178,91,91,64,64,64,6,50,139,98,23,38,38,38,163,41,41,57',
'63,41,29,29,29,29,54,169,21,97,17,17,174,21,17,123,123,117,37,45,76',
'4,76,178,129,116,72,72,72,71,71,128,118,71,93,93,11,151,5,46,119,21',
'131,157,134,41,133,70,70,70,41,41,41,41,41,41,72,72,155,155,44,44,44',
'17,17,17,17,11,2,152,40,129,110,129,175,111,152,70,40,40,166,166,166',
'112,131,4,7,55,55,113,114,115,103,102,101,7,7,75,100,120,29,29,29,29',
'99,96,95,90,156,156,156,156,119,126,156,87,86,74,178,21,68,33,132,67',
'66,20,135,136,21,21,137,138,62,104,141,143,144,145,146,57,41,41,41,41',
'5,147,41,41,41,41,41,41,134,116,133,150,42,76,76,108,153,154,73,41,119',
'51,24,117,107,30,117,23,109,51,158,33,33,94,175,169,131,159,118,160',
'33,161,162,28,139,19,167,16,14,24,163,12,171,41,41,37,37,119,172,106',
'105,1,41,8,,,174,29,,169,21,64,,,,31,,,,,41,70,29,29,41,,97,70,64,41',
'54,23,,21,31,,151,,49,129,24,129,29,,40,,128,,50,24,,123,123,,41,41',
'73,72,29,92,73,7,37,,11,72,,129,63,6,41,41,37,,,,45,,70,,97,45,,17,17',
',70,169,,,41,44,123,117,21,117,46,97,21,44,23,46,4,21,,93,41,,20,20',
'23,,,20,20,,98,31,,57,,,,51,,,,36,21,39,156,37,156,,39,,,75,61,37,,15',
'8,,,129,168,8,,178,33,,26,,60,,4,26,166,166,91,166,166,73,166,57,117',
'117,,73,,,41,,,,,,38,,,,,71,38,26,139,139,73,76,18,,163,163,,,,,,123',
',,29,,,,,,,,,,,,33,,,64,22,117,26,117,73,22,,64,41,49,41,,,27,57,10',
',49,41,38,22,75,,2,57,,,,,22,22,22,41,22,22,22,,73,117,,,,,8,,26,,73',
',,,7,,,26,26,,,,,,72,,22,22,33,,22,22,22,22,166,166,166,166,33,,,41',
',,41,21,57,21,,,41,,57,97,97,,,,,94,41,,,,72,,41,,,73,24,91,97,97,22',
',88,73,,22,22,22,22,22,22,57,,,,168,,,166,,91,31,69,31,,31,41,41,,26',
'61,41,41,15,,41,26,,140,,,21,,,21,,60,,31,41,64,8,26,,41,41,,,,70,49',
'64,,31,,,21,31,,56,,49,,,,,,,29,,,,,,29,,,72,,,,73,,,73,22,22,22,22',
'31,,22,22,22,22,22,22,,31,,,,,26,,,,26,22,,,,26,21,,,41,168,21,21,,41',
'41,57,,,41,,,17,,,,,69,17,41,26,69,,,,22,22,,,,41,,,,22,,31,,,,70,,',
',64,,,168,170,168,,,22,,23,,22,,,,22,22,,29,,,,41,,,20,20,,,,20,20,22',
'21,20,41,,,21,,37,22,22,41,41,168,168,,21,124,,,,,,,,22,22,,,,,,,,41',
',41,41,,,41,47,127,,,22,41,17,9,,97,,,97,64,,,,97,,124,22,122,124,21',
',64,,,,,,,,,,,21,,41,,,,,,21,21,,,,,127,,127,,,47,,52,,,,,52,,122,,',
',31,21,21,,,21,26,,26,,47,21,,,,20,,,22,,,57,52,52,52,,,,,,,41,,168',
',168,,,,,,,,,21,,,,41,,,33,,,41,,41,52,52,52,52,168,,,,,,,,57,,31,22',
'41,22,,26,,170,26,22,170,22,170,,170,,,22,,,,73,,,,22,,,,52,26,,,,21',
',,,52,52,,9,,,125,125,125,,,,,21,,124,,,124,21,124,21,124,,,,9,,,,168',
',,22,,26,22,,,,,,22,47,,127,,127,,26,,,22,,26,26,,,22,,122,,,122,,122',
',122,,,,127,,127,,127,,,170,,170,,170,,170,47,52,,,47,,9,22,22,,,9,22',
'22,,,22,,,,47,,,,52,,47,,,,22,,,,,22,22,170,,124,,124,,124,,124,26,',
'22,,,26,,,,,,,,22,,26,,,127,,127,,127,125,125,125,125,,125,,,,,,,,127',
'124,122,52,122,,122,52,122,,,52,52,,,,,,,,,,,,,22,127,26,52,,22,22,',
'47,53,22,,52,,53,26,,,,,22,122,,26,26,,,,,,,22,,,125,125,125,125,,,',
',53,53,53,,,,26,26,,,26,,,,,125,26,,,,22,,,,,,22,,,,,,,,,53,53,53,53',
'22,,,,,,,,22,22,26,,,47,26,,,,,,,,,,,,,,,,25,22,,22,22,25,,22,47,53',
',,,22,,,,65,53,53,,,,,,,,,,,,,,25,25,25,,,22,,,26,,,,,22,,,,22,,,,,',
',,26,,9,,,9,26,,26,,25,25,25,,,52,,52,,,,,,52,,,,,,,,52,,,,,,,,,,,,',
',,53,,,22,,,,25,,,,,,,,,25,25,,,22,,,53,,,22,,22,47,,,,,,,,,9,52,,,52',
'9,9,22,,,,,,47,,,,,,,,,65,,,,52,,65,,,,,,,,,,,,,,,,,,53,,,,53,,,,53',
'53,,,,,,,,,25,,,,,,,53,,,,,,,,,53,,,52,,,,25,52,52,,,,,65,,65,9,,65',
'65,52,,,,,,,,,,,52,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,9,,,25,,,,25,,,,25',
'25,9,,,,,,,52,9,9,,,52,,,25,,,,,,,52,,25,,,,,,,,,9,9,,,9,,,,,,,,,,,',
',,,,,,,,,,,,65,,,52,,,,,,52,,,,,,9,,,,,,,52,,,,,,,,52,52,,53,,53,,,',
',,53,,,,,,,,53,,,,,,52,52,,,52,,,,,,52,,,,,,,,,,,9,,,,,,65,,65,,65,',
',,52,,,9,,,,,52,9,,,52,53,,,53,,,,,,,,,,,,,,,,65,,,65,,,53,,,,,,,25',
',25,,,,,,25,,,,,,,65,25,,,,,,,,52,,,,,,,,,,,65,,,,,,52,,,,,,52,,52,53',
',,,,53,53,,,,,,,,,,,,53,,25,,,25,,,,,,53,65,,,,65,65,,,,,,,,,,25,,,',
',,,25,,,,,,,,,,,,,,,,,,65,,,65,,,,,,,,,53,,,,,53,,,,,,65,,,,53,,,,,25',
',,,,25,25,,65,,,,,,,,,,25,,,,,,,,,,,25,,,,,,32,,53,,,,,,53,32,32,32',
',,,,,,,,,53,32,32,32,,,,65,53,53,,,,,,,,,32,32,,,,,,,25,,,,,25,,53,53',
',,53,,,,25,,53,,,,,,,,,,,,,,,,,,,,,,,,,53,,,,,,,,53,,,,53,,,25,,,,,',
'25,,,,,,65,,,,,,,25,,,,,,,,25,25,65,,,,,,,,,,,,,,,,,,,,,,,25,25,53,',
'25,,,,,,25,,,,,,,,,53,,,,,,53,,53,,,,32,32,32,,25,32,32,,,,,,25,,,,25',
',,,,32,,,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32',
'32,32,32,32,32,,,,,,,,32,32,,,,,,,,32,,,,,,,32,25,32,,,32,32,,,,,,,',
',,,,25,,,,,,25,,25,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,32,,32,32,32,,,,,,,,,,,,,,,,,,,,,,,,,,32,,,,',
',,,,,,,,,32,,32,,32,,,,,,,,,,,,,,,,32,,,,,,,,,32,32,,,,,,,,,,32,,,32',
',,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,32,32,,,,,,,,,,32,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,32,,,32,32,32,32,,,,32,32,,,32,32,,',
',,,,,,,,,,,,,,,,,,,,,32,,,32,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,32',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,32,,,,,,,',
',,,,,,32,32,32,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,32,32,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,32' ]
        racc_goto_check = arr = ::Array.new(2976, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   274,    16,   nil,    87,   102,    54,    44,  -315,   821,
  -478,  -576,  -540,   nil,  -235,    19,   251,    16,  -171,   190,
   174,    77,   491,  -202,  -407,  1327,   425,  -178,    49,   -45,
   116,   -19,  1990,   -19,   nil,   nil,    26,  -172,    36,  -225,
  -334,     3,  -252,   nil,   100,    55,    75,   630,   nil,    -4,
    23,  -270,   904,  1225,  -280,    87,   -67,    -3,   nil,   nil,
    32,    16,  -198,    28,   -14,  1284,   -63,  -669,   130,   -58,
    87,  -230,    66,    21,  -288,  -246,  -397,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   114,   124,   -46,   nil,
   114,  -286,  -664,  -467,  -326,   107,  -185,    11,  -532,   102,
   110,   105,  -361,   103,   137,  -440,   206,  -479,  -351,  -673,
  -445,  -589,  -211,  -215,  -434,  -694,  -737,  -465,  -450,  -724,
  -478,   nil,   222,  -452,   177,   251,  -464,   202,  -546,  -553,
   nil,  -535,  -682,  -758,  -760,  -141,  -491,   137,  -333,  -277,
    -9,   -54,   nil,   -63,   -63,  -707,  -475,  -594,   nil,   nil,
   147,    27,    56,   146,   146,  -254,  -202,    27,   157,   163,
  -346,  -345,  -333,  -271,   nil,   nil,  -390,  -434,    83,  -617,
   131,  -424,  -591,   nil,  -614,  -724,   nil,   nil,  -437 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   344,   291,   nil,   521,
   nil,   836,   nil,   288,   289,   nil,   nil,   nil,    11,    12,
    18,   226,   319,   nil,   nil,   224,   225,   nil,   nil,    17,
   nil,   439,    21,    22,    23,    24,   nil,   675,   nil,   nil,
   nil,   308,   nil,    25,   410,    32,   nil,   nil,    34,    37,
    36,   nil,   221,   222,   356,   nil,   129,   418,   128,   131,
    75,    76,   nil,    90,    46,   280,   nil,   nil,   nil,   805,
   411,   nil,   412,   423,   629,   485,   278,   264,    47,    48,
    49,    50,    51,    52,    53,    54,    55,   nil,   265,    61,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   567,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   702,   549,   nil,   703,
   926,   776,   537,   nil,   538,   nil,   nil,   539,   nil,   541,
   645,   nil,   nil,   nil,   547,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   422,   nil,   nil,   nil,   nil,   nil,    74,    77,
    78,   nil,   nil,   nil,   nil,   nil,   596,   nil,   nil,   nil,
   nil,   nil,   nil,   820,   737,   536,   nil,   540,   828,   552,
   554,   555,   788,   558,   559,   789,   562,   565,   283 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 145, :_reduce_none,
  2, 146, :_reduce_2,
  0, 147, :_reduce_3,
  1, 147, :_reduce_4,
  3, 147, :_reduce_5,
  2, 147, :_reduce_6,
  1, 149, :_reduce_none,
  4, 149, :_reduce_8,
  4, 152, :_reduce_9,
  2, 153, :_reduce_10,
  0, 157, :_reduce_11,
  1, 157, :_reduce_12,
  3, 157, :_reduce_13,
  2, 157, :_reduce_14,
  1, 158, :_reduce_none,
  4, 158, :_reduce_16,
  0, 174, :_reduce_17,
  4, 151, :_reduce_18,
  3, 151, :_reduce_19,
  3, 151, :_reduce_20,
  3, 151, :_reduce_21,
  2, 151, :_reduce_22,
  3, 151, :_reduce_23,
  3, 151, :_reduce_24,
  3, 151, :_reduce_25,
  3, 151, :_reduce_26,
  3, 151, :_reduce_27,
  4, 151, :_reduce_28,
  1, 151, :_reduce_none,
  3, 151, :_reduce_30,
  3, 151, :_reduce_31,
  6, 151, :_reduce_32,
  5, 151, :_reduce_33,
  5, 151, :_reduce_34,
  5, 151, :_reduce_35,
  5, 151, :_reduce_36,
  3, 151, :_reduce_37,
  3, 151, :_reduce_38,
  3, 151, :_reduce_39,
  1, 151, :_reduce_none,
  3, 162, :_reduce_41,
  3, 162, :_reduce_42,
  1, 173, :_reduce_none,
  3, 173, :_reduce_44,
  3, 173, :_reduce_45,
  3, 173, :_reduce_46,
  2, 173, :_reduce_47,
  1, 173, :_reduce_none,
  1, 161, :_reduce_none,
  1, 164, :_reduce_none,
  1, 164, :_reduce_none,
  1, 178, :_reduce_none,
  4, 178, :_reduce_53,
  0, 186, :_reduce_54,
  5, 183, :_reduce_55,
  1, 185, :_reduce_none,
  2, 177, :_reduce_57,
  3, 177, :_reduce_58,
  4, 177, :_reduce_59,
  5, 177, :_reduce_60,
  4, 177, :_reduce_61,
  5, 177, :_reduce_62,
  2, 177, :_reduce_63,
  2, 177, :_reduce_64,
  2, 177, :_reduce_65,
  2, 177, :_reduce_66,
  2, 177, :_reduce_67,
  1, 163, :_reduce_68,
  3, 163, :_reduce_69,
  1, 190, :_reduce_70,
  3, 190, :_reduce_71,
  1, 189, :_reduce_none,
  2, 189, :_reduce_73,
  3, 189, :_reduce_74,
  5, 189, :_reduce_75,
  2, 189, :_reduce_76,
  4, 189, :_reduce_77,
  2, 189, :_reduce_78,
  4, 189, :_reduce_79,
  1, 189, :_reduce_80,
  3, 189, :_reduce_81,
  1, 193, :_reduce_none,
  3, 193, :_reduce_83,
  2, 192, :_reduce_84,
  3, 192, :_reduce_85,
  1, 195, :_reduce_86,
  3, 195, :_reduce_87,
  1, 194, :_reduce_88,
  1, 194, :_reduce_89,
  4, 194, :_reduce_90,
  3, 194, :_reduce_91,
  3, 194, :_reduce_92,
  3, 194, :_reduce_93,
  3, 194, :_reduce_94,
  2, 194, :_reduce_95,
  1, 194, :_reduce_96,
  1, 170, :_reduce_97,
  1, 170, :_reduce_98,
  4, 170, :_reduce_99,
  3, 170, :_reduce_100,
  3, 170, :_reduce_101,
  3, 170, :_reduce_102,
  3, 170, :_reduce_103,
  2, 170, :_reduce_104,
  1, 170, :_reduce_105,
  1, 198, :_reduce_106,
  1, 198, :_reduce_none,
  2, 199, :_reduce_108,
  1, 199, :_reduce_109,
  3, 199, :_reduce_110,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 200, :_reduce_none,
  1, 203, :_reduce_116,
  1, 203, :_reduce_none,
  1, 159, :_reduce_none,
  1, 159, :_reduce_none,
  1, 160, :_reduce_120,
  0, 206, :_reduce_121,
  4, 160, :_reduce_122,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 201, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  3, 176, :_reduce_194,
  5, 176, :_reduce_195,
  3, 176, :_reduce_196,
  5, 176, :_reduce_197,
  6, 176, :_reduce_198,
  5, 176, :_reduce_199,
  5, 176, :_reduce_200,
  5, 176, :_reduce_201,
  5, 176, :_reduce_202,
  4, 176, :_reduce_203,
  3, 176, :_reduce_204,
  3, 176, :_reduce_205,
  3, 176, :_reduce_206,
  3, 176, :_reduce_207,
  3, 176, :_reduce_208,
  3, 176, :_reduce_209,
  3, 176, :_reduce_210,
  3, 176, :_reduce_211,
  3, 176, :_reduce_212,
  4, 176, :_reduce_213,
  2, 176, :_reduce_214,
  2, 176, :_reduce_215,
  3, 176, :_reduce_216,
  3, 176, :_reduce_217,
  3, 176, :_reduce_218,
  3, 176, :_reduce_219,
  3, 176, :_reduce_220,
  3, 176, :_reduce_221,
  3, 176, :_reduce_222,
  3, 176, :_reduce_223,
  3, 176, :_reduce_224,
  3, 176, :_reduce_225,
  3, 176, :_reduce_226,
  3, 176, :_reduce_227,
  3, 176, :_reduce_228,
  2, 176, :_reduce_229,
  2, 176, :_reduce_230,
  3, 176, :_reduce_231,
  3, 176, :_reduce_232,
  3, 176, :_reduce_233,
  3, 176, :_reduce_234,
  3, 176, :_reduce_235,
  0, 210, :_reduce_236,
  0, 211, :_reduce_237,
  8, 176, :_reduce_238,
  1, 176, :_reduce_none,
  1, 209, :_reduce_none,
  1, 212, :_reduce_none,
  2, 212, :_reduce_none,
  4, 212, :_reduce_243,
  2, 212, :_reduce_244,
  3, 217, :_reduce_245,
  0, 218, :_reduce_246,
  1, 218, :_reduce_none,
  0, 167, :_reduce_248,
  1, 167, :_reduce_none,
  2, 167, :_reduce_none,
  4, 167, :_reduce_251,
  2, 167, :_reduce_252,
  1, 188, :_reduce_253,
  2, 188, :_reduce_254,
  2, 188, :_reduce_255,
  4, 188, :_reduce_256,
  1, 188, :_reduce_257,
  0, 221, :_reduce_258,
  2, 182, :_reduce_259,
  2, 220, :_reduce_260,
  2, 219, :_reduce_261,
  0, 219, :_reduce_262,
  1, 214, :_reduce_263,
  2, 214, :_reduce_264,
  3, 214, :_reduce_265,
  4, 214, :_reduce_266,
  1, 172, :_reduce_267,
  1, 172, :_reduce_none,
  3, 171, :_reduce_269,
  4, 171, :_reduce_270,
  2, 171, :_reduce_271,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_none,
  1, 208, :_reduce_282,
  0, 244, :_reduce_283,
  4, 208, :_reduce_284,
  0, 245, :_reduce_285,
  0, 246, :_reduce_286,
  6, 208, :_reduce_287,
  0, 247, :_reduce_288,
  4, 208, :_reduce_289,
  3, 208, :_reduce_290,
  3, 208, :_reduce_291,
  2, 208, :_reduce_292,
  3, 208, :_reduce_293,
  3, 208, :_reduce_294,
  1, 208, :_reduce_295,
  4, 208, :_reduce_296,
  3, 208, :_reduce_297,
  1, 208, :_reduce_298,
  5, 208, :_reduce_299,
  4, 208, :_reduce_300,
  3, 208, :_reduce_301,
  2, 208, :_reduce_302,
  1, 208, :_reduce_none,
  2, 208, :_reduce_304,
  2, 208, :_reduce_305,
  6, 208, :_reduce_306,
  6, 208, :_reduce_307,
  0, 248, :_reduce_308,
  0, 249, :_reduce_309,
  7, 208, :_reduce_310,
  0, 250, :_reduce_311,
  0, 251, :_reduce_312,
  7, 208, :_reduce_313,
  5, 208, :_reduce_314,
  4, 208, :_reduce_315,
  0, 252, :_reduce_316,
  0, 253, :_reduce_317,
  9, 208, :_reduce_318,
  0, 254, :_reduce_319,
  6, 208, :_reduce_320,
  0, 255, :_reduce_321,
  7, 208, :_reduce_322,
  0, 256, :_reduce_323,
  5, 208, :_reduce_324,
  0, 257, :_reduce_325,
  6, 208, :_reduce_326,
  0, 258, :_reduce_327,
  0, 259, :_reduce_328,
  9, 208, :_reduce_329,
  1, 208, :_reduce_330,
  1, 208, :_reduce_331,
  1, 208, :_reduce_332,
  1, 208, :_reduce_333,
  1, 166, :_reduce_none,
  1, 235, :_reduce_none,
  1, 235, :_reduce_none,
  2, 235, :_reduce_337,
  1, 237, :_reduce_none,
  1, 237, :_reduce_none,
  1, 236, :_reduce_none,
  5, 236, :_reduce_341,
  1, 155, :_reduce_none,
  2, 155, :_reduce_343,
  1, 239, :_reduce_none,
  1, 239, :_reduce_none,
  1, 260, :_reduce_346,
  3, 260, :_reduce_347,
  1, 263, :_reduce_348,
  3, 263, :_reduce_349,
  1, 262, :_reduce_none,
  4, 262, :_reduce_351,
  6, 262, :_reduce_352,
  3, 262, :_reduce_353,
  5, 262, :_reduce_354,
  2, 262, :_reduce_355,
  4, 262, :_reduce_356,
  1, 262, :_reduce_357,
  3, 262, :_reduce_358,
  4, 264, :_reduce_359,
  2, 264, :_reduce_360,
  2, 264, :_reduce_361,
  1, 264, :_reduce_362,
  2, 269, :_reduce_363,
  0, 269, :_reduce_364,
  6, 270, :_reduce_365,
  8, 270, :_reduce_366,
  4, 270, :_reduce_367,
  6, 270, :_reduce_368,
  4, 270, :_reduce_369,
  2, 270, :_reduce_none,
  6, 270, :_reduce_371,
  2, 270, :_reduce_372,
  4, 270, :_reduce_373,
  6, 270, :_reduce_374,
  2, 270, :_reduce_375,
  4, 270, :_reduce_376,
  2, 270, :_reduce_377,
  4, 270, :_reduce_378,
  1, 270, :_reduce_none,
  0, 184, :_reduce_380,
  1, 184, :_reduce_381,
  3, 274, :_reduce_382,
  1, 274, :_reduce_383,
  4, 274, :_reduce_384,
  1, 275, :_reduce_385,
  4, 275, :_reduce_386,
  1, 276, :_reduce_387,
  3, 276, :_reduce_388,
  1, 277, :_reduce_389,
  1, 277, :_reduce_none,
  0, 281, :_reduce_391,
  0, 282, :_reduce_392,
  4, 234, :_reduce_393,
  4, 279, :_reduce_394,
  1, 279, :_reduce_395,
  3, 280, :_reduce_396,
  3, 280, :_reduce_397,
  0, 285, :_reduce_398,
  5, 284, :_reduce_399,
  2, 179, :_reduce_400,
  4, 179, :_reduce_401,
  5, 179, :_reduce_402,
  5, 179, :_reduce_403,
  2, 233, :_reduce_404,
  4, 233, :_reduce_405,
  4, 233, :_reduce_406,
  3, 233, :_reduce_407,
  3, 233, :_reduce_408,
  3, 233, :_reduce_409,
  2, 233, :_reduce_410,
  1, 233, :_reduce_411,
  4, 233, :_reduce_412,
  0, 287, :_reduce_413,
  5, 232, :_reduce_414,
  0, 288, :_reduce_415,
  5, 232, :_reduce_416,
  5, 238, :_reduce_417,
  1, 289, :_reduce_418,
  1, 289, :_reduce_none,
  6, 154, :_reduce_420,
  0, 154, :_reduce_421,
  1, 290, :_reduce_422,
  1, 290, :_reduce_none,
  1, 290, :_reduce_none,
  2, 291, :_reduce_425,
  1, 291, :_reduce_none,
  2, 156, :_reduce_427,
  1, 156, :_reduce_none,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  1, 223, :_reduce_432,
  1, 293, :_reduce_433,
  2, 293, :_reduce_434,
  3, 294, :_reduce_435,
  1, 294, :_reduce_436,
  1, 294, :_reduce_437,
  3, 224, :_reduce_438,
  4, 225, :_reduce_439,
  3, 226, :_reduce_440,
  0, 298, :_reduce_441,
  3, 298, :_reduce_442,
  1, 299, :_reduce_443,
  2, 299, :_reduce_444,
  3, 228, :_reduce_445,
  0, 301, :_reduce_446,
  3, 301, :_reduce_447,
  3, 227, :_reduce_448,
  3, 229, :_reduce_449,
  0, 302, :_reduce_450,
  3, 302, :_reduce_451,
  0, 303, :_reduce_452,
  3, 303, :_reduce_453,
  0, 295, :_reduce_454,
  2, 295, :_reduce_455,
  0, 296, :_reduce_456,
  2, 296, :_reduce_457,
  0, 297, :_reduce_458,
  2, 297, :_reduce_459,
  1, 300, :_reduce_460,
  2, 300, :_reduce_461,
  0, 305, :_reduce_462,
  4, 300, :_reduce_463,
  1, 304, :_reduce_464,
  1, 304, :_reduce_465,
  1, 304, :_reduce_466,
  1, 304, :_reduce_none,
  1, 204, :_reduce_468,
  3, 205, :_reduce_469,
  1, 292, :_reduce_470,
  2, 292, :_reduce_471,
  1, 207, :_reduce_472,
  1, 207, :_reduce_473,
  1, 207, :_reduce_474,
  1, 207, :_reduce_475,
  1, 196, :_reduce_476,
  1, 196, :_reduce_477,
  1, 196, :_reduce_478,
  1, 196, :_reduce_479,
  1, 196, :_reduce_480,
  1, 197, :_reduce_481,
  1, 197, :_reduce_482,
  1, 197, :_reduce_483,
  1, 197, :_reduce_484,
  1, 197, :_reduce_485,
  1, 197, :_reduce_486,
  1, 197, :_reduce_487,
  1, 230, :_reduce_488,
  1, 230, :_reduce_489,
  1, 165, :_reduce_490,
  1, 165, :_reduce_491,
  1, 169, :_reduce_492,
  1, 169, :_reduce_493,
  1, 240, :_reduce_494,
  0, 306, :_reduce_495,
  4, 240, :_reduce_496,
  2, 240, :_reduce_497,
  3, 242, :_reduce_498,
  0, 308, :_reduce_499,
  3, 242, :_reduce_500,
  4, 307, :_reduce_501,
  2, 307, :_reduce_502,
  2, 307, :_reduce_503,
  1, 307, :_reduce_504,
  2, 310, :_reduce_505,
  0, 310, :_reduce_506,
  6, 283, :_reduce_507,
  8, 283, :_reduce_508,
  4, 283, :_reduce_509,
  6, 283, :_reduce_510,
  4, 283, :_reduce_511,
  6, 283, :_reduce_512,
  2, 283, :_reduce_513,
  4, 283, :_reduce_514,
  6, 283, :_reduce_515,
  2, 283, :_reduce_516,
  4, 283, :_reduce_517,
  2, 283, :_reduce_518,
  4, 283, :_reduce_519,
  1, 283, :_reduce_520,
  0, 283, :_reduce_521,
  1, 278, :_reduce_522,
  1, 278, :_reduce_523,
  1, 278, :_reduce_524,
  1, 278, :_reduce_525,
  1, 261, :_reduce_none,
  1, 261, :_reduce_527,
  1, 312, :_reduce_528,
  1, 313, :_reduce_529,
  3, 313, :_reduce_530,
  1, 271, :_reduce_531,
  3, 271, :_reduce_532,
  1, 314, :_reduce_533,
  2, 315, :_reduce_534,
  1, 315, :_reduce_535,
  2, 316, :_reduce_536,
  1, 316, :_reduce_537,
  1, 265, :_reduce_538,
  3, 265, :_reduce_539,
  1, 309, :_reduce_540,
  3, 309, :_reduce_541,
  1, 317, :_reduce_none,
  1, 317, :_reduce_none,
  2, 266, :_reduce_544,
  1, 266, :_reduce_545,
  3, 318, :_reduce_546,
  3, 319, :_reduce_547,
  1, 272, :_reduce_548,
  3, 272, :_reduce_549,
  1, 311, :_reduce_550,
  3, 311, :_reduce_551,
  1, 320, :_reduce_none,
  1, 320, :_reduce_none,
  2, 273, :_reduce_554,
  1, 273, :_reduce_555,
  1, 321, :_reduce_none,
  1, 321, :_reduce_none,
  2, 268, :_reduce_558,
  2, 267, :_reduce_559,
  0, 267, :_reduce_560,
  1, 243, :_reduce_none,
  3, 243, :_reduce_562,
  0, 231, :_reduce_563,
  2, 231, :_reduce_none,
  1, 216, :_reduce_565,
  3, 216, :_reduce_566,
  3, 322, :_reduce_567,
  2, 322, :_reduce_568,
  4, 322, :_reduce_569,
  2, 322, :_reduce_570,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 181, :_reduce_none,
  1, 286, :_reduce_none,
  1, 286, :_reduce_none,
  1, 286, :_reduce_none,
  1, 180, :_reduce_none,
  1, 180, :_reduce_none,
  0, 148, :_reduce_none,
  1, 148, :_reduce_none,
  0, 175, :_reduce_none,
  1, 175, :_reduce_none,
  2, 191, :_reduce_587,
  2, 168, :_reduce_588,
  0, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 241, :_reduce_592,
  1, 241, :_reduce_none,
  1, 150, :_reduce_none,
  2, 150, :_reduce_none,
  0, 213, :_reduce_596 ]

racc_reduce_n = 597

racc_shift_n = 1024

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tUPLUS => 63,
  :tUMINUS => 64,
  :tUMINUS_NUM => 65,
  :tPOW => 66,
  :tCMP => 67,
  :tEQ => 68,
  :tEQQ => 69,
  :tNEQ => 70,
  :tGEQ => 71,
  :tLEQ => 72,
  :tANDOP => 73,
  :tOROP => 74,
  :tMATCH => 75,
  :tNMATCH => 76,
  :tDOT => 77,
  :tDOT2 => 78,
  :tDOT3 => 79,
  :tAREF => 80,
  :tASET => 81,
  :tLSHFT => 82,
  :tRSHFT => 83,
  :tCOLON2 => 84,
  :tCOLON3 => 85,
  :tOP_ASGN => 86,
  :tASSOC => 87,
  :tLPAREN => 88,
  :tLPAREN2 => 89,
  :tRPAREN => 90,
  :tLPAREN_ARG => 91,
  :tLBRACK => 92,
  :tLBRACK2 => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tDSTAR => 104,
  :tPLUS => 105,
  :tMINUS => 106,
  :tLT => 107,
  :tGT => 108,
  :tPIPE => 109,
  :tBANG => 110,
  :tCARET => 111,
  :tLCURLY => 112,
  :tRCURLY => 113,
  :tBACK_REF2 => 114,
  :tSYMBEG => 115,
  :tSTRING_BEG => 116,
  :tXSTRING_BEG => 117,
  :tREGEXP_BEG => 118,
  :tREGEXP_OPT => 119,
  :tWORDS_BEG => 120,
  :tQWORDS_BEG => 121,
  :tSYMBOLS_BEG => 122,
  :tQSYMBOLS_BEG => 123,
  :tSTRING_DBEG => 124,
  :tSTRING_DVAR => 125,
  :tSTRING_END => 126,
  :tSTRING_DEND => 127,
  :tSTRING => 128,
  :tSYMBOL => 129,
  :tNL => 130,
  :tEH => 131,
  :tCOLON => 132,
  :tCOMMA => 133,
  :tSPACE => 134,
  :tSEMI => 135,
  :tLAMBDA => 136,
  :tLAMBEG => 137,
  :tCHARACTER => 138,
  :tRATIONAL => 139,
  :tIMAGINARY => 140,
  :tLABEL_END => 141,
  :tEQL => 142,
  :tLOWEST => 143 }

racc_nt_base = 144

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "tLBRACK",
  "tLBRACK2",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tDSTAR",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tREGEXP_OPT",
  "tWORDS_BEG",
  "tQWORDS_BEG",
  "tSYMBOLS_BEG",
  "tQSYMBOLS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING_DEND",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tCHARACTER",
  "tRATIONAL",
  "tIMAGINARY",
  "tLABEL_END",
  "tEQL",
  "tLOWEST",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "stmt_or_begin",
  "fitem",
  "undef_list",
  "expr_value",
  "command_asgn",
  "mlhs",
  "command_call",
  "var_lhs",
  "primary_value",
  "opt_call_args",
  "rbracket",
  "backref",
  "lhs",
  "mrhs",
  "mrhs_arg",
  "expr",
  "@1",
  "opt_nl",
  "arg",
  "command",
  "block_command",
  "block_call",
  "dot_or_colon",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_param",
  "fcall",
  "@2",
  "operation",
  "call_args",
  "mlhs_basic",
  "mlhs_inner",
  "rparen",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "user_variable",
  "keyword_variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "fsym",
  "symbol",
  "dsym",
  "@3",
  "simple_numeric",
  "primary",
  "arg_value",
  "@4",
  "@5",
  "aref_args",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "@6",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "qwords",
  "symbols",
  "qsymbols",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "@18",
  "@19",
  "@20",
  "@21",
  "@22",
  "f_marg",
  "f_norm_arg",
  "f_margs",
  "f_marg_list",
  "block_args_tail",
  "f_block_kwarg",
  "f_kwrest",
  "opt_f_block_arg",
  "f_block_arg",
  "opt_block_args_tail",
  "block_param",
  "f_arg",
  "f_block_optarg",
  "f_rest_arg",
  "block_param_def",
  "opt_bv_decl",
  "bv_decls",
  "bvar",
  "f_bad_arg",
  "f_larglist",
  "lambda_body",
  "@23",
  "@24",
  "f_args",
  "do_block",
  "@25",
  "operation3",
  "@26",
  "@27",
  "cases",
  "exc_list",
  "exc_var",
  "numeric",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "regexp_contents",
  "word_list",
  "word",
  "string_content",
  "symbol_list",
  "qword_list",
  "qsym_list",
  "string_dvar",
  "@28",
  "@29",
  "args_tail",
  "@30",
  "f_kwarg",
  "opt_args_tail",
  "f_optarg",
  "f_arg_asgn",
  "f_arg_item",
  "f_label",
  "f_kw",
  "f_block_kw",
  "kwrest_mark",
  "f_opt",
  "f_block_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'ruby22.y', 52)
  def _reduce_2(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 57)
  def _reduce_3(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 61)
  def _reduce_4(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 65)
  def _reduce_5(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 69)
  def _reduce_6(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 7 omitted

module_eval(<<'.,.,', 'ruby22.y', 75)
  def _reduce_8(val, _values, result)
                          result = @builder.preexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 80)
  def _reduce_9(val, _values, result)
                          rescue_bodies     = val[1]
                      else_t,   else_   = val[2]
                      ensure_t, ensure_ = val[3]

                      if rescue_bodies.empty? && !else_.nil?
                        diagnostic :warning, :useless_else, nil, else_t
                      end

                      result = @builder.begin_body(val[0],
                                  rescue_bodies,
                                  else_t,   else_,
                                  ensure_t, ensure_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 96)
  def _reduce_10(val, _values, result)
                          result = @builder.compstmt(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 101)
  def _reduce_11(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 105)
  def _reduce_12(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 109)
  def _reduce_13(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 113)
  def _reduce_14(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

# reduce 15 omitted

module_eval(<<'.,.,', 'ruby22.y', 119)
  def _reduce_16(val, _values, result)
                          diagnostic :error, :begin_in_method, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 124)
  def _reduce_17(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 128)
  def _reduce_18(val, _values, result)
                          result = @builder.alias(val[0], val[1], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 132)
  def _reduce_19(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.gvar(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 138)
  def _reduce_20(val, _values, result)
                          result = @builder.alias(val[0],
                                  @builder.gvar(val[1]),
                                  @builder.back_ref(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 144)
  def _reduce_21(val, _values, result)
                          diagnostic :error, :nth_ref_alias, nil, val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 148)
  def _reduce_22(val, _values, result)
                          result = @builder.undef_method(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 152)
  def _reduce_23(val, _values, result)
                          result = @builder.condition_mod(val[0], nil,
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 157)
  def _reduce_24(val, _values, result)
                          result = @builder.condition_mod(nil, val[0],
                                                      val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 162)
  def _reduce_25(val, _values, result)
                          result = @builder.loop_mod(:while, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 166)
  def _reduce_26(val, _values, result)
                          result = @builder.loop_mod(:until, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 170)
  def _reduce_27(val, _values, result)
                          rescue_body = @builder.rescue_body(val[1],
                                        nil, nil, nil,
                                        nil, val[2])

                      result = @builder.begin_body(val[0], [ rescue_body ])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 178)
  def _reduce_28(val, _values, result)
                          result = @builder.postexe(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

# reduce 29 omitted

module_eval(<<'.,.,', 'ruby22.y', 183)
  def _reduce_30(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 187)
  def _reduce_31(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 191)
  def _reduce_32(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 198)
  def _reduce_33(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 205)
  def _reduce_34(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 212)
  def _reduce_35(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 219)
  def _reduce_36(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 226)
  def _reduce_37(val, _values, result)
                          @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 230)
  def _reduce_38(val, _values, result)
                          result = @builder.assign(val[0], val[1],
                                  @builder.array(nil, val[2], nil))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 235)
  def _reduce_39(val, _values, result)
                          result = @builder.multi_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 40 omitted

module_eval(<<'.,.,', 'ruby22.y', 241)
  def _reduce_41(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 245)
  def _reduce_42(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 43 omitted

module_eval(<<'.,.,', 'ruby22.y', 251)
  def _reduce_44(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 255)
  def _reduce_45(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 259)
  def _reduce_46(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 263)
  def _reduce_47(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

# reduce 48 omitted

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

module_eval(<<'.,.,', 'ruby22.y', 275)
  def _reduce_53(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 281)
  def _reduce_54(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 285)
  def _reduce_55(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

# reduce 56 omitted

module_eval(<<'.,.,', 'ruby22.y', 294)
  def _reduce_57(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 299)
  def _reduce_58(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0],
                                        nil, val[1], nil)

                      begin_t, args, body, end_t = val[2]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 308)
  def _reduce_59(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 313)
  def _reduce_60(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 322)
  def _reduce_61(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2],
                                  nil, val[3], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 327)
  def _reduce_62(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                        nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 336)
  def _reduce_63(val, _values, result)
                          result = @builder.keyword_cmd(:super, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 341)
  def _reduce_64(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 346)
  def _reduce_65(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 351)
  def _reduce_66(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 356)
  def _reduce_67(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0],
                                  nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 362)
  def _reduce_68(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 366)
  def _reduce_69(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 371)
  def _reduce_70(val, _values, result)
                          result = @builder.multi_lhs(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 375)
  def _reduce_71(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 72 omitted

module_eval(<<'.,.,', 'ruby22.y', 381)
  def _reduce_73(val, _values, result)
                          result = val[0].
                                  push(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 386)
  def _reduce_74(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 391)
  def _reduce_75(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1], val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 397)
  def _reduce_76(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 402)
  def _reduce_77(val, _values, result)
                          result = val[0].
                                  push(@builder.splat(val[1])).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 408)
  def _reduce_78(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 412)
  def _reduce_79(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 417)
  def _reduce_80(val, _values, result)
                          result = [ @builder.splat(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 421)
  def _reduce_81(val, _values, result)
                          result = [ @builder.splat(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

# reduce 82 omitted

module_eval(<<'.,.,', 'ruby22.y', 428)
  def _reduce_83(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 433)
  def _reduce_84(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 437)
  def _reduce_85(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 442)
  def _reduce_86(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 446)
  def _reduce_87(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 451)
  def _reduce_88(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 455)
  def _reduce_89(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 459)
  def _reduce_90(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 463)
  def _reduce_91(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 467)
  def _reduce_92(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 471)
  def _reduce_93(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 475)
  def _reduce_94(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 480)
  def _reduce_95(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 485)
  def _reduce_96(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 490)
  def _reduce_97(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 494)
  def _reduce_98(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 498)
  def _reduce_99(val, _values, result)
                          result = @builder.index_asgn(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 502)
  def _reduce_100(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 506)
  def _reduce_101(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 510)
  def _reduce_102(val, _values, result)
                          result = @builder.attr_asgn(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 514)
  def _reduce_103(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 519)
  def _reduce_104(val, _values, result)
                          result = @builder.assignable(
                                  @builder.const_global(val[0], val[1]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 524)
  def _reduce_105(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 529)
  def _reduce_106(val, _values, result)
                          diagnostic :error, :module_name_const, nil, val[0]
                    
    result
  end
.,.,

# reduce 107 omitted

module_eval(<<'.,.,', 'ruby22.y', 535)
  def _reduce_108(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 539)
  def _reduce_109(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 543)
  def _reduce_110(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

module_eval(<<'.,.,', 'ruby22.y', 552)
  def _reduce_116(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

module_eval(<<'.,.,', 'ruby22.y', 561)
  def _reduce_120(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 565)
  def _reduce_121(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 569)
  def _reduce_122(val, _values, result)
                          result = val[0] << val[3]
                    
    result
  end
.,.,

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

# reduce 183 omitted

# reduce 184 omitted

# reduce 185 omitted

# reduce 186 omitted

# reduce 187 omitted

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

# reduce 193 omitted

module_eval(<<'.,.,', 'ruby22.y', 590)
  def _reduce_194(val, _values, result)
                          result = @builder.assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 594)
  def _reduce_195(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result  = @builder.assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 604)
  def _reduce_196(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 608)
  def _reduce_197(val, _values, result)
                          rescue_body = @builder.rescue_body(val[3],
                                        nil, nil, nil,
                                        nil, val[4])

                      rescue_ = @builder.begin_body(val[2], [ rescue_body ])

                      result = @builder.op_assign(val[0], val[1], rescue_)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 618)
  def _reduce_198(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.index(
                                    val[0], val[1], val[2], val[3]),
                                  val[4], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 625)
  def _reduce_199(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 632)
  def _reduce_200(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 639)
  def _reduce_201(val, _values, result)
                          result = @builder.op_assign(
                                  @builder.call_method(
                                    val[0], val[1], val[2]),
                                  val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 646)
  def _reduce_202(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_fetch(val[0], val[1], val[2]))
                      result = @builder.op_assign(const, val[3], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 652)
  def _reduce_203(val, _values, result)
                          const  = @builder.const_op_assignable(
                                  @builder.const_global(val[0], val[1]))
                      result = @builder.op_assign(const, val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 658)
  def _reduce_204(val, _values, result)
                          result = @builder.op_assign(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 662)
  def _reduce_205(val, _values, result)
                          result = @builder.range_inclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 666)
  def _reduce_206(val, _values, result)
                          result = @builder.range_exclusive(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 670)
  def _reduce_207(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 674)
  def _reduce_208(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 678)
  def _reduce_209(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 682)
  def _reduce_210(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 686)
  def _reduce_211(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 690)
  def _reduce_212(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 694)
  def _reduce_213(val, _values, result)
                          result = @builder.unary_op(val[0],
                                  @builder.binary_op(
                                    val[1], val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 700)
  def _reduce_214(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 704)
  def _reduce_215(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 708)
  def _reduce_216(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 712)
  def _reduce_217(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 716)
  def _reduce_218(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 720)
  def _reduce_219(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 724)
  def _reduce_220(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 728)
  def _reduce_221(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 732)
  def _reduce_222(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 736)
  def _reduce_223(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 740)
  def _reduce_224(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 744)
  def _reduce_225(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 748)
  def _reduce_226(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 752)
  def _reduce_227(val, _values, result)
                          result = @builder.match_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 756)
  def _reduce_228(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 760)
  def _reduce_229(val, _values, result)
                          result = @builder.not_op(val[0], nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 764)
  def _reduce_230(val, _values, result)
                          result = @builder.unary_op(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 768)
  def _reduce_231(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 772)
  def _reduce_232(val, _values, result)
                          result = @builder.binary_op(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 776)
  def _reduce_233(val, _values, result)
                          result = @builder.logical_op(:and, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 780)
  def _reduce_234(val, _values, result)
                          result = @builder.logical_op(:or, val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 784)
  def _reduce_235(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0], nil, [ val[2] ], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 794)
  def _reduce_236(val, _values, result)
                          @lexer.push_cond
                      @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 799)
  def _reduce_237(val, _values, result)
                          @lexer.pop_cond
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 803)
  def _reduce_238(val, _values, result)
                          result = @builder.ternary(val[0], val[1],
                                                val[3], val[5], val[7])
                    
    result
  end
.,.,

# reduce 239 omitted

# reduce 240 omitted

# reduce 241 omitted

# reduce 242 omitted

module_eval(<<'.,.,', 'ruby22.y', 814)
  def _reduce_243(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 818)
  def _reduce_244(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 823)
  def _reduce_245(val, _values, result)
                          result = val
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 828)
  def _reduce_246(val, _values, result)
                          result = [ nil, [], nil ]
                    
    result
  end
.,.,

# reduce 247 omitted

module_eval(<<'.,.,', 'ruby22.y', 834)
  def _reduce_248(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 249 omitted

# reduce 250 omitted

module_eval(<<'.,.,', 'ruby22.y', 840)
  def _reduce_251(val, _values, result)
                          result = val[0] << @builder.associate(nil, val[2], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 844)
  def _reduce_252(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 849)
  def _reduce_253(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 853)
  def _reduce_254(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 857)
  def _reduce_255(val, _values, result)
                          result = [ @builder.associate(nil, val[0], nil) ]
                      result.concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 862)
  def _reduce_256(val, _values, result)
                          assocs = @builder.associate(nil, val[2], nil)
                      result = val[0] << assocs
                      result.concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 868)
  def _reduce_257(val, _values, result)
                          result =  [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 872)
  def _reduce_258(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 877)
  def _reduce_259(val, _values, result)
                          @lexer.cmdarg = val[0]

                      result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 884)
  def _reduce_260(val, _values, result)
                          result = @builder.block_pass(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 889)
  def _reduce_261(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 893)
  def _reduce_262(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 898)
  def _reduce_263(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 902)
  def _reduce_264(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 906)
  def _reduce_265(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 910)
  def _reduce_266(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 915)
  def _reduce_267(val, _values, result)
                          result = @builder.array(nil, val[0], nil)
                    
    result
  end
.,.,

# reduce 268 omitted

module_eval(<<'.,.,', 'ruby22.y', 921)
  def _reduce_269(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 925)
  def _reduce_270(val, _values, result)
                          result = val[0] << @builder.splat(val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 929)
  def _reduce_271(val, _values, result)
                          result = [ @builder.splat(val[0], val[1]) ]
                    
    result
  end
.,.,

# reduce 272 omitted

# reduce 273 omitted

# reduce 274 omitted

# reduce 275 omitted

# reduce 276 omitted

# reduce 277 omitted

# reduce 278 omitted

# reduce 279 omitted

# reduce 280 omitted

# reduce 281 omitted

module_eval(<<'.,.,', 'ruby22.y', 944)
  def _reduce_282(val, _values, result)
                          result = @builder.call_method(nil, nil, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 948)
  def _reduce_283(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 953)
  def _reduce_284(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin_keyword(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 959)
  def _reduce_285(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 964)
  def _reduce_286(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 968)
  def _reduce_287(val, _values, result)
                          @lexer.cmdarg = val[1]

                      result = @builder.begin(val[0], val[2], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 974)
  def _reduce_288(val, _values, result)
                          @lexer.state = :expr_endarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 978)
  def _reduce_289(val, _values, result)
                          result = @builder.begin(val[0], nil, val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 982)
  def _reduce_290(val, _values, result)
                          result = @builder.begin(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 986)
  def _reduce_291(val, _values, result)
                          result = @builder.const_fetch(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 990)
  def _reduce_292(val, _values, result)
                          result = @builder.const_global(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 994)
  def _reduce_293(val, _values, result)
                          result = @builder.array(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 998)
  def _reduce_294(val, _values, result)
                          result = @builder.associate(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1002)
  def _reduce_295(val, _values, result)
                          result = @builder.keyword_cmd(:return, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1006)
  def _reduce_296(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1010)
  def _reduce_297(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0], val[1], [], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1014)
  def _reduce_298(val, _values, result)
                          result = @builder.keyword_cmd(:yield, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1018)
  def _reduce_299(val, _values, result)
                          result = @builder.keyword_cmd(:defined?, val[0],
                                                    val[2], [ val[3] ], val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1023)
  def _reduce_300(val, _values, result)
                          result = @builder.not_op(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1027)
  def _reduce_301(val, _values, result)
                          result = @builder.not_op(val[0], val[1], nil, val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1031)
  def _reduce_302(val, _values, result)
                          method_call = @builder.call_method(nil, nil, val[0])

                      begin_t, args, body, end_t = val[1]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

# reduce 303 omitted

module_eval(<<'.,.,', 'ruby22.y', 1040)
  def _reduce_304(val, _values, result)
                          begin_t, args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1046)
  def _reduce_305(val, _values, result)
                          lambda_call = @builder.call_lambda(val[0])

                      args, (begin_t, body, end_t) = val[1]
                      result      = @builder.block(lambda_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1054)
  def _reduce_306(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  val[3], else_t,
                                                  else_,  val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1061)
  def _reduce_307(val, _values, result)
                          else_t, else_ = val[4]
                      result = @builder.condition(val[0], val[1], val[2],
                                                  else_,  else_t,
                                                  val[3], val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1068)
  def _reduce_308(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1072)
  def _reduce_309(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1076)
  def _reduce_310(val, _values, result)
                          result = @builder.loop(:while, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1081)
  def _reduce_311(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1085)
  def _reduce_312(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1089)
  def _reduce_313(val, _values, result)
                          result = @builder.loop(:until, val[0], val[2], val[3],
                                             val[5], val[6])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1094)
  def _reduce_314(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[3]

                      result = @builder.case(val[0], val[1],
                                             when_bodies, else_t, else_body,
                                             val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1102)
  def _reduce_315(val, _values, result)
                          *when_bodies, (else_t, else_body) = *val[2]

                      result = @builder.case(val[0], nil,
                                             when_bodies, else_t, else_body,
                                             val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1110)
  def _reduce_316(val, _values, result)
                          @lexer.cond.push(true)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1114)
  def _reduce_317(val, _values, result)
                          @lexer.cond.pop
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1118)
  def _reduce_318(val, _values, result)
                          result = @builder.for(val[0], val[1],
                                            val[2], val[4],
                                            val[5], val[7], val[8])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1124)
  def _reduce_319(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1129)
  def _reduce_320(val, _values, result)
                          if in_def?
                        diagnostic :error, :class_in_def, nil, val[0]
                      end

                      lt_t, superclass = val[2]
                      result = @builder.def_class(val[0], val[1],
                                                  lt_t, superclass,
                                                  val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1143)
  def _reduce_321(val, _values, result)
                          result = @def_level
                      @def_level = 0

                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1151)
  def _reduce_322(val, _values, result)
                          result = @builder.def_sclass(val[0], val[1], val[2],
                                                   val[5], val[6])

                      @lexer.pop_cmdarg
                      @static_env.unextend

                      @def_level = val[4]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1161)
  def _reduce_323(val, _values, result)
                          @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1166)
  def _reduce_324(val, _values, result)
                          if in_def?
                        diagnostic :error, :module_in_def, nil, val[0]
                      end

                      result = @builder.def_module(val[0], val[1],
                                                   val[3], val[4])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1178)
  def _reduce_325(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1184)
  def _reduce_326(val, _values, result)
                          result = @builder.def_method(val[0], val[1],
                                  val[3], val[4], val[5])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1193)
  def _reduce_327(val, _values, result)
                          @lexer.state = :expr_fname
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1197)
  def _reduce_328(val, _values, result)
                          @def_level += 1
                      @static_env.extend_static
                      @lexer.push_cmdarg
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1203)
  def _reduce_329(val, _values, result)
                          result = @builder.def_singleton(val[0], val[1], val[2],
                                  val[4], val[6], val[7], val[8])

                      @lexer.pop_cmdarg
                      @static_env.unextend
                      @def_level -= 1
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1212)
  def _reduce_330(val, _values, result)
                          result = @builder.keyword_cmd(:break, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1216)
  def _reduce_331(val, _values, result)
                          result = @builder.keyword_cmd(:next, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1220)
  def _reduce_332(val, _values, result)
                          result = @builder.keyword_cmd(:redo, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1224)
  def _reduce_333(val, _values, result)
                          result = @builder.keyword_cmd(:retry, val[0])
                    
    result
  end
.,.,

# reduce 334 omitted

# reduce 335 omitted

# reduce 336 omitted

module_eval(<<'.,.,', 'ruby22.y', 1233)
  def _reduce_337(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 338 omitted

# reduce 339 omitted

# reduce 340 omitted

module_eval(<<'.,.,', 'ruby22.y', 1242)
  def _reduce_341(val, _values, result)
                          else_t, else_ = val[4]
                      result = [ val[0],
                                 @builder.condition(val[0], val[1], val[2],
                                                    val[3], else_t,
                                                    else_,  nil),
                               ]
                    
    result
  end
.,.,

# reduce 342 omitted

module_eval(<<'.,.,', 'ruby22.y', 1253)
  def _reduce_343(val, _values, result)
                          result = val
                    
    result
  end
.,.,

# reduce 344 omitted

# reduce 345 omitted

module_eval(<<'.,.,', 'ruby22.y', 1261)
  def _reduce_346(val, _values, result)
                          result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1265)
  def _reduce_347(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1270)
  def _reduce_348(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1274)
  def _reduce_349(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 350 omitted

module_eval(<<'.,.,', 'ruby22.y', 1280)
  def _reduce_351(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2], val[3]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1285)
  def _reduce_352(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2], val[3])).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1291)
  def _reduce_353(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2]))
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1296)
  def _reduce_354(val, _values, result)
                          result = val[0].
                                  push(@builder.restarg(val[2])).
                                  concat(val[4])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1302)
  def _reduce_355(val, _values, result)
                          result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1306)
  def _reduce_356(val, _values, result)
                          result = [ @builder.restarg(val[0], val[1]),
                                 *val[3] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1311)
  def _reduce_357(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1315)
  def _reduce_358(val, _values, result)
                          result = [ @builder.restarg(val[0]),
                                 *val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1321)
  def _reduce_359(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1325)
  def _reduce_360(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1329)
  def _reduce_361(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1333)
  def _reduce_362(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1339)
  def _reduce_363(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1343)
  def _reduce_364(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1348)
  def _reduce_365(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1355)
  def _reduce_366(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1363)
  def _reduce_367(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1369)
  def _reduce_368(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1376)
  def _reduce_369(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 370 omitted

module_eval(<<'.,.,', 'ruby22.y', 1383)
  def _reduce_371(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1390)
  def _reduce_372(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1394)
  def _reduce_373(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1400)
  def _reduce_374(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1407)
  def _reduce_375(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1412)
  def _reduce_376(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1418)
  def _reduce_377(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1423)
  def _reduce_378(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

# reduce 379 omitted

module_eval(<<'.,.,', 'ruby22.y', 1431)
  def _reduce_380(val, _values, result)
                          result = @builder.args(nil, [], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1435)
  def _reduce_381(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1440)
  def _reduce_382(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1444)
  def _reduce_383(val, _values, result)
                          result = @builder.args(val[0], [], val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1448)
  def _reduce_384(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1453)
  def _reduce_385(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1457)
  def _reduce_386(val, _values, result)
                          result = val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1462)
  def _reduce_387(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1466)
  def _reduce_388(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1471)
  def _reduce_389(val, _values, result)
                          result = @builder.shadowarg(val[0])
                    
    result
  end
.,.,

# reduce 390 omitted

module_eval(<<'.,.,', 'ruby22.y', 1476)
  def _reduce_391(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1480)
  def _reduce_392(val, _values, result)
                          result = @lexer.cmdarg.dup
                      @lexer.cmdarg.clear
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1485)
  def _reduce_393(val, _values, result)
                          @lexer.cmdarg = val[2]
                      @lexer.cmdarg.lexpop

                      result = [ val[1], val[3] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1495)
  def _reduce_394(val, _values, result)
                          result = @builder.args(val[0], val[1].concat(val[2]), val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1499)
  def _reduce_395(val, _values, result)
                          result = @builder.args(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1504)
  def _reduce_396(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1508)
  def _reduce_397(val, _values, result)
                          result = [ val[0], val[1], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1513)
  def _reduce_398(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1517)
  def _reduce_399(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1524)
  def _reduce_400(val, _values, result)
                          begin_t, block_args, body, end_t = val[1]
                      result      = @builder.block(val[0],
                                      begin_t, block_args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1530)
  def _reduce_401(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1536)
  def _reduce_402(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      method_call = @builder.call_method(val[0], val[1], val[2],
                                      lparen_t, args, rparen_t)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1546)
  def _reduce_403(val, _values, result)
                          method_call = @builder.call_method(val[0], val[1], val[2],
                                      nil, val[3], nil)

                      begin_t, args, body, end_t = val[4]
                      result      = @builder.block(method_call,
                                      begin_t, args, body, end_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1556)
  def _reduce_404(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.call_method(nil, nil, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1562)
  def _reduce_405(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1568)
  def _reduce_406(val, _values, result)
                          lparen_t, args, rparen_t = val[3]
                      result = @builder.call_method(val[0], val[1], val[2],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1574)
  def _reduce_407(val, _values, result)
                          result = @builder.call_method(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1578)
  def _reduce_408(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1584)
  def _reduce_409(val, _values, result)
                          lparen_t, args, rparen_t = val[2]
                      result = @builder.call_method(val[0], val[1], nil,
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1590)
  def _reduce_410(val, _values, result)
                          lparen_t, args, rparen_t = val[1]
                      result = @builder.keyword_cmd(:super, val[0],
                                  lparen_t, args, rparen_t)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1596)
  def _reduce_411(val, _values, result)
                          result = @builder.keyword_cmd(:zsuper, val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1600)
  def _reduce_412(val, _values, result)
                          result = @builder.index(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1605)
  def _reduce_413(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1609)
  def _reduce_414(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1615)
  def _reduce_415(val, _values, result)
                          @static_env.extend_dynamic
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1619)
  def _reduce_416(val, _values, result)
                          result = [ val[0], val[2], val[3], val[4] ]

                      @static_env.unextend
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1626)
  def _reduce_417(val, _values, result)
                          result = [ @builder.when(val[0], val[1], val[2], val[3]),
                                 *val[4] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1632)
  def _reduce_418(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 419 omitted

module_eval(<<'.,.,', 'ruby22.y', 1638)
  def _reduce_420(val, _values, result)
                          assoc_t, exc_var = val[2]

                      if val[1]
                        exc_list = @builder.array(nil, val[1], nil)
                      end

                      result = [ @builder.rescue_body(val[0],
                                      exc_list, assoc_t, exc_var,
                                      val[3], val[4]),
                                 *val[5] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1651)
  def _reduce_421(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1656)
  def _reduce_422(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

# reduce 423 omitted

# reduce 424 omitted

module_eval(<<'.,.,', 'ruby22.y', 1663)
  def _reduce_425(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 426 omitted

module_eval(<<'.,.,', 'ruby22.y', 1669)
  def _reduce_427(val, _values, result)
                          result = [ val[0], val[1] ]
                    
    result
  end
.,.,

# reduce 428 omitted

# reduce 429 omitted

# reduce 430 omitted

# reduce 431 omitted

module_eval(<<'.,.,', 'ruby22.y', 1679)
  def _reduce_432(val, _values, result)
                          result = @builder.string_compose(nil, val[0], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1684)
  def _reduce_433(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1688)
  def _reduce_434(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1693)
  def _reduce_435(val, _values, result)
                          result = @builder.string_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1697)
  def _reduce_436(val, _values, result)
                          result = @builder.string(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1701)
  def _reduce_437(val, _values, result)
                          result = @builder.character(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1706)
  def _reduce_438(val, _values, result)
                          result = @builder.xstring_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1711)
  def _reduce_439(val, _values, result)
                          opts   = @builder.regexp_options(val[3])
                      result = @builder.regexp_compose(val[0], val[1], val[2], opts)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1717)
  def _reduce_440(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1722)
  def _reduce_441(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1726)
  def _reduce_442(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1731)
  def _reduce_443(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1735)
  def _reduce_444(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1740)
  def _reduce_445(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1745)
  def _reduce_446(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1749)
  def _reduce_447(val, _values, result)
                          result = val[0] << @builder.word(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1754)
  def _reduce_448(val, _values, result)
                          result = @builder.words_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1759)
  def _reduce_449(val, _values, result)
                          result = @builder.symbols_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1764)
  def _reduce_450(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1768)
  def _reduce_451(val, _values, result)
                          result = val[0] << @builder.string_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1773)
  def _reduce_452(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1777)
  def _reduce_453(val, _values, result)
                          result = val[0] << @builder.symbol_internal(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1782)
  def _reduce_454(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1786)
  def _reduce_455(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1791)
  def _reduce_456(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1795)
  def _reduce_457(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1800)
  def _reduce_458(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1804)
  def _reduce_459(val, _values, result)
                          result = val[0] << val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1809)
  def _reduce_460(val, _values, result)
                          result = @builder.string_internal(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1813)
  def _reduce_461(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1817)
  def _reduce_462(val, _values, result)
                          @lexer.cond.push(false)
                      @lexer.cmdarg.push(false)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1822)
  def _reduce_463(val, _values, result)
                          @lexer.cond.lexpop
                      @lexer.cmdarg.lexpop

                      result = @builder.begin(val[0], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1830)
  def _reduce_464(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1834)
  def _reduce_465(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1838)
  def _reduce_466(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

# reduce 467 omitted

module_eval(<<'.,.,', 'ruby22.y', 1845)
  def _reduce_468(val, _values, result)
                          result = @builder.symbol(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1850)
  def _reduce_469(val, _values, result)
                          result = @builder.symbol_compose(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1855)
  def _reduce_470(val, _values, result)
                          result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1859)
  def _reduce_471(val, _values, result)
                          result = @builder.negate(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1864)
  def _reduce_472(val, _values, result)
                          result = @builder.integer(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1868)
  def _reduce_473(val, _values, result)
                          result = @builder.float(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1872)
  def _reduce_474(val, _values, result)
                          result = @builder.rational(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1876)
  def _reduce_475(val, _values, result)
                          result = @builder.complex(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1881)
  def _reduce_476(val, _values, result)
                          result = @builder.ident(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1885)
  def _reduce_477(val, _values, result)
                          result = @builder.ivar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1889)
  def _reduce_478(val, _values, result)
                          result = @builder.gvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1893)
  def _reduce_479(val, _values, result)
                          result = @builder.const(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1897)
  def _reduce_480(val, _values, result)
                          result = @builder.cvar(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1902)
  def _reduce_481(val, _values, result)
                          result = @builder.nil(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1906)
  def _reduce_482(val, _values, result)
                          result = @builder.self(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1910)
  def _reduce_483(val, _values, result)
                          result = @builder.true(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1914)
  def _reduce_484(val, _values, result)
                          result = @builder.false(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1918)
  def _reduce_485(val, _values, result)
                          result = @builder.__FILE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1922)
  def _reduce_486(val, _values, result)
                          result = @builder.__LINE__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1926)
  def _reduce_487(val, _values, result)
                          result = @builder.__ENCODING__(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1931)
  def _reduce_488(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1935)
  def _reduce_489(val, _values, result)
                          result = @builder.accessible(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1940)
  def _reduce_490(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1944)
  def _reduce_491(val, _values, result)
                          result = @builder.assignable(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1949)
  def _reduce_492(val, _values, result)
                          result = @builder.nth_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1953)
  def _reduce_493(val, _values, result)
                          result = @builder.back_ref(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1958)
  def _reduce_494(val, _values, result)
                          result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1962)
  def _reduce_495(val, _values, result)
                          @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1966)
  def _reduce_496(val, _values, result)
                          result = [ val[0], val[2] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1970)
  def _reduce_497(val, _values, result)
                          yyerrok
                      result = nil
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1976)
  def _reduce_498(val, _values, result)
                          result = @builder.args(val[0], val[1], val[2])

                      @lexer.state = :expr_value
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1981)
  def _reduce_499(val, _values, result)
                          result = @lexer.in_kwarg
                      @lexer.in_kwarg = true
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1986)
  def _reduce_500(val, _values, result)
                          @lexer.in_kwarg = val[0]
                      result = @builder.args(nil, val[1], nil)
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1992)
  def _reduce_501(val, _values, result)
                          result = val[0].concat(val[2]).concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 1996)
  def _reduce_502(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2000)
  def _reduce_503(val, _values, result)
                          result = val[0].concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2004)
  def _reduce_504(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2009)
  def _reduce_505(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2013)
  def _reduce_506(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2018)
  def _reduce_507(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2025)
  def _reduce_508(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[6]).
                                  concat(val[7])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2033)
  def _reduce_509(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2039)
  def _reduce_510(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2046)
  def _reduce_511(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2052)
  def _reduce_512(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2059)
  def _reduce_513(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2064)
  def _reduce_514(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2070)
  def _reduce_515(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[4]).
                                  concat(val[5])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2077)
  def _reduce_516(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2082)
  def _reduce_517(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2088)
  def _reduce_518(val, _values, result)
                          result = val[0].
                                  concat(val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2093)
  def _reduce_519(val, _values, result)
                          result = val[0].
                                  concat(val[2]).
                                  concat(val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2099)
  def _reduce_520(val, _values, result)
                          result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2103)
  def _reduce_521(val, _values, result)
                          result = []
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2108)
  def _reduce_522(val, _values, result)
                          diagnostic :error, :argument_const, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2112)
  def _reduce_523(val, _values, result)
                          diagnostic :error, :argument_ivar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2116)
  def _reduce_524(val, _values, result)
                          diagnostic :error, :argument_gvar, nil, val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2120)
  def _reduce_525(val, _values, result)
                          diagnostic :error, :argument_cvar, nil, val[0]
                    
    result
  end
.,.,

# reduce 526 omitted

module_eval(<<'.,.,', 'ruby22.y', 2126)
  def _reduce_527(val, _values, result)
                          @static_env.declare val[0][0]

                      result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2133)
  def _reduce_528(val, _values, result)
                          result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2138)
  def _reduce_529(val, _values, result)
                          result = @builder.arg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2142)
  def _reduce_530(val, _values, result)
                          result = @builder.multi_lhs(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2147)
  def _reduce_531(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2151)
  def _reduce_532(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2156)
  def _reduce_533(val, _values, result)
                          check_kwarg_name(val[0])

                      @static_env.declare val[0][0]

                      result = val[0]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2165)
  def _reduce_534(val, _values, result)
                          result = @builder.kwoptarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2169)
  def _reduce_535(val, _values, result)
                          result = @builder.kwarg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2174)
  def _reduce_536(val, _values, result)
                          result = @builder.kwoptarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2178)
  def _reduce_537(val, _values, result)
                          result = @builder.kwarg(val[0])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2183)
  def _reduce_538(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2187)
  def _reduce_539(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2192)
  def _reduce_540(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2196)
  def _reduce_541(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 542 omitted

# reduce 543 omitted

module_eval(<<'.,.,', 'ruby22.y', 2203)
  def _reduce_544(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.kwrestarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2209)
  def _reduce_545(val, _values, result)
                          result = [ @builder.kwrestarg(val[0]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2214)
  def _reduce_546(val, _values, result)
                          result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2219)
  def _reduce_547(val, _values, result)
                          result = @builder.optarg(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2224)
  def _reduce_548(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2228)
  def _reduce_549(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2233)
  def _reduce_550(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2237)
  def _reduce_551(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

# reduce 552 omitted

# reduce 553 omitted

module_eval(<<'.,.,', 'ruby22.y', 2244)
  def _reduce_554(val, _values, result)
                          @static_env.declare val[1][0]

                      result = [ @builder.restarg(val[0], val[1]) ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2250)
  def _reduce_555(val, _values, result)
                          result = [ @builder.restarg(val[0]) ]
                    
    result
  end
.,.,

# reduce 556 omitted

# reduce 557 omitted

module_eval(<<'.,.,', 'ruby22.y', 2257)
  def _reduce_558(val, _values, result)
                          @static_env.declare val[1][0]

                      result = @builder.blockarg(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2264)
  def _reduce_559(val, _values, result)
                          result = [ val[1] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2268)
  def _reduce_560(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 561 omitted

module_eval(<<'.,.,', 'ruby22.y', 2274)
  def _reduce_562(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2279)
  def _reduce_563(val, _values, result)
                          result = []
                    
    result
  end
.,.,

# reduce 564 omitted

module_eval(<<'.,.,', 'ruby22.y', 2285)
  def _reduce_565(val, _values, result)
                          result = [ val[0] ]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2289)
  def _reduce_566(val, _values, result)
                          result = val[0] << val[2]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2294)
  def _reduce_567(val, _values, result)
                          result = @builder.pair(val[0], val[1], val[2])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2298)
  def _reduce_568(val, _values, result)
                          result = @builder.pair_keyword(val[0], val[1])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2302)
  def _reduce_569(val, _values, result)
                          result = @builder.pair_quoted(val[0], val[1], val[2], val[3])
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2306)
  def _reduce_570(val, _values, result)
                          result = @builder.kwsplat(val[0], val[1])
                    
    result
  end
.,.,

# reduce 571 omitted

# reduce 572 omitted

# reduce 573 omitted

# reduce 574 omitted

# reduce 575 omitted

# reduce 576 omitted

# reduce 577 omitted

# reduce 578 omitted

# reduce 579 omitted

# reduce 580 omitted

# reduce 581 omitted

# reduce 582 omitted

# reduce 583 omitted

# reduce 584 omitted

# reduce 585 omitted

# reduce 586 omitted

module_eval(<<'.,.,', 'ruby22.y', 2317)
  def _reduce_587(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

module_eval(<<'.,.,', 'ruby22.y', 2321)
  def _reduce_588(val, _values, result)
                          result = val[1]
                    
    result
  end
.,.,

# reduce 589 omitted

# reduce 590 omitted

# reduce 591 omitted

module_eval(<<'.,.,', 'ruby22.y', 2327)
  def _reduce_592(val, _values, result)
                        yyerrok
                  
    result
  end
.,.,

# reduce 593 omitted

# reduce 594 omitted

# reduce 595 omitted

module_eval(<<'.,.,', 'ruby22.y', 2336)
  def _reduce_596(val, _values, result)
                        result = nil
                  
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Ruby22
  end   # module Parser
